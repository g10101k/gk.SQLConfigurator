<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ribbonDropDownItemImpl3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>