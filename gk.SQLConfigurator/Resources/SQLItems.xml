<?xml version="1.0"?>
<ItemChangerList xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <Items>
    <ItemChanger>
      <Name>LDS.Продукты</Name>
      <GetSQL>select 
	'x' as [Select(x)], 
	* 
from 
	[product]
where {0} </GetSQL>
      <GetSQLWhereString>Name like '*'</GetSQLWhereString>
      <CreateSql>DECLARE @ProductUid uniqueidentifier = NEWID();
EXEC [dbo].[Product_Insert] @ProductUid, '$(Code)', '$(Name)', $(IsActive), NULL, '$(Code)', '$(Name)', $(InAccrScope)	
</CreateSql>
      <EditSql>update [Product] set 
	Code = '$(Code)', 
	Name = '$(Name)', 
	IsActive = @IsActive, 
	InAccrScope = @InAccrScope 
where
	ProductUid = '$(ProductUid)'</EditSql>
      <CreateoreditSql>raiserror (-1,-1, 'Not implemented');  </CreateoreditSql>
      <DeleteSql>delete from Product where ProductUid = '$(ProductUid)'</DeleteSql>
      <ImageBuffer>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</ImageBuffer>
    </ItemChanger>
    <ItemChanger>
      <Name>LDS.Лаборатории</Name>
      <GetSQL>SELECT 
	'x' as [Select(x)],
	[SubdivisionId], 
	[Code], 
	[Name], 
	[Description], 
	[SubdivisionUID]
from [dbo].[Subdivision]
where 
	{0}</GetSQL>
      <GetSQLWhereString>Name like '*'</GetSQLWhereString>
      <CreateSql>raiserror (-1,-1, 'Not implemented');  </CreateSql>
      <EditSql>raiserror (-1,-1, 'Not implemented');  </EditSql>
      <CreateoreditSql>raiserror (-1,-1, 'Not implemented');  </CreateoreditSql>
      <DeleteSql>raiserror (-1,-1, 'Not implemented');  </DeleteSql>
      <ImageBuffer>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</ImageBuffer>
    </ItemChanger>
    <ItemChanger>
      <Name>LDS.Журналы</Name>
      <GetSQL>RAISERROR (-1,-1, 'Not implemented');  </GetSQL>
      <GetSQLWhereString>Name like "*"</GetSQLWhereString>
      <CreateSql>RAISERROR (-1,-1, 'Not implemented');  </CreateSql>
      <EditSql>RAISERROR (-1,-1, 'Not implemented');  </EditSql>
      <CreateoreditSql>RAISERROR (-1,-1, 'Not implemented');  </CreateoreditSql>
      <DeleteSql>RAISERROR (-1,-1, 'Not implemented');  </DeleteSql>
      <ImageBuffer>iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAUZSURBVFhHxdfJTxtXHAdwut6atlLh1msTpVLU9tBKvVRqD1H/irZSDz30VEVqkwj10HQBUhIgYVFC8AIGQ9iMScELXtlXs9jsGBsbe4wN2HjBNvPt79lmNwSKTJ/0FaPxm/l95r2ZeUMWgP81p7U3Jw1NiK7NRGwWvWZAIfiG9r2a/Oly2rsThkYgtAJse4HYFjZcixhWChrK8m69neqT0ZYzyQBBOyHcQDxII8YaD4elG9qm4m+pT0ZHJGfS2JQEBF3gowEqvpMAgA9j3W6CUlr4HfXLCOKV2z/98PlhgD8J4OMAw8R8NBJaX5O49Ff9C0loQFWPPpUUGrkY6hbBWEfDk9/b6sq+ltWWfdrZ+OQzds7kqdO3Nyy6Os6ka8SwpgFDXfUYVNVhQs+mwHYYsBMDv70JRDxAwIaRf0pgGxDCNSHD2rwegdVxcFYTFqb6MN6vxKjxBUYNcozq5RjWy2AytMKir+VYzWTprKzXP7jV3u2ZaAfCK+A3lxBfn0PcNwOT7vnJgDBHWcW0Ih/WfiEcpla4ZzQ0NSOIbDrBx0LU/2CL0rF0H/F+eCY7wGqy2gxw5eovSrhGZYlhDdm6EbRqEVhUYUxLgK3TARYCLPXtA3y2YQS4eUQCHM0WFWXHxKhw2As+SE8UgnCb2nH1ZwV7CVxhgOwkoJUeN08CsGXVEUB9YcBOCsBHt+i+9WJniwA7AayOtu0CshkghwGcI800rxxCdgagucwkYKSVAEoGyNkHDNMdH3FfAsBPF9tyHOAYpDs+7CRAT2YB8U262GawmocBA1Qs5LgEwAYcQ03HASv9UgLYMwxw0BOxjpXBhqMAFex9dVTIdgkAH1YG6tMAemvpzbZ0CQAvXaz0OMDWKyHAIgF6MwuIrtHF1qUB9FQD/oXjgNRyvLcaXhjAYbmn9jhguVsMbM4dArDFCWE6KLKW+h5gS3H8ggA31aomgOoIwCgiwOwhwHRPI6xjHXDPDyAW8tHJUi1GoxGm1fC/ALbdsBrFRwFqWPVCYMOyB/ATwDkug3WwHmadECOKpzBpJfDYzIkTIkqgiIsABecEuLBkEB0B3FZjUScA1s0IpwCbC2pszHTAa5HT8tkM15iU1n0RzF1PMaqqgn/VQggPLcdnB/BBNp2rBBCmAWgrCTB5CLBOgDWzHNwEA9TTK7QG9v4qLBkrMKasoI8PM2ZUhfQ9IEqMFjerhY++B5IAzwkAJxb1VWkAmiQg4uhHcNlAU9CFjdlOGoF2rE21gBt/Tkt2LZxDInprVtJVPMYyLeFzmiLYh2rgnpLDu2ikkRlHyGtFNERf0nyMAHTjxunjZHudnqZV+ksA3TOwmnuAa3e6YNURwE/zyw0j5uylkdAjuKSCf76Drr4Bk6oKGBoKoBTfg0L8G7S192BWl2Ba/QA6aT4UNX9CKcnHYEcV5kYUCProvb/XCAFC7NB9w3OwGgS4ducA4PpdDZ3wb7QJC9Ei2M0DtLIIH0ImKkKbuBjy6hK01zxKRE5pq04muZ9SXUz9iiCj87RWFaClMh/NlXmp0PazAsgE96GV3Mf1u137gBu5GpSXP0JRaRkeviS7fR6UlqNT+FcibPvgb6eF9WG1buQeAHyS2+nP/l6C80ZS8QfySh6n/e1lYTV3Ae9QPqZ8SfnqjLn54Y8i3e7J2Dbbd6TPaWG1WE1WO/F9zjaY5qx5n/IR5YtU2Dbbl67vSWE19/43OG97jfIW5b1U2Dbbd86WlfUv1O5SeewZwv0AAAAASUVORK5CYII=</ImageBuffer>
    </ItemChanger>
    <ItemChanger>
      <Name>LDS.Пользователи</Name>
      <GetSQL>select 
    'x' as [Select(x)], 
    u.UserId,
    u.Name,
    u.FullName,
    u.Hash,
    u.Salt,
    u.Description,
    u.Enable,
    u.UserUID,
    '' as NewPassword,
    stuff((
        select ',' + convert(nvarchar, ug.[GroupId])
        from [dbo].[UserGroup] ug 
        where ug.UserId = u.UserId
        FOR XML PATH ('')
    ), 1, 1, '') GroupIds
from [dbo].[User] u 
where {0}</GetSQL>
      <GetSQLWhereString>Name like '*'</GetSQLWhereString>
      <CreateSql>DECLARE @newPassword nvarchar(max) = N'@NewPassword'
DECLARE @userUID nvarchar(max) = '@UserUID'
IF @userUID = '' 
BEGIN
    SELECT @userUID=newid()
END

INSERT INTO [dbo].[User]([Name], [FullName], [Hash], [Salt], [Description], [Enable], [UserUID]) 
	VALUES(N'@Name', N'@FullName', @Hash, @Salt, N'@Description', @Enable, @userUID)
</CreateSql>
      <EditSql>update [User] set 
	Name = '@Name', 
	FullName = '@FullName', 
	Description = '@Description', 
	Hash = @Hash, 
	Salt = @Salt, 
	Enable = @Enable
where
	UserId = @UserId
	
declare @groupstbl table (id int)
declare @userid int = @UserId
declare @usrGroups nvarchar(max) = '@GroupIds'

insert into @groupstbl
select convert(int, Item) from [dbo].[spc_sys_ParseString](@usrGroups, ',')

delete from usergroup where groupid not in (select * from @groupstbl) and userid = @userid

insert into usergroup (UserId, GroupId)
select @userid, id 
from @groupstbl 
where 1=1
    and id not in (select groupid from [usergroup] where UserId =  @userid) 
    and id in (select g2.GroupId from [group] g2)

declare @newPassword nvarchar(max)  = '@NewPassword'
if (@newPassword &lt;&gt; '' and @newPassword &lt;&gt; 'null')
exec dbo.LDSExtension_SetUserPassword @userid, @newPassword</EditSql>
      <CreateoreditSql>RAISERROR (-1,-1, 'Not implemented');  </CreateoreditSql>
      <DeleteSql>declare @userID int

	if not exists(select * from [User] where name = '@Name')
	begin
		print '@Name' + ' не найден *************************************************************' 
	end
	ELSE	
		select @userID=userid from [user] where name = '@Name'

		--если пользователь уже засветился в операциях ЛИМС
		declare @oldID int =@userID
		declare @newID int =1--администратор
		
		update chkp set UserId = @newID where UserId=@oldID
		update ChkPSign set UserId = @newID where UserId=@oldID
		update ControlChart set UserId = @newID where UserId=@oldID
		update LL set UserId = @newID where UserId=@oldID
		update QCfGNoplog set UserId = @newID where UserId=@oldID
		update QCfGNuser set UserId = @newID where UserId=@oldID
		update samplelog set UserId = @newID where UserId=@oldID
		update SampleLogProof set UserId = @newID where UserId=@oldID
		update SampleLogViewUser set UserId = @newID where UserId=@oldID

		update TaskContentSecurity set UserId = @newID where UserId=@oldID
		update TaskRuleEventFreq set AutorId = @newID where AutorId=@oldID
		update TrainingControl set UserId = @newID where UserId=@oldID
		update Traininguser set UserId = @newID where UserId=@oldID

				
		delete from TrainingUser where UserId=@userID
		delete from UserEd where UserId=@userID
		delete from UserMapping where UserId=@userID
		delete from UserPositionHistory where UserId=@userID
		delete from TrainingControl where UserId=@userID
		delete from NotificationUser where UserId=@userID

		delete from signuser where UserId=@userID
		delete from SubdivisionUser where UserId=@userID
		delete from UserGroup where UserId=@userID
		delete from UserProp where UserId=@userID
		delete from UserRole where UserId=@userID
		delete from [User] where UserId=@userID
		</DeleteSql>
      <ImageBuffer>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</ImageBuffer>
    </ItemChanger>
    <ItemChanger>
      <Name>LDS.Импортеры</Name>
      <GetSQL>SELECT 'x' as [Select(x)], 
[Name], 
[ImporterUid], 
[ImporterTypeUid], 
[Settings], 
[RV] 
FROM [Importer]
WHERE {0}</GetSQL>
      <GetSQLWhereString>Name like '*'</GetSQLWhereString>
      <CreateSql>raiserror (-1,-1, 'Not implemented');  </CreateSql>
      <EditSql>update [User] set 
Name = '@Name', 
FullName= '@FullName', 
Description = '@Description', 
Enable= @Enable
where
  UserId= '@UserId'

</EditSql>
      <CreateoreditSql>raiserror (-1,-1, 'Not implemented');  </CreateoreditSql>
      <DeleteSql>raiserror (-1,-1, 'Not implemented');  </DeleteSql>
      <ImageBuffer>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</ImageBuffer>
    </ItemChanger>
    <ItemChanger>
      <Name>LDS.ШО</Name>
      <GetSQL>select 'x' as [Select(x)], [STUid], [Name], [Code], [ProductUid] from [ST]
where {0}
</GetSQL>
      <GetSQLWhereString>[Code] like '*'</GetSQLWhereString>
      <CreateSql>raiserror (-1,-1, 'Not implemented');  </CreateSql>
<<<<<<< HEAD
      <EditSql>UPDATE [ST] SET 
	Name = '$(Name)', 
	Code= '$(Code)'
WHERE
	STUid= '$(STUid)'</EditSql>
=======
      <EditSql>update [ST] set 
	Name = '@Name', 
	Code= '@Code'
where
	STUid= '@STUid'

</EditSql>
>>>>>>> f9e2b8ba9e83f893be806983a34e31492008d1fa
      <CreateoreditSql>raiserror (-1,-1, 'Not implemented');  </CreateoreditSql>
      <DeleteSql>	DECLARE @STUID AS UNIQUEIDENTIFIER = '@STUid'
    BEGIN TRANSACTION;
    BEGIN TRY

        DELETE FROM [STCPTTVerAnalog] WHERE [STCPTTVerAnalog].[STCPTTVerId] IN (
            SELECT [STCPTTVer].[STCPTTVerId] FROM [STCPTTVer] WHERE [STCPTTVer].[STCPTTUid] IN (
                SELECT [STCPTT].[STCPTTUid] FROM [STCPTT] WHERE [STCPTT].[STCPTUid] IN (
                    SELECT [STCPT].[STCPTUid] FROM [STCPT] WHERE [STCPT].[STCPUid] IN (
                        SELECT [STCP].[STCPUid] FROM [STCP] WHERE [STCP].[STUid] IN (
                            @STUID
                        )
                    )
                )
            )
        );
        DELETE FROM [STCPTTVerAnalogProp] WHERE [STCPTTVerAnalogProp].[STCPTTVerId] IN (
            SELECT [STCPTTVer].[STCPTTVerId] FROM [STCPTTVer] WHERE [STCPTTVer].[STCPTTUid] IN (
                SELECT [STCPTT].[STCPTTUid] FROM [STCPTT] WHERE [STCPTT].[STCPTUid] IN (
                    SELECT [STCPT].[STCPTUid] FROM [STCPT] WHERE [STCPT].[STCPUid] IN (
                        SELECT [STCP].[STCPUid] FROM [STCP] WHERE [STCP].[STUid] IN (
                            @STUID
                        )
                    )
                )
            )
        );
        DELETE FROM [STCPTTVerDigit] WHERE [STCPTTVerDigit].[STCPTTVerId] IN (
            SELECT [STCPTTVer].[STCPTTVerId] FROM [STCPTTVer] WHERE [STCPTTVer].[STCPTTUid] IN (
                SELECT [STCPTT].[STCPTTUid] FROM [STCPTT] WHERE [STCPTT].[STCPTUid] IN (
                    SELECT [STCPT].[STCPTUid] FROM [STCPT] WHERE [STCPT].[STCPUid] IN (
                        SELECT [STCP].[STCPUid] FROM [STCP] WHERE [STCP].[STUid] IN (
                            @STUID
                        )
                    )
                )
            )
        );
        DELETE FROM [STCPTTVerDigitProp] WHERE [STCPTTVerDigitProp].[STCPTTVerId] IN (
            SELECT [STCPTTVer].[STCPTTVerId] FROM [STCPTTVer] WHERE [STCPTTVer].[STCPTTUid] IN (
                SELECT [STCPTT].[STCPTTUid] FROM [STCPTT] WHERE [STCPTT].[STCPTUid] IN (
                    SELECT [STCPT].[STCPTUid] FROM [STCPT] WHERE [STCPT].[STCPUid] IN (
                        SELECT [STCP].[STCPUid] FROM [STCP] WHERE [STCP].[STUid] IN (
                            @STUID
                        )
                    )
                )
            )
        );
        DELETE FROM [STCPTTVerTag] WHERE [STCPTTVerTag].[STCPTTVerId] IN (
            SELECT [STCPTTVer].[STCPTTVerId] FROM [STCPTTVer] WHERE [STCPTTVer].[STCPTTUid] IN (
                SELECT [STCPTT].[STCPTTUid] FROM [STCPTT] WHERE [STCPTT].[STCPTUid] IN (
                    SELECT [STCPT].[STCPTUid] FROM [STCPT] WHERE [STCPT].[STCPUid] IN (
                        SELECT [STCP].[STCPUid] FROM [STCP] WHERE [STCP].[STUid] IN (
                            @STUID
                        )
                    )
                )
            )
        );
        DELETE FROM [STCPTTVerGroup] WHERE [STCPTTVerGroup].[STCPTTVerId] IN (
            SELECT [STCPTTVer].[STCPTTVerId] FROM [STCPTTVer] WHERE [STCPTTVer].[STCPTTUid] IN (
                SELECT [STCPTT].[STCPTTUid] FROM [STCPTT] WHERE [STCPTT].[STCPTUid] IN (
                    SELECT [STCPT].[STCPTUid] FROM [STCPT] WHERE [STCPT].[STCPUid] IN (
                        SELECT [STCP].[STCPUid] FROM [STCP] WHERE [STCP].[STUid] IN (
                            @STUID
                        )
                    )
                )
            )
        );
        DELETE FROM [AcsItemEventFreq] WHERE [AcsItemEventFreq].[AcsItemUid] IN (
            SELECT [AcsItem].[AcsItemUid] FROM [AcsItem] WHERE [AcsItem].[STCPTTUid] IN (
                SELECT [STCPTT].[STCPTTUid] FROM [STCPTT] WHERE [STCPTT].[STCPTUid] IN (
                    SELECT [STCPT].[STCPTUid] FROM [STCPT] WHERE [STCPT].[STCPUid] IN (
                        SELECT [STCP].[STCPUid] FROM [STCP] WHERE [STCP].[STUid] IN (
                            @STUID
                        )
                    )
                )
            )
        );
        DELETE FROM [AcsItem] WHERE [AcsItem].[STCPTTUid] IN (
            SELECT [STCPTT].[STCPTTUid] FROM [STCPTT] WHERE [STCPTT].[STCPTUid] IN (
                SELECT [STCPT].[STCPTUid] FROM [STCPT] WHERE [STCPT].[STCPUid] IN (
                    SELECT [STCP].[STCPUid] FROM [STCP] WHERE [STCP].[STUid] IN (
                        @STUID
                    )
                )
            )
        );
        DELETE FROM [STCPTTVer] WHERE [STCPTTVer].[STCPTTUid] IN (
            SELECT [STCPTT].[STCPTTUid] FROM [STCPTT] WHERE [STCPTT].[STCPTUid] IN (
                SELECT [STCPT].[STCPTUid] FROM [STCPT] WHERE [STCPT].[STCPUid] IN (
                    SELECT [STCP].[STCPUid] FROM [STCP] WHERE [STCP].[STUid] IN (
                        @STUID
                    )
                )
            )
        );
        DELETE FROM [STCPTT] WHERE [STCPTT].[STCPTUid] IN (
            SELECT [STCPT].[STCPTUid] FROM [STCPT] WHERE [STCPT].[STCPUid] IN (
                SELECT [STCP].[STCPUid] FROM [STCP] WHERE [STCP].[STUid] IN (
                    @STUID
                )
            )
        );
        DELETE FROM [Version] WHERE [Version].[ObjectUid] IN (
            SELECT [STCPTT].[STCPTTUid] FROM [STCPTT] WHERE [STCPTT].[STCPTUid] IN (
                SELECT [STCPT].[STCPTUid] FROM [STCPT] WHERE [STCPT].[STCPUid] IN (
                    SELECT [STCP].[STCPUid] FROM [STCP] WHERE [STCP].[STUid] IN (
                        @STUID
                    )
                )
            )
        );
        DELETE FROM [ObjectProp] WHERE [ObjectProp].[ObjectPropUid] IN (
            SELECT [STCPTT].[STCPTTUid] FROM [STCPTT] WHERE [STCPTT].[STCPTUid] IN (
                SELECT [STCPT].[STCPTUid] FROM [STCPT] WHERE [STCPT].[STCPUid] IN (
                    SELECT [STCP].[STCPUid] FROM [STCP] WHERE [STCP].[STUid] IN (
                        @STUID
                    )
                )
            )
        );
        DELETE FROM [Object] WHERE [Object].[ObjectUid] IN (
            SELECT [STCPTT].[STCPTTUid] FROM [STCPTT] WHERE [STCPTT].[STCPTUid] IN (
                SELECT [STCPT].[STCPTUid] FROM [STCPT] WHERE [STCPT].[STCPUid] IN (
                    SELECT [STCP].[STCPUid] FROM [STCP] WHERE [STCP].[STUid] IN (
                        @STUID
                    )
                )
            )
        );
        DELETE FROM [STCPVerTag] where [STCPVerTag].STCPVerId in (
            SELECT STCPVerId FROM [STCPTVer] WHERE [STCPTVer].[STCPTUid] IN (
                SELECT [STCPT].[STCPTUid] FROM [STCPT] WHERE [STCPT].[STCPUid] IN (
                    SELECT [STCP].[STCPUid] FROM [STCP] WHERE [STCP].[STUid] IN (
                        @STUID
                    )
                )
            )
        );	
        DELETE FROM [STCPTVer] WHERE [STCPTVer].[STCPTUid] IN (
            SELECT [STCPT].[STCPTUid] FROM [STCPT] WHERE [STCPT].[STCPUid] IN (
                SELECT [STCP].[STCPUid] FROM [STCP] WHERE [STCP].[STUid] IN (
                    @STUID
                )
            )
        );
        DELETE FROM [STCPT] WHERE [STCPT].[STCPUid] IN (
            SELECT [STCP].[STCPUid] FROM [STCP] WHERE [STCP].[STUid] IN (
                @STUID
            )
        );
        DELETE FROM [Version] WHERE [Version].[ObjectUid] IN (
            SELECT [STCPT].[STCPTUid] FROM [STCPT] WHERE [STCPT].[STCPUid] IN (
                SELECT [STCP].[STCPUid] FROM [STCP] WHERE [STCP].[STUid] IN (
                    @STUID
                )
            )
        );
        DELETE FROM [ObjectProp] WHERE [ObjectProp].[ObjectPropUid] IN (
            SELECT [STCPT].[STCPTUid] FROM [STCPT] WHERE [STCPT].[STCPUid] IN (
                SELECT [STCP].[STCPUid] FROM [STCP] WHERE [STCP].[STUid] IN (
                    @STUID
                )
            )
        );
        DELETE FROM [Object] WHERE [Object].[ObjectUid] IN (
            SELECT [STCPT].[STCPTUid] FROM [STCPT] WHERE [STCPT].[STCPUid] IN (
                SELECT [STCP].[STCPUid] FROM [STCP] WHERE [STCP].[STUid] IN (
                    @STUID
                )
            )
        );
        DELETE FROM [STUserFieldresultset] where [STUserFieldresultset].[STUserFieldId] in (
            SELECT [STUserFieldId] FROM [STUserField] WHERE [STUserField].[STCPVerId] IN (
                SELECT [STCPVer].[STCPVerId] FROM [STCPVer] WHERE [STCPVer].[STCPUid] IN (
                    SELECT [STCP].[STCPUid] FROM [STCP] WHERE [STCP].[STUid] IN (
                        @STUID
                    )
                )
            )
        );	
        DELETE FROM [STUserField] WHERE [STUserField].[STCPVerId] IN (
            SELECT [STCPVer].[STCPVerId] FROM [STCPVer] WHERE [STCPVer].[STCPUid] IN (
                SELECT [STCP].[STCPUid] FROM [STCP] WHERE [STCP].[STUid] IN (
                    @STUID
                )
            )
        );
        DELETE FROM [STCPProject] WHERE [STCPProject].[STCPUid] IN (
            SELECT [STCP].[STCPUid] FROM [STCP] WHERE [STCP].[STUid] IN (
                @STUID
            )
        );
        DELETE FROM [STCPVer] WHERE [STCPVer].[STCPUid] IN (
            SELECT [STCP].[STCPUid] FROM [STCP] WHERE [STCP].[STUid] IN (
                @STUID
            )
        );
        DELETE FROM [STCP] WHERE [STCP].[STUid] IN (
            @STUID
        );
        DELETE FROM [Version] WHERE [Version].[ObjectUid] IN (
            SELECT [STCP].[STCPUid] FROM [STCP] WHERE [STCP].[STUid] IN (
                @STUID
            )
        );
        DELETE FROM [ObjectProp] WHERE [ObjectProp].[ObjectPropUid] IN (
            SELECT [STCP].[STCPUid] FROM [STCP] WHERE [STCP].[STUid] IN (
                @STUID
            )
        );
        DELETE FROM [Object] WHERE [Object].[ObjectUid] IN (
            SELECT [STCP].[STCPUid] FROM [STCP] WHERE [STCP].[STUid] IN (
                @STUID
            )
        );
        DELETE FROM [STVer] WHERE [STVer].[STUid] IN (
            @STUID
        );
        DELETE FROM [ST] WHERE [ST].[STUid] IN (
            @STUID
        );
        DELETE FROM [Version] WHERE [Version].[ObjectUid] IN (
            @STUID
        );
        DELETE FROM [ObjectProp] WHERE [ObjectProp].[ObjectPropUid] IN (
            @STUID
        );
        DELETE FROM [Object] WHERE [Object].[ObjectUid] IN (
            @STUID
        );

    END TRY
    BEGIN CATCH
        SELECT ERROR_MESSAGE();
        IF @@TRANCOUNT &gt; 0
            ROLLBACK TRANSACTION;
    END CATCH

    IF @@TRANCOUNT &gt; 0
    BEGIN
        COMMIT TRANSACTION;
    END</DeleteSql>
      <ImageBuffer>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</ImageBuffer>
    </ItemChanger>
    <ItemChanger>
      <Name>LDS.Показатели</Name>
      <GetSQL>raiserror (-1,-1, 'Not implemented');  </GetSQL>
      <GetSQLWhereString>[Code] like '*Находка*'</GetSQLWhereString>
      <CreateSql>raiserror (-1,-1, 'Not implemented');  </CreateSql>
      <EditSql>raiserror (-1,-1, 'Not implemented');  </EditSql>
      <CreateoreditSql>raiserror (-1,-1, 'Not implemented');  </CreateoreditSql>
      <DeleteSql>raiserror (-1,-1, 'Not implemented');  </DeleteSql>
      <ImageBuffer>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</ImageBuffer>
    </ItemChanger>
    <ItemChanger>
      <Name>LDS.Организационные единицы</Name>
      <GetSQL>select 
    'x' as [Select(x)],    
    ou.[OrgUnitId], 
    oup.OrgUnitPath as [RO.OrgUnitPath],
    ou.[Code], 
    ou.[Name], 
    ou.[Description], 
    isnull((select [Name] from [dbo].[OrgUnit] ou2 where ou2.[OrgUnitId] = ou.[ParentUnitId]), 'null') as ParentName, 
    ou.[OrgUnitUid], 
    ou.[OrgUnitLevelId], 
    ou.[Flags] 
from [dbo].[OrgUnit] ou
inner join [dbo].[OrgUnitProps] oup on oup.OrgUnitId = ou.OrgUnitId
where  {0}
order by [RO.OrgUnitPath]
</GetSQL>
      <GetSQLWhereString>[OrgUnitPath] not like '*рнпк*'</GetSQLWhereString>
      <CreateSql>declare @parent int = (select [OrgUnitId] from [dbo].[OrgUnit] ou where ou.[Name] = '@ParentName')

insert into [dbo].[OrgUnit]([Code], [Name], [Description], [ParentUnitId], [OrgUnitUid], [OrgUnitLevelId], [Flags]) 
        values (N'@Code', N'@Name', N'@Description', @parent, '@OrgUnitUid', @OrgUnitLevelId, @Flags)
</CreateSql>
      <EditSql>update OrgUnit set 
    Name = '@Name', 
    Code = '@Code', 
    Description = '@Description'
where
  OrgUnitUid= '@OrgUnitUid'
</EditSql>
      <CreateoreditSql>raiserror (-1,-1, 'Not implemented');  </CreateoreditSql>
      <DeleteSql>		
		declare 
		@orgUnitId int,
		@parentUnitId int,
		@orgUnitLevelId int, 
		@code nvarchar (50), 
		@description nvarchar (255),
		@orgUnitLevelName nvarchar (150),
		@orgUnitUid uniqueidentifier,
		@flags INT --изменение Гордейчук Виктор от 02.02.2017

		select 
			@orgUnitId = [OrgUnitId],
			@code = [Code],
			@description=[Description],
			@parentUnitId=ParentUnitId,
			@orgUnitLevelId=OrgUnitLevelId,
			@orgUnitUid=OrgUnitUid,
			@flags =Flags --изменение Гордейчук Виктор от 02.02.2017
		from [dbo].[OrgUnit] 
		where [Name] = '@Name'


		if not(@orgUnitId is NULL)
		begin		
			declare @orgUnitname nvarchar(max)
			declare mycursor cursor for
				SELECT c.name 
				FROM [OrgUnit] 
				left join [OrgUnit] C on c.ParentUnitId=[OrgUnit].orgUnitid
				WHERE 1=1
				and OrgUnit.Name ='@Name'

			open mycursor;
			fetch next from mycursor into @orgUnitname;
				while @@FETCH_STATUS = 0
				begin
					print @orgUnitname
					exec dbo._prm_OrgUnit_Delete @orgUnitname --рекурсивное удаление детей
					fetch next from mycursor into @orgUnitname
				end			

			declare @count int=0
			SELECT @count=count(c.name)
			FROM [OrgUnit] 
			left join [OrgUnit] C on c.ParentUnitId=[OrgUnit].orgUnitid
			WHERE 1=1
			and OrgUnit.Name ='@Name'

			
			if @count=0
			begin

				declare @Subdivisionid int
				select @Subdivisionid=Subdivisionid
					from Subdivision
					inner join OrgUnit on OrgUnit.OrgUnitid=Subdivision.Subdivisionid
					where OrgUnit.name='@Name'
				if not(@Subdivisionid is NULL)--это лаборатория, нужно ее отвязать от всех объектов ЛИМС
				begin	
					declare @oldsd int =@Subdivisionid
					declare @newsd int 
					select @newsd=Subdivisionid from Subdivision where name='Без лаборатории'

					update [AODTech] set subdivisionid=null
					update [UserPosition] set subdivisionid=null
					update [StdDocUsingContext] set subdivisionid=@newsd where subdivisionid=@oldsd
					delete from [SampleContext] where subdivisionid=@oldsd
					delete from [EqpSubdivision] where subdivisionid=@oldsd
					delete from [SubdivisionUser]  where subdivisionid=@oldsd 
					delete from [SubdivisionTechTest] where subdivisionid=@oldsd
					delete from [SubdivisionProduct] where subdivisionid=@oldsd
					delete from [SubdivisionTech]  where subdivisionid=@oldsd
					delete from [ObjectSubdivision] where subdivisionid=@oldsd
					delete from [TechTestEqp] where subdivisionid=@oldsd
					delete from [AESubdivision] where subdivisionid=@oldsd   
					delete from [LLTTask] where subdivisionid=@oldsd
                    delete from [RoomTestEventFreq] where RoomTermsTestUid in (select RoomTermsTestUid from  [RoomTermsTest] where subdivisionid=@oldsd)
                    delete from [RoomTermsTest] where subdivisionid=@oldsd
					update STCPTVer set subdivisionid=@newsd where subdivisionid=@oldsd
					update SampleTech set subdivisionid=@newsd where subdivisionid=@oldsd
					update CheckProcInfo  set subdivisionid=@newsd where subdivisionid=@oldsd
					update ClbrGraph  set subdivisionid=@newsd where subdivisionid=@oldsd
					
				end

					--удаление помещений
					declare @roomuid uniqueidentifier
					declare @roomname nvarchar(max)
					declare @RV timestamp
					declare myROOMcursor cursor for
						SELECT ROOM.roomuid,  ROOM.rv, ROOM.name
						FROM ROOM 
						WHERE 1=1
						and ROOMuid in(
							select ROOMuid
							from RoomOrgUnit
							left join OrgUnit on OrgUnit.OrgUnitId=RoomOrgUnit.OrgUnitId
							where OrgUnit.Name ='@Name'
						)
					open myROOMcursor;
					fetch next from myROOMcursor into @roomuid, @RV,@roomname;
					while @@FETCH_STATUS = 0
					begin
						print @roomname
						exec dbo._prm_room_Delete @roomuid, @RV
						fetch next from myROOMcursor into @roomuid, @RV,@roomname;
					end
					close myROOMcursor;
					DEALLOCATE myROOMcursor;


				EXEC [dbo].[spc_OrgUnit_Delete] 
				   DEFAULT
				  ,@orgUnitId
				  ,@code
				  ,'@Name'
				  ,@description
				  ,@parentUnitId
				  ,@orgUnitUid
				  ,@orgUnitLevelId
				  ,@flags --изменение Гордейчук Виктор от 02.02.2017
			end
		end 
		else
		begin
			raiserror (N'Error - OrgUnit with Name = &lt;%s&gt; not found!', -- Message text.
			   10, -- Severity,
			   1, -- State,
			   '@Name' -- 1 argument.
			   )
		end
</DeleteSql>
      <ImageBuffer>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</ImageBuffer>
    </ItemChanger>
    <ItemChanger>
      <Name>LDS.Точки контроля</Name>
      <GetSQL>select
    'x' as [Select(x)], 
    [CP].[Name] as [Name],
    '' as [NewName],
    [CP].[Code] as [Code],
    [CPVer].[Description] as [Description],
    [OrgUnit].Name as [OrgUnitName],
    [CP].[UseExtractionPoint] as [UseExtractionPoint],
    [CP].[IsActive] as [IsActive],
    [CP].[AllowNewEP] as [AllowNewEP],
    [CP].[EPIsRequired] as [EPIsRequired]
from 
    [CP] 
    inner join [CPVer] on [CPVer].CPUid = [CP].CPUid
    inner join [CPOrgUnit] on [CPOrgUnit].CPUid = [CP].CPUid
    inner join [OrgUnit] on [OrgUnit].OrgUnitId = [CPOrgUnit].OrgUnitId
where {0}
</GetSQL>
      <GetSQLWhereString>[CP].[Name] like '*'</GetSQLWhereString>
      <CreateSql>raiserror (-1,-1, 'Not implemented');  </CreateSql>
      <EditSql>raiserror (-1,-1, 'Not implemented');  </EditSql>
      <CreateoreditSql>declare @OrgUnitId int
declare @CPUid uniqueidentifier
declare @NName nvarchar(150) = '@NewName'

select @OrgUnitId = [OrgUnitId] from [dbo].[OrgUnit] where [Name] = '@OrgUnitName'      
if( @OrgUnitId is null )begin
    raiserror (N'Error - OrgUnit with Name = &lt;%s&gt; not found!', -- Message text.
        10, -- Severity,
        1, -- State,
        '@OrgUnitName' -- 1 argument.
    )
end
select @CPUid = [CPUid] from [dbo].[CP] where [Name] = '@Name'  

if @CPUid is not null begin --'Обновляем ТК'
    if @NName = null or @NName = '' set @NName = '@Name'
    exec [dbo].[CP_Update]
        default,
        @CPUid,
        '@Code',
        @NName,
        @UseExtractionPoint,
        @IsActive,
        @AllowNewEP,
        @EPIsRequired,
        '@Description'
    exec [dbo].[CPOrgUnit_Update]
        @CPUid,
        @OrgUnitId
end 
else begin --'Создаем ТК' 
    set @CPUid = newid();
    exec [dbo].[CP_Insert]
        @CPUid,
        '@Code',
        '@Name',
        @UseExtractionPoint,
        @IsActive,
        @AllowNewEP,
        @EPIsRequired,
        '@Description'  
    exec [dbo].[spc_CPOrgUnit_Insert]
        default,
        @CPUid,
        @OrgUnitId
end

</CreateoreditSql>
      <DeleteSql>declare @OrgUnitId int
	declare @CPUid uniqueidentifier
		
	select @CPUid = CPUid from [dbo].[CP] where [CP].[name] = '@Name'	
	
	
	if not(@CPUid is NULL)
		begin		
			select @OrgUnitId = [OrgUnitId] from [dbo].[CPOrgUnit] where [CPOrgUnit].[CPUid] = @CPUid	
			if not(@OrgUnitId is NULL) 
				begin
				exec [dbo].[spc_CPOrgUnit_Delete]
					default,
					@CPUid,
					@OrgUnitId
				end
			exec [dbo].[CP_Delete]
				default,
				@CPUid
		end 
		else
		begin
			raiserror (N'Error - CP with Name = &lt;%s&gt; not found!', -- Message text.
			   10, -- Severity,
			   1, -- State,
			   '@Name' -- 1 argument.
			   )
		end

</DeleteSql>
      <ImageBuffer>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</ImageBuffer>
    </ItemChanger>
    <ItemChanger>
      <Name>LDS.ГГ</Name>
      <GetSQL>SELECT 
	'x' as [Select(x)], 
	[ClbrGraphUid], 
	[SubdivisionId], 
	[EqpUid], 
	[TTRangeUid], 
	[InTechTestUid], 
	[InEngUnitId], 
	[OutTechTestUid],
	[OutEngUnitId], 
	[AlgorithmUid], 
	[ClbrGraphStatusUid],
	[RV], 
	[ClbrGraphName], 
	[PeriodId], 
	[EndDate], 
	[Description], 
	[Digits], 
	[Flags], 
	[ErrorDisplayMode]  
FROM [dbo].[ClbrGraph]	 
WHERE
	{0}
</GetSQL>
      <GetSQLWhereString>[ClbrGraphName] like '*'</GetSQLWhereString>
      <DeleteSql>declare @raiseError bit = 0
declare @clbrGraphUid uniqueidentifier = '@ClbrGraphUid'
declare @rV timestamp = @RV
EXECUTE [dbo].[ClbrGraph_Delete] @raiseError, @clbrGraphUid, @rV 

</DeleteSql>
      <ImageBuffer>iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAcpSURBVFhHxZZrTJNnFMedS5bNLfuwLLtkX/ZpS3ZL9mXZNc5lF+dtMy6bUZk61A1BdDoUxAoqKnIbotwtICIIOArMcZFysQUKQocUpEBLARm03EUUaKH975y37bTQElyW7CR/IOW8z/93znnePs8iAP+rrD8WHou9k2t3bEm8rt8qrsfOi83wSGuGW3wdvomS6zfG1GznHGvqAuMhAZYE5mtRfgvIbwMymoGkGxZE15kRUWPGtrQ2XmyJNXWB8RAAj3z8Y9C7h/I7kaUyCQCXCEDcYMbZ2mmckptwotKM5fvjVnCu9ZEFhAuAxbuSa7bPbvUmavXaKDm+jVNio1gFd6p4Z3YX9uYZEFDUj82JSvxA+VsS67E5oR5uJBpN37ZklevRuABYIsrToOyBVottrQ5XmLH1/E1sEjdiW3o7PLO7CaAfolw1CjSU306ducmjAWIoP6TSCPdUtevRzAZ4ff2hp07mKLN9JR1OWx0sM+LYNRNS6LNkVpP1t59EY81ngH/yTZQ/JeQHXlYqlwbkuZGFYydsAIs/PZK39pxMq6rsMkFKlS8Pl2FdbJ3TVm9KqINbnAIbYxVYT/ouWoGvImVYf67RIf/nXD18C4chkt5DcRcg6zQhtLAF30VejSDPR9nYDvDEhhg5Clr1UBom8BtV4Vc4gs0pascFCUAkUeNKmwU5rcAFlQVx9Wb8Wj2NwLJJbE5qovxGuF+k/Kwu7Jbo4V88hlNVFlxqsaBtZBwdI6PYGCNj06fY2A7wzOrwcmynmXpltSL7Rg/Uw+Mo0AFxDUC8TYmNgG+OBpnUagkBpDFA3QzCac4BBMCiJiCBcmP/BM7WA1lqNh5Ds96ApBoDQsoG8WVoKZs+y8Z2gOe+iignag12pLdRxWrsIpCE6k7U60ch7ZwWFmWY+6NpokrbbaPRU8eGcVh6FzFKIOo67YMWM9qGx9Ck10Os6ENQsR4nSwyIlA1jVVgZmz7Hxg4AXtk67Mxsx08Z7QTSKoDsSG9BfKUOiu5BeivMCJIO4fsHR0Ot3vNPq83IJOPWwVE09d43Dpb2U+UDCCsfxJmq264B9ki6CKKDpIVnlpZgNPgxQ0OjacVWepVCS7Ro6BtCjd6EVHrVuCP3W00VD90m4z7B+PhVA06VDgjG4RWDiLg2hF+p+mjFHQIQRjAXYG9eD0F0w/u3TpIOuy6zOgimwzoeguENdqxQi1KNHrW9E0i/aYF6aEQwTqo14ETJgGAcStWyqd2YdbpyFHG1d10D+PzeRzv9Fn6W3BJA9uR0Y3cO7WYSQ+0iKE8ak0emlr6ENNib0wbN0CRiK/VkzG0epGodTSPlI4Ix60z1GOKv38NKZwBrIspoIw3AJ78X+1h5fwnam9tD77MjlDcBeV3uwrYMLVoMUwgm4zAydmYaRTNnsXl0zTgSlZNYaX0LZgGEl9FGGoZvQT/2X9HDh0UdYf3iBGo3AXnQBlTpjQhhcxemZ2nmLDaPofaLG4yuAQ6XjMKvaAh+BQMEQvqjHwcEGeZA7cvrhWdOD5S9RoTLyNiFqd04llofVzeBlMYZ5wCrw0txpHwcoqujQif8CeQgq3CQRkOaBbWfoHbn9qL21hQiK8dwxoWp3ZiVoJxCapMFK0KlTgBoYwRdm0BA6Rh14jZE1A2GOXR1BIeKR+ZA+ZL25RtQ1W1EVPU4zrowja+fFIxZ5xpMSGuBc4A11IGTldM4VnEPgeV3EVh6R4AJkBKQ9PYcKP+iEfgUDKGCDpjo2nuIcWGa+KdRMBbfmEYKVZ9Bp6uzETy7zEec5k07+zgdnyfkdIRWTOIogRwpY43TYUN6AEpEUH5FoyjVGcncuSkriWaerDLjAn1xpdIxfbiwB0t/EaexJxvbAfhkepW07HNRutwzswOhNRbqCF2z5HT+V0wInTlazrJCMZB/yR0Ua010IjqacrX2irnlXLVffhe+EGXI2cPm5XAa8tnMH7xEevvFNz/asDakSLcvvw8hCguCq6YJxAoTdG1S0FGCCiCQK5oZMr9vyhWfb7YIFV+iY/24dADrwop1L9CavLbNg70c7gP24A+fJr1Meuf1NR4H152WT/nTJgyhqxjvEYbgMbGOVEzRDWgGYlubzz9QcZTiLr45I596bbXHQV7LtiavbTW2xywADr7RPkZ6hvQK6cMPvKIy3OjCKYBUM4iJAIzUhSnktluoYrqckDFXzMbuKQ14z/N0Bj9rW4PX4jXn3padANiDkx8nPU96g7TsE99U+ZakRuF1Da6aQZCMLiZaa8VJqhn8dEGFpQfO2+fMz/CzvIbra/o8APbglj1Jsu6Ptz7asPyoROdOZfM+uEiVe19S47NAiY7/xzm2XH7Gsd3OYgEA9nDYH29+7XVwdZh0ZlWodOYN+ps/s/1v7pzni4cA4Ji9P963af45zxcPCWAP+/5gU9b8c54v/iXAfxSLFv0N7tIrfpE/3PoAAAAASUVORK5CYII=</ImageBuffer>
    </ItemChanger>
    <ItemChanger>
      <Name>LDS.ЖО</Name>
      <GetSQL>SELECT 
	'x' as [Select(x)],
    [SampleLogId], 
    [Code], 
    [Name], 
    [Description], 
    [UserId], 
    [IsClosed], 
    [Common], 
    [SampleLogType], 
    [UseCode], 
    [CodeMaskId], 
    [SampleModel], 
    [ReselectCodeMaskId], 
    [AutorizationMode], 
    [ShowPropertiesOnReceive], 
    [PrintLabelOnSave], 
    [PreviewLabelOnPrint], 
    [DisableMaskedCodeEdit]
FROM [dbo].[SampleLog]  
WHERE 
	{0}
</GetSQL>
      <GetSQLWhereString>[Name] like '*'</GetSQLWhereString>
      <DeleteSql>DECLARE @sampleLogId int = @SampleLogId

BEGIN TRANSACTION;
BEGIN TRY
    DELETE FROM CheckProcSeriesTask where CheckProcSeriesTaskUid in (select CheckProcSeriesTaskUid FROM CheckProcTask WHERE SampleLogId = @sampleLogId)
    DELETE FROM CheckProcTask WHERE SampleLogId = @sampleLogId
	DELETE FROM dbo.SampleLogProof WHERE SampleLogId = @sampleLogId
    DELETE FROM dbo.SampleLogGroup WHERE SampleLogId = @sampleLogId
    DELETE FROM dbo.SampleLogModel WHERE SampleLogId = @sampleLogId
    DELETE FROM dbo.SampleLog WHERE SampleLogId = @sampleLogId
END TRY
BEGIN CATCH
	DECLARE @MSG NVARCHAR(max) = (SELECT ERROR_MESSAGE())
 raiserror (-1,-1, @MSG ); 
	IF @@TRANCOUNT &gt; 0
		ROLLBACK TRANSACTION;
    
		
END CATCH

IF @@TRANCOUNT &gt; 0
	COMMIT TRANSACTION;
</DeleteSql>
      <ImageBuffer>iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAcpSURBVFhHxZZrTJNnFMedS5bNLfuwLLtkX/ZpS3ZL9mXZNc5lF+dtMy6bUZk61A1BdDoUxAoqKnIbotwtICIIOArMcZFysQUKQocUpEBLARm03EUUaKH975y37bTQElyW7CR/IOW8z/93znnePs8iAP+rrD8WHou9k2t3bEm8rt8qrsfOi83wSGuGW3wdvomS6zfG1GznHGvqAuMhAZYE5mtRfgvIbwMymoGkGxZE15kRUWPGtrQ2XmyJNXWB8RAAj3z8Y9C7h/I7kaUyCQCXCEDcYMbZ2mmckptwotKM5fvjVnCu9ZEFhAuAxbuSa7bPbvUmavXaKDm+jVNio1gFd6p4Z3YX9uYZEFDUj82JSvxA+VsS67E5oR5uJBpN37ZklevRuABYIsrToOyBVottrQ5XmLH1/E1sEjdiW3o7PLO7CaAfolw1CjSU306ducmjAWIoP6TSCPdUtevRzAZ4ff2hp07mKLN9JR1OWx0sM+LYNRNS6LNkVpP1t59EY81ngH/yTZQ/JeQHXlYqlwbkuZGFYydsAIs/PZK39pxMq6rsMkFKlS8Pl2FdbJ3TVm9KqINbnAIbYxVYT/ouWoGvImVYf67RIf/nXD18C4chkt5DcRcg6zQhtLAF30VejSDPR9nYDvDEhhg5Clr1UBom8BtV4Vc4gs0pascFCUAkUeNKmwU5rcAFlQVx9Wb8Wj2NwLJJbE5qovxGuF+k/Kwu7Jbo4V88hlNVFlxqsaBtZBwdI6PYGCNj06fY2A7wzOrwcmynmXpltSL7Rg/Uw+Mo0AFxDUC8TYmNgG+OBpnUagkBpDFA3QzCac4BBMCiJiCBcmP/BM7WA1lqNh5Ds96ApBoDQsoG8WVoKZs+y8Z2gOe+iignag12pLdRxWrsIpCE6k7U60ch7ZwWFmWY+6NpokrbbaPRU8eGcVh6FzFKIOo67YMWM9qGx9Ck10Os6ENQsR4nSwyIlA1jVVgZmz7Hxg4AXtk67Mxsx08Z7QTSKoDsSG9BfKUOiu5BeivMCJIO4fsHR0Ot3vNPq83IJOPWwVE09d43Dpb2U+UDCCsfxJmq264B9ki6CKKDpIVnlpZgNPgxQ0OjacVWepVCS7Ro6BtCjd6EVHrVuCP3W00VD90m4z7B+PhVA06VDgjG4RWDiLg2hF+p+mjFHQIQRjAXYG9eD0F0w/u3TpIOuy6zOgimwzoeguENdqxQi1KNHrW9E0i/aYF6aEQwTqo14ETJgGAcStWyqd2YdbpyFHG1d10D+PzeRzv9Fn6W3BJA9uR0Y3cO7WYSQ+0iKE8ak0emlr6ENNib0wbN0CRiK/VkzG0epGodTSPlI4Ix60z1GOKv38NKZwBrIspoIw3AJ78X+1h5fwnam9tD77MjlDcBeV3uwrYMLVoMUwgm4zAydmYaRTNnsXl0zTgSlZNYaX0LZgGEl9FGGoZvQT/2X9HDh0UdYf3iBGo3AXnQBlTpjQhhcxemZ2nmLDaPofaLG4yuAQ6XjMKvaAh+BQMEQvqjHwcEGeZA7cvrhWdOD5S9RoTLyNiFqd04llofVzeBlMYZ5wCrw0txpHwcoqujQif8CeQgq3CQRkOaBbWfoHbn9qL21hQiK8dwxoWp3ZiVoJxCapMFK0KlTgBoYwRdm0BA6Rh14jZE1A2GOXR1BIeKR+ZA+ZL25RtQ1W1EVPU4zrowja+fFIxZ5xpMSGuBc4A11IGTldM4VnEPgeV3EVh6R4AJkBKQ9PYcKP+iEfgUDKGCDpjo2nuIcWGa+KdRMBbfmEYKVZ9Bp6uzETy7zEec5k07+zgdnyfkdIRWTOIogRwpY43TYUN6AEpEUH5FoyjVGcncuSkriWaerDLjAn1xpdIxfbiwB0t/EaexJxvbAfhkepW07HNRutwzswOhNRbqCF2z5HT+V0wInTlazrJCMZB/yR0Ua010IjqacrX2irnlXLVffhe+EGXI2cPm5XAa8tnMH7xEevvFNz/asDakSLcvvw8hCguCq6YJxAoTdG1S0FGCCiCQK5oZMr9vyhWfb7YIFV+iY/24dADrwop1L9CavLbNg70c7gP24A+fJr1Meuf1NR4H152WT/nTJgyhqxjvEYbgMbGOVEzRDWgGYlubzz9QcZTiLr45I596bbXHQV7LtiavbTW2xywADr7RPkZ6hvQK6cMPvKIy3OjCKYBUM4iJAIzUhSnktluoYrqckDFXzMbuKQ14z/N0Bj9rW4PX4jXn3padANiDkx8nPU96g7TsE99U+ZakRuF1Da6aQZCMLiZaa8VJqhn8dEGFpQfO2+fMz/CzvIbra/o8APbglj1Jsu6Ptz7asPyoROdOZfM+uEiVe19S47NAiY7/xzm2XH7Gsd3OYgEA9nDYH29+7XVwdZh0ZlWodOYN+ps/s/1v7pzni4cA4Ji9P963af45zxcPCWAP+/5gU9b8c54v/iXAfxSLFv0N7tIrfpE/3PoAAAAASUVORK5CYII=</ImageBuffer>
    </ItemChanger>
    <ItemChanger>
      <Name>LDS.ОУ</Name>
      <GetSQL>
/* Не изменять!!!
AEUid (Ключ ОУ) 
AEBatchRequestUid (Ключ заявки)
*/
SET LANGUAGE Russian;
SELECT 
	'x' AS [Select(x)], 
	[AE].[AEUid] AS "AEUid (Ключ ОУ)",
	[AE].[Name] AS "Наименование ОУ",
	[AE].[Code] AS "Условное обозначение\Код ОУ",
	[AE].[Description] AS "Описание ОУ",
	STUFF((
        SELECT ';' + CONVERT(NVARCHAR, [EntityType].[Name])
        FROM [EntityType] 
        INNER JOIN [AEType] ON [AEType].AEUid = [AE].[AEUid]
        WHERE [EntityType].[EntityTypeUid] = [AEType].[EntityTypeUid]
        FOR XML PATH ('')
    ), 1, 1, '') AS "Тип ОУ", 
    [Product].[Name] AS "Продукт ОУ",
    [AEBatchRequest].[AEBatchRequestUid] AS "AEBatchRequestUid (Ключ заявки)",
    [AEBatchRequest].[Code] AS "Код заявки",
    [t8].[Name] AS "Местоположение. Склад",
    [t9].[Name] AS "Местоположение. Потребитель",
    [AEBatch].[Num] AS "Номер партии",
    [AEBatch].[Code] AS "Код партии",
    (SELECT CONVERT(VARCHAR(10),[AEBatch].[CreationDate],104)) AS "Дата производства",
    (CASE WHEN (SELECT DATEDIFF(year, (SELECT CONVERT(VARCHAR(10),[AEBatch].[CreationDate],104)),
		(SELECT CONVERT(VARCHAR(10),[AEBatch].[ShelfLifeDate], 104)))) &gt; 0 THEN (SELECT 'Год') ELSE 
			CASE WHEN (SELECT DATEDIFF(month, (SELECT CONVERT(VARCHAR(10),[AEBatch].[CreationDate],104)),
				(SELECT CONVERT(VARCHAR(10),[AEBatch].[ShelfLifeDate], 104)))) &gt; 0 THEN (SELECT 'Месяц') ELSE
					CASE WHEN (SELECT DATEDIFF(day, (SELECT CONVERT(VARCHAR(10),[AEBatch].[CreationDate],104)),
						(SELECT CONVERT(VARCHAR(10),[AEBatch].[ShelfLifeDate], 104)))) &gt; 0 THEN (SELECT 'День') ELSE
							(SELECT 'День') END END END) AS "Срок хранения - тип интервала",
	(CASE WHEN (SELECT DATEDIFF(year, (SELECT CONVERT(VARCHAR(10),[AEBatch].[CreationDate],104)),
		(SELECT CONVERT(VARCHAR(10),[AEBatch].[ShelfLifeDate], 104)))) &gt; 0 THEN 
			(SELECT DATEDIFF(year, (SELECT CONVERT(VARCHAR(10),[AEBatch].[CreationDate],104)),
			(SELECT CONVERT(VARCHAR(10),[AEBatch].[ShelfLifeDate], 104)))) ELSE 
				CASE WHEN (SELECT DATEDIFF(month, (SELECT CONVERT(VARCHAR(10),[AEBatch].[CreationDate],104)),
					(SELECT CONVERT(VARCHAR(10),[AEBatch].[ShelfLifeDate], 104)))) &gt; 0 THEN
						(SELECT DATEDIFF(month, (SELECT CONVERT(VARCHAR(10),[AEBatch].[CreationDate],104)),
						(SELECT CONVERT(VARCHAR(10),[AEBatch].[ShelfLifeDate], 104)))) ELSE
							CASE WHEN (SELECT DATEDIFF(day, (SELECT CONVERT(VARCHAR(10),[AEBatch].[CreationDate],104)),
								(SELECT CONVERT(VARCHAR(10),[AEBatch].[ShelfLifeDate], 104)))) &gt; 0 THEN
									(SELECT DATEDIFF(day, (SELECT CONVERT(VARCHAR(10),[AEBatch].[CreationDate],104)),
									(SELECT CONVERT(VARCHAR(10),[AEBatch].[ShelfLifeDate], 104)))) ELSE
										(SELECT 0) END END END) AS "Срок хранения - значение",	
	(SELECT CONVERT(VARCHAR(10),[AEBatch].[ShelfLifeDate],104)) AS "Дата окончания срока хранения", 
	CASE WHEN (([t2].[Address] IS NOT NULL) AND
	([t1].[Name] IS NOT NULL)) THEN
		(SELECT([t1].[Name] + ';' + [t2].[Address])) ELSE
			CASE WHEN ([t1].[Name] IS NOT NULL) THEN 
				([t1].[Name]) END END AS "Производитель, адрес",  				
	CASE WHEN (([t4].[Address] IS NOT NULL) AND
	([t3].[Name] IS NOT NULL)) THEN
		(SELECT([t3].[Name] + ';' + [t4].[Address])) ELSE
			CASE WHEN ([t3].[Name] IS NOT NULL) THEN 
				([t3].[Name]) END END AS "Поставщик, адрес",			
	CAST([AEBatch].[InAccrScope] AS int) AS "Входит в область аккредитации (0 - нет, 1 - да)",
	[AEBatch].[StorageСonditions] AS "Требования к хранению",
	[AEBatch].[DocNum] AS "Номер паспорта",
	(SELECT CONVERT(VARCHAR(10),[AEBatch].[DocIssueDate],104)) AS "Дата паспорта",
	[AEBatch].[AcceptanceNum] AS "Номер акта приемки",
	(SELECT CONVERT(VARCHAR(10),[AEBatch].[AcceptanceDate], 104)) AS "Дата акта приемки",
	[t6].LAbbreviation AS "Объем - ЕИ",
	[t5].Volume AS "Объем - значение",
	[t7].LAbbreviation AS "Масса - ЕИ",
	[t5].Weight AS "Масса - значение",
	[ObjectProp].[Name] AS "Количество - тип тары",
	[t5].ItemCount AS "Количество мест - значение",
	(SELECT CASE WHEN (SUM(1) IS NOT NULL) THEN 1 ELSE 0 END FROM [AEHazardClass]
		INNER JOIN [AEClassifier] ON [AEHazardClass].[HazardClassId] = [AEClassifier].[ItemId]
			INNER JOIN [Classifier] ON [AEClassifier].[ItemId] = [Classifier].[ItemId] AND [Classifier].Name = 'Вещества чрезвычайно опасные'
				WHERE [AEHazardClass].[AEUid] = [AE].[AEUid]) AS "Класс опасности (0 - нет, 1 - да). Вещества чрезвычайно опасные",
	(SELECT CASE WHEN (SUM(1) IS NOT NULL) THEN 1 ELSE 0 END FROM [AEHazardClass]
		INNER JOIN [AEClassifier] ON [AEHazardClass].[HazardClassId] = [AEClassifier].[ItemId]
			INNER JOIN [Classifier] ON [AEClassifier].[ItemId] = [Classifier].[ItemId] AND [Classifier].Name = 'Вещества высокоопасные'
				WHERE [AEHazardClass].[AEUid] = [AE].[AEUid]) AS "Класс опасности (0 - нет, 1 - да). Вещества высокоопасные",
	(SELECT CASE WHEN (SUM(1) IS NOT NULL) THEN 1 ELSE 0 END FROM [AEHazardClass]
		INNER JOIN [AEClassifier] ON [AEHazardClass].[HazardClassId] = [AEClassifier].[ItemId]
			INNER JOIN [Classifier] ON [AEClassifier].[ItemId] = [Classifier].[ItemId] AND [Classifier].Name = 'Вещества умеренно опасные'
				WHERE [AEHazardClass].[AEUid] = [AE].[AEUid]) AS "Класс опасности (0 - нет, 1 - да). Вещества умеренно опасные",
	(SELECT CASE WHEN (SUM(1) IS NOT NULL) THEN 1 ELSE 0 END FROM [AEHazardClass]
		INNER JOIN [AEClassifier] ON [AEHazardClass].[HazardClassId] = [AEClassifier].[ItemId]
			INNER JOIN [Classifier] ON [AEClassifier].[ItemId] = [Classifier].[ItemId] AND [Classifier].Name = 'Вещества малоопасные'
				WHERE [AEHazardClass].[AEUid] = [AE].[AEUid]) AS "Класс опасности (0 - нет, 1 - да). Вещества малоопасные",	
	(SELECT CASE WHEN (SUM(1) IS NOT NULL) THEN 1 ELSE 0 END FROM [AEHumanEffect]
		INNER JOIN [AEClassifier] ON [AEHumanEffect].[HumanEffectId] = [AEClassifier].[ItemId]
			INNER JOIN [Classifier] ON [AEClassifier].[ItemId] = [Classifier].[ItemId] AND [Classifier].Name = 'Обще токсичные'
				WHERE [AEHumanEffect].[AEUid] = [AE].[AEUid]) AS "Влияние на организм (0 - нет, 1 - да). Обще токсичные",
	(SELECT CASE WHEN (SUM(1) IS NOT NULL) THEN 1 ELSE 0 END FROM [AEHumanEffect]
		INNER JOIN [AEClassifier] ON [AEHumanEffect].[HumanEffectId] = [AEClassifier].[ItemId]
			INNER JOIN [Classifier] ON [AEClassifier].[ItemId] = [Classifier].[ItemId] AND [Classifier].Name = 'Раздражающие'
				WHERE [AEHumanEffect].[AEUid] = [AE].[AEUid]) AS "Влияние на организм (0 - нет, 1 - да). Раздражающие",
	(SELECT CASE WHEN (SUM(1) IS NOT NULL) THEN 1 ELSE 0 END FROM [AEHumanEffect]
		INNER JOIN [AEClassifier] ON [AEHumanEffect].[HumanEffectId] = [AEClassifier].[ItemId]
			INNER JOIN [Classifier] ON [AEClassifier].[ItemId] = [Classifier].[ItemId] AND [Classifier].Name = 'Сенсибилизирующие'
				WHERE [AEHumanEffect].[AEUid] = [AE].[AEUid]) AS "Влияние на организм (0 - нет, 1 - да). Сенсибилизирующие",
	(SELECT CASE WHEN (SUM(1) IS NOT NULL) THEN 1 ELSE 0 END FROM [AEHumanEffect]
		INNER JOIN [AEClassifier] ON [AEHumanEffect].[HumanEffectId] = [AEClassifier].[ItemId]
			INNER JOIN [Classifier] ON [AEClassifier].[ItemId] = [Classifier].[ItemId] AND [Classifier].Name = 'Канцерогенные'
				WHERE [AEHumanEffect].[AEUid] = [AE].[AEUid]) AS "Влияние на организм (0 - нет, 1 - да). Канцерогенные",
	(SELECT CASE WHEN (SUM(1) IS NOT NULL) THEN 1 ELSE 0 END FROM [AEHumanEffect]
		INNER JOIN [AEClassifier] ON [AEHumanEffect].[HumanEffectId] = [AEClassifier].[ItemId]
			INNER JOIN [Classifier] ON [AEClassifier].[ItemId] = [Classifier].[ItemId] AND [Classifier].Name = 'Мутагенные'
				WHERE [AEHumanEffect].[AEUid] = [AE].[AEUid]) AS "Влияние на организм (0 - нет, 1 - да). Мутагенные",
	(SELECT CASE WHEN (SUM(1) IS NOT NULL) THEN 1 ELSE 0 END FROM [AEHumanEffect]
		INNER JOIN [AEClassifier] ON [AEHumanEffect].[HumanEffectId] = [AEClassifier].[ItemId]
			INNER JOIN [Classifier] ON [AEClassifier].[ItemId] = [Classifier].[ItemId] AND [Classifier].Name = 'Влияющие на репродуктивную функцию'
				WHERE [AEHumanEffect].[AEUid] = [AE].[AEUid]) AS "Влияние на организм (0 - нет, 1 - да). Влияющие на репродуктивную функцию",
	(SELECT CASE WHEN (SUM(1) IS NOT NULL) THEN 1 ELSE 0 END FROM [AESpendingPurpose]
		INNER JOIN [SpendingPurpose] ON [AESpendingPurpose].[SpendingPurposeUid] = [SpendingPurpose].[SpendingPurposeUid] AND [SpendingPurpose].Name = 'На градуировку'
			WHERE [AESpendingPurpose].[AEUid] = [AE].[AEUid]) AS "Цели списания (0 - нет, 1 - да). На градуировку",
	(SELECT CASE WHEN (SUM(1) IS NOT NULL) THEN 1 ELSE 0 END FROM [AESpendingPurpose]
		INNER JOIN [SpendingPurpose] ON [AESpendingPurpose].[SpendingPurposeUid] = [SpendingPurpose].[SpendingPurposeUid] AND [SpendingPurpose].Name = 'На испытания'
			WHERE [AESpendingPurpose].[AEUid] = [AE].[AEUid]) AS "Цели списания (0 - нет, 1 - да). На испытания",
	(SELECT CASE WHEN (SUM(1) IS NOT NULL) THEN 1 ELSE 0 END FROM [AESpendingPurpose]
		INNER JOIN [SpendingPurpose] ON [AESpendingPurpose].[SpendingPurposeUid] = [SpendingPurpose].[SpendingPurposeUid] AND [SpendingPurpose].Name = 'На контрольную процедуру'
			WHERE [AESpendingPurpose].[AEUid] = [AE].[AEUid]) AS "Цели списания (0 - нет, 1 - да). На контрольную процедуру ВЛК",
	(SELECT CASE WHEN (SUM(1) IS NOT NULL) THEN 1 ELSE 0 END FROM [AESpendingPurpose]
		INNER JOIN [SpendingPurpose] ON [AESpendingPurpose].[SpendingPurposeUid] = [SpendingPurpose].[SpendingPurposeUid] AND [SpendingPurpose].Name = 'На общие нужды'
			WHERE [AESpendingPurpose].[AEUid] = [AE].[AEUid]) AS "Цели списания (0 - нет, 1 - да). На общие нужды",
	(SELECT CASE WHEN (SUM(1) IS NOT NULL) THEN 1 ELSE 0 END FROM [AESpendingPurpose]
		INNER JOIN [SpendingPurpose] ON [AESpendingPurpose].[SpendingPurposeUid] = [SpendingPurpose].[SpendingPurposeUid] AND [SpendingPurpose].Name = 'На приготовление объектов учета'
			WHERE [AESpendingPurpose].[AEUid] = [AE].[AEUid]) AS "Цели списания (0 - нет, 1 - да). На приготовление растворов"						
	FROM  
	[AE]
	LEFT JOIN [Product] ON [AE].[ProductUid] = [Product].[ProductUid]
	LEFT JOIN [AEBatchRequest] ON [AE].[AEUid] = [AEBatchRequest].[AEUid]	
	LEFT JOIN [AEBatch] ON [AE].[AEUid] = [AEBatch].[AEUid] AND [AEBatchRequest].[AEBatchUid] = [AEBatch].[AEBatchUid]
	LEFT JOIN [ObjectProp] ON [AE].[PckgTypeUid] = [ObjectProp].[ObjectPropUid]
	LEFT JOIN [ContractCompany] [t1] ON [AEBatch].[ManufacturerUid] = [t1].[ContractCompanyUid]
	LEFT JOIN [ContractAddress] [t2] ON [AEBatch].[ManufacturerAddressUid] = [t2].[ContractAddressUid]
	LEFT JOIN [ContractCompany] [t3] ON [AEBatch].[SupplierUid] = [t3].[ContractCompanyUid]
	LEFT JOIN [ContractAddress] [t4] ON [AEBatch].[SupplierAddressUid] = [t4].[ContractAddressUid]
	LEFT JOIN [Dims] [t5] ON [AEBatch].[DimsId] = [t5].[DimsId]
	LEFT JOIN [EngUnit] [t6] ON [t5].[VolumeEngUnitId] = [t6].[EngUnitId]
	LEFT JOIN [EngUnit] [t7] ON [t5].[WeightEngUnitId] = [t7].[EngUnitId]
	LEFT JOIN [OrgUnit] [t8] ON [AEBatchRequest].[StorageOrgUnitId] = [t8].[OrgUnitid]
	LEFT JOIN [OrgUnit] [t9] ON [AEBatchRequest].[OwnerOrgUnitId] = [t9].[OrgUnitid]
WHERE [AE].{0}</GetSQL>
      <GetSQLWhereString>Name like '*'</GetSQLWhereString>
      <CreateSql>SET LANGUAGE Russian;
DECLARE @NRV timestamp = NULL
DECLARE @NAEUid uniqueidentifier = NULL
DECLARE @NAEBatchRequestUid uniqueidentifier = NULL
DECLARE @NAEBatchUid uniqueidentifier = NULL
DECLARE @NAESpendingPurposeUid uniqueidentifier = NULL
DECLARE @NSpendingPurposeUid uniqueidentifier = NULL
DECLARE @NV1 int = NULL
DECLARE @NHazardClassId int = NULL
DECLARE @NHumanEffectId int = NULL
DECLARE @NOwnerOrgUnitId int = NULL
DECLARE @NStorageOrgUnitId int = NULL
DECLARE @NGenerate nvarchar(10) = SUBSTRING(CONVERT(NVARCHAR(100), HASHBYTES('MD5', CAST(SYSDATETIME() AS NVARCHAR)), 2), 0, 12)
DECLARE @NProductUid uniqueidentifier = (SELECT TOP 1 [Product].[ProductUid] FROM [Product] WHERE [Product].[Name] = N'$(Продукт)');
DECLARE @NAEType TABLE (EntityTypeUid uniqueidentifier)
DECLARE @NTypeOU nvarchar(100) = N'$(Тип ОУ)'
DECLARE @NCreationDate datetime = NULL;
DECLARE @NShelfLifeDate datetime = NULL;
DECLARE @NUserName nvarchar(100) = 'Администратор'
DECLARE @NUserId int = (SELECT TOP 1 [User].[UserId] FROM [User] WHERE [User].[Name] = @NUserName)
DECLARE @NStatusId int = (SELECT TOP 1 [Status].[StatusId] FROM [Status] WHERE [Status].[Code] = 'AEBatchRequestNew')
DECLARE @NPriorityId int = (SELECT TOP 1 [Priority].[PriorityId] FROM [Priority] WHERE [Priority].[Name] = 'Средний')
DECLARE @NAEBatchStatudID int = (SELECT TOP 1 [Status].[StatusId] FROM [Status] WHERE [Status].[Code] = 'AEBatchNew')
DECLARE @NDescriptionOU NVARCHAR(512) = NULL

SET @NAEUid = (SELECT TOP 1 [AE].[AEUid] FROM [AE] WHERE [AE].[Name] = N'$(Наименование ОУ)' AND [AE].[Code] = N'$(Условное обозначение\Код ОУ)');
IF @NAEUid IS NULL BEGIN
	SET @NAEUid = NEWID()
	IF @NTypeOU IS NULL OR @NTypeOU = '' SET @NTypeOU = 'Стандартный образец'
	INSERT INTO @NAEType 
	SELECT [EntityType].[EntityTypeUid] FROM [EntityType]
		WHERE [dbo].[EntityType].[Name] IN (SELECT CONVERT(NVARCHAR(100), Item) FROM [dbo].[spc_sys_ParseString](@NTypeOU, ';'))
	DECLARE @NAEName NVARCHAR(150) = N'$(Наименование ОУ)'
	IF (@NAEName IS NULL OR @NAEName = '') SET @NAEName = 'Новый объект учета - ' + @NGenerate 
	DECLARE @NAECode NVARCHAR(50) = N'$(Условное обозначение\Код ОУ)'
	IF (@NAECode IS NULL OR @NAECode = '') SET @NAECode = 'Новый код учета - ' + @NGenerate
	IF N'$(Описание ОУ)' &lt;&gt; '' AND N'$(Описание ОУ)' IS NOT NULL SET @NDescriptionOU = N'$(Описание ОУ)'
	EXEC [dbo].[AE_Insert] default, @NAEUid, @NAEName, @NAECode, @NDescriptionOU, NULL, NULL,
		NULL, NULL, @NProductUid, NULL, NULL, 0, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL;
	UPDATE [AE] SET
		[AE].[PckgTypeUid] = (SELECT TOP 1 [PckgType].[PckgTypeUid] FROM [PckgType] INNER JOIN [ObjectProp] ON 
			[PckgType].[PckgTypeUid] = [ObjectProp].[ObjectPropUid] WHERE [ObjectProp].[Name] =  N'$(Количество - тип тары)')
	WHERE [AE].[AEUid] = @NAEUid
	INSERT INTO [AEType]
	SELECT NEWID(), @NAEUid, [@NAEType].[EntityTypeUid] FROM @NAEType
	
	IF '$(Класс опасности (0 - нет, 1 - да). Вещества чрезвычайно опасные)' = '1' SET @NV1 = 1 ELSE SET @NV1 = 0
	SET @NHazardClassId = (SELECT [AEClassifier].[ItemId] 
		FROM [AEClassifier] INNER JOIN [Classifier] ON [AEClassifier].[ItemId] = [Classifier].[ItemId] 
			AND [Classifier].Name = 'Вещества чрезвычайно опасные')
	IF (@NV1 = 0) BEGIN TRY EXEC [dbo].[AEHazardClass_Delete] default, @NAEUid, @NHazardClassId END TRY
		BEGIN CATCH PRINT 'Запись была удалена ранее!' END CATCH
	IF (@NV1 = 1) BEGIN TRY EXEC [dbo].[AEHazardClass_Insert] default, @NAEUid, @NHazardClassId END TRY
		BEGIN CATCH PRINT 'Запись была добавлена ранее!' END CATCH

	IF '$(Класс опасности (0 - нет, 1 - да). Вещества высокоопасные)' = '1' SET @NV1 = 1 ELSE SET @NV1 = 0
	SET @NHazardClassId = (SELECT [AEClassifier].[ItemId] 
		FROM [AEClassifier] INNER JOIN [Classifier] ON [AEClassifier].[ItemId] = [Classifier].[ItemId] 
			AND [Classifier].Name = 'Вещества высокоопасные')
	IF (@NV1 = 0) BEGIN TRY EXEC [dbo].[AEHazardClass_Delete] default, @NAEUid, @NHazardClassId END TRY
		BEGIN CATCH PRINT 'Запись была удалена ранее!' END CATCH
	IF (@NV1 = 1) BEGIN TRY EXEC [dbo].[AEHazardClass_Insert] default, @NAEUid, @NHazardClassId END TRY
		BEGIN CATCH PRINT 'Запись была добавлена ранее!' END CATCH

	IF '$(Класс опасности (0 - нет, 1 - да). Вещества умеренно опасные)' = '1' SET @NV1 = 1 ELSE SET @NV1 = 0
	SET @NHazardClassId = (SELECT [AEClassifier].[ItemId] 
		FROM [AEClassifier] INNER JOIN [Classifier] ON [AEClassifier].[ItemId] = [Classifier].[ItemId] 
			AND [Classifier].Name = 'Вещества умеренно опасные')
	IF (@NV1 = 0) BEGIN TRY EXEC [dbo].[AEHazardClass_Delete] default, @NAEUid, @NHazardClassId END TRY
		BEGIN CATCH PRINT 'Запись была удалена ранее!' END CATCH
	IF (@NV1 = 1) BEGIN TRY EXEC [dbo].[AEHazardClass_Insert] default, @NAEUid, @NHazardClassId END TRY
		BEGIN CATCH PRINT 'Запись была добавлена ранее!' END CATCH

	IF '$(Класс опасности (0 - нет, 1 - да). Вещества малоопасные)' = '1' SET @NV1 = 1 ELSE SET @NV1 = 0
	SET @NHazardClassId = (SELECT [AEClassifier].[ItemId] 
		FROM [AEClassifier] INNER JOIN [Classifier] ON [AEClassifier].[ItemId] = [Classifier].[ItemId] 
			AND [Classifier].Name = 'Вещества малоопасные')
	IF (@NV1 = 0) BEGIN TRY EXEC [dbo].[AEHazardClass_Delete] default, @NAEUid, @NHazardClassId END TRY
		BEGIN CATCH PRINT 'Запись была удалена ранее!' END CATCH
	IF (@NV1 = 1) BEGIN TRY EXEC [dbo].[AEHazardClass_Insert] default, @NAEUid, @NHazardClassId END TRY
		BEGIN CATCH PRINT 'Запись была добавлена ранее!' END CATCH

	IF '$(Влияние на организм (0 - нет, 1 - да). Обще токсичные)' = '1' SET @NV1 = 1 ELSE SET @NV1 = 0
	SET @NHumanEffectId = (SELECT [AEClassifier].[ItemId] 
		FROM [AEClassifier] INNER JOIN [Classifier] ON [AEClassifier].[ItemId] = [Classifier].[ItemId] 
			AND [Classifier].Name = 'Обще токсичные')
	IF (@NV1 = 0) BEGIN TRY EXEC [dbo].[AEHumanEffect_Delete] default, @NAEUid, @NHumanEffectId END TRY
		BEGIN CATCH PRINT 'Запись была удалена ранее!' END CATCH
	IF (@NV1 = 1) BEGIN TRY EXEC [dbo].[AEHumanEffect_Insert] default, @NAEUid, @NHumanEffectId END TRY
		BEGIN CATCH PRINT 'Запись была добавлена ранее!' END CATCH

	IF '$(Влияние на организм (0 - нет, 1 - да). Раздражающие)' = '1' SET @NV1 = 1 ELSE SET @NV1 = 0
	SET @NHumanEffectId = (SELECT [AEClassifier].[ItemId] 
		FROM [AEClassifier] INNER JOIN [Classifier] ON [AEClassifier].[ItemId] = [Classifier].[ItemId] 
			AND [Classifier].Name = 'Раздражающие')
	IF (@NV1 = 0) BEGIN TRY EXEC [dbo].[AEHumanEffect_Delete] default, @NAEUid, @NHumanEffectId END TRY
		BEGIN CATCH PRINT 'Запись была удалена ранее!' END CATCH
	IF (@NV1 = 1) BEGIN TRY EXEC [dbo].[AEHumanEffect_Insert] default, @NAEUid, @NHumanEffectId END TRY
		BEGIN CATCH PRINT 'Запись была добавлена ранее!' END CATCH

	IF '$(Влияние на организм (0 - нет, 1 - да). Сенсибилизирующие)' = '1' SET @NV1 = 1 ELSE SET @NV1 = 0
	SET @NHumanEffectId = (SELECT [AEClassifier].[ItemId] 
		FROM [AEClassifier] INNER JOIN [Classifier] ON [AEClassifier].[ItemId] = [Classifier].[ItemId] 
			AND [Classifier].Name = 'Сенсибилизирующие')
	IF (@NV1 = 0) BEGIN TRY EXEC [dbo].[AEHumanEffect_Delete] default, @NAEUid, @NHumanEffectId END TRY
		BEGIN CATCH PRINT 'Запись была удалена ранее!' END CATCH
	IF (@NV1 = 1) BEGIN TRY EXEC [dbo].[AEHumanEffect_Insert] default, @NAEUid, @NHumanEffectId END TRY
		BEGIN CATCH PRINT 'Запись была добавлена ранее!' END CATCH

	IF '$(Влияние на организм (0 - нет, 1 - да). Канцерогенные)' = '1' SET @NV1 = 1 ELSE SET @NV1 = 0
	SET @NHumanEffectId = (SELECT [AEClassifier].[ItemId] 
		FROM [AEClassifier] INNER JOIN [Classifier] ON [AEClassifier].[ItemId] = [Classifier].[ItemId] 
			AND [Classifier].Name = 'Канцерогенные')
	IF (@NV1 = 0) BEGIN TRY EXEC [dbo].[AEHumanEffect_Delete] default, @NAEUid, @NHumanEffectId END TRY
		BEGIN CATCH PRINT 'Запись была удалена ранее!' END CATCH
	IF (@NV1 = 1) BEGIN TRY EXEC [dbo].[AEHumanEffect_Insert] default, @NAEUid, @NHumanEffectId END TRY
		BEGIN CATCH PRINT 'Запись была добавлена ранее!' END CATCH

	IF '$(Влияние на организм (0 - нет, 1 - да). Мутагенные)' = '1' SET @NV1 = 1 ELSE SET @NV1 = 0
	SET @NHumanEffectId = (SELECT [AEClassifier].[ItemId] 
		FROM [AEClassifier] INNER JOIN [Classifier] ON [AEClassifier].[ItemId] = [Classifier].[ItemId] 
			AND [Classifier].Name = 'Мутагенные')
	IF (@NV1 = 0) BEGIN TRY EXEC [dbo].[AEHumanEffect_Delete] default, @NAEUid, @NHumanEffectId END TRY
		BEGIN CATCH PRINT 'Запись была удалена ранее!' END CATCH
	IF (@NV1 = 1) BEGIN TRY EXEC [dbo].[AEHumanEffect_Insert] default, @NAEUid, @NHumanEffectId END TRY
		BEGIN CATCH PRINT 'Запись была добавлена ранее!' END CATCH

	IF '$(Влияние на организм (0 - нет, 1 - да). Влияющие на репродуктивную функцию)' = '1' SET @NV1 = 1 ELSE SET @NV1 = 0
	SET @NHumanEffectId = (SELECT [AEClassifier].[ItemId] 
		FROM [AEClassifier] INNER JOIN [Classifier] ON [AEClassifier].[ItemId] = [Classifier].[ItemId] 
			AND [Classifier].Name = 'Влияющие на репродуктивную функцию')
	IF (@NV1 = 0) BEGIN TRY EXEC [dbo].[AEHumanEffect_Delete] default, @NAEUid, @NHumanEffectId END TRY
		BEGIN CATCH PRINT 'Запись была удалена ранее!' END CATCH
	IF (@NV1 = 1) BEGIN TRY EXEC [dbo].[AEHumanEffect_Insert] default, @NAEUid, @NHumanEffectId END TRY
		BEGIN CATCH PRINT 'Запись была добавлена ранее!' END CATCH

	IF '$(Цели списания (0 - нет, 1 - да). На градуировку)' = '1' SET @NV1 = 1 ELSE SET @NV1 = 0
	SET @NSpendingPurposeUid = (SELECT [SpendingPurposeUid] FROM [SpendingPurpose] WHERE [SpendingPurpose].Name = 'На градуировку')
	IF (@NV1 = 0) BEGIN SET @NAESpendingPurposeUid = (SELECT [AESpendingPurpose].[AESpendingPurposeUid] FROM [AESpendingPurpose] WHERE 
		[AESpendingPurpose].[AEUid] = @NAEUid AND [AESpendingPurpose].[SpendingPurposeUid] = @NSpendingPurposeUid)
		IF @NAESpendingPurposeUid IS NOT NULL EXEC [dbo].[AESpendingPurpose_Delete] default, @NAESpendingPurposeUid, @NAEUid, @NSpendingPurposeUid
		END
	
	IF (@NV1 = 1) BEGIN SET @NAESpendingPurposeUid = (SELECT [AESpendingPurpose].[AESpendingPurposeUid] FROM [AESpendingPurpose] WHERE 
		[AESpendingPurpose].[AEUid] = @NAEUid AND [AESpendingPurpose].[SpendingPurposeUid] = @NSpendingPurposeUid)
		IF @NAESpendingPurposeUid IS NULL BEGIN SET @NAESpendingPurposeUid = NEWID();
			EXEC [dbo].[AESpendingPurpose_Insert] default, @NAESpendingPurposeUid, @NAEUid, @NSpendingPurposeUid END
		END	

	IF '$(Цели списания (0 - нет, 1 - да). На испытания)' = '1' SET @NV1 = 1 ELSE SET @NV1 = 0
	SET @NSpendingPurposeUid = (SELECT [SpendingPurposeUid] FROM [SpendingPurpose] WHERE [SpendingPurpose].Name = 'На испытания')
	IF (@NV1 = 0) BEGIN SET @NAESpendingPurposeUid = (SELECT [AESpendingPurpose].[AESpendingPurposeUid] FROM [AESpendingPurpose] WHERE 
		[AESpendingPurpose].[AEUid] = @NAEUid AND [AESpendingPurpose].[SpendingPurposeUid] = @NSpendingPurposeUid)
		IF @NAESpendingPurposeUid IS NOT NULL EXEC [dbo].[AESpendingPurpose_Delete] default, @NAESpendingPurposeUid, @NAEUid, @NSpendingPurposeUid
		END
	IF (@NV1 = 1) BEGIN SET @NAESpendingPurposeUid = (SELECT [AESpendingPurpose].[AESpendingPurposeUid] FROM [AESpendingPurpose] WHERE 
		[AESpendingPurpose].[AEUid] = @NAEUid AND [AESpendingPurpose].[SpendingPurposeUid] = @NSpendingPurposeUid)
		IF @NAESpendingPurposeUid IS NULL BEGIN SET @NAESpendingPurposeUid = NEWID();
			EXEC [dbo].[AESpendingPurpose_Insert] default, @NAESpendingPurposeUid, @NAEUid, @NSpendingPurposeUid END
		END

	IF '$(Цели списания (0 - нет, 1 - да). На контрольную процедуру ВЛК)' = '1' SET @NV1 = 1 ELSE SET @NV1 = 0
	SET @NSpendingPurposeUid = (SELECT [SpendingPurposeUid] FROM [SpendingPurpose] WHERE [SpendingPurpose].Name = 'На контрольную процедуру')
	IF (@NV1 = 0) BEGIN SET @NAESpendingPurposeUid = (SELECT [AESpendingPurpose].[AESpendingPurposeUid] FROM [AESpendingPurpose] WHERE 
		[AESpendingPurpose].[AEUid] = @NAEUid AND [AESpendingPurpose].[SpendingPurposeUid] = @NSpendingPurposeUid)
		IF @NAESpendingPurposeUid IS NOT NULL EXEC [dbo].[AESpendingPurpose_Delete] default, @NAESpendingPurposeUid, @NAEUid, @NSpendingPurposeUid
		END
	IF (@NV1 = 1) BEGIN SET @NAESpendingPurposeUid = (SELECT [AESpendingPurpose].[AESpendingPurposeUid] FROM [AESpendingPurpose] WHERE 
		[AESpendingPurpose].[AEUid] = @NAEUid AND [AESpendingPurpose].[SpendingPurposeUid] = @NSpendingPurposeUid)
		IF @NAESpendingPurposeUid IS NULL BEGIN SET @NAESpendingPurposeUid = NEWID();
			EXEC [dbo].[AESpendingPurpose_Insert] default, @NAESpendingPurposeUid, @NAEUid, @NSpendingPurposeUid END
		END

	IF '$(Цели списания (0 - нет, 1 - да). На общие нужды)' = '1' SET @NV1 = 1 ELSE SET @NV1 = 0
	SET @NSpendingPurposeUid = (SELECT [SpendingPurposeUid] FROM [SpendingPurpose] WHERE [SpendingPurpose].Name = 'На общие нужды')
	IF (@NV1 = 0) BEGIN SET @NAESpendingPurposeUid = (SELECT [AESpendingPurpose].[AESpendingPurposeUid] FROM [AESpendingPurpose] WHERE 
		[AESpendingPurpose].[AEUid] = @NAEUid AND [AESpendingPurpose].[SpendingPurposeUid] = @NSpendingPurposeUid)
		IF @NAESpendingPurposeUid IS NOT NULL EXEC [dbo].[AESpendingPurpose_Delete] default, @NAESpendingPurposeUid, @NAEUid, @NSpendingPurposeUid
		END
	IF (@NV1 = 1) BEGIN SET @NAESpendingPurposeUid = (SELECT [AESpendingPurpose].[AESpendingPurposeUid] FROM [AESpendingPurpose] WHERE 
		[AESpendingPurpose].[AEUid] = @NAEUid AND [AESpendingPurpose].[SpendingPurposeUid] = @NSpendingPurposeUid)
		IF @NAESpendingPurposeUid IS NULL BEGIN SET @NAESpendingPurposeUid = NEWID();
			EXEC [dbo].[AESpendingPurpose_Insert] default, @NAESpendingPurposeUid, @NAEUid, @NSpendingPurposeUid END
		END

	IF '$(Цели списания (0 - нет, 1 - да). На приготовление растворов)' = '1' SET @NV1 = 1 ELSE SET @NV1 = 0
	SET @NSpendingPurposeUid = (SELECT [SpendingPurposeUid] FROM [SpendingPurpose] WHERE [SpendingPurpose].Name = 'На приготовление объектов учета')
	IF (@NV1 = 0) BEGIN SET @NAESpendingPurposeUid = (SELECT [AESpendingPurpose].[AESpendingPurposeUid] FROM [AESpendingPurpose] WHERE 
		[AESpendingPurpose].[AEUid] = @NAEUid AND [AESpendingPurpose].[SpendingPurposeUid] = @NSpendingPurposeUid)
		IF @NAESpendingPurposeUid IS NOT NULL EXEC [dbo].[AESpendingPurpose_Delete] default, @NAESpendingPurposeUid, @NAEUid, @NSpendingPurposeUid
		END
	IF (@NV1 = 1) BEGIN SET @NAESpendingPurposeUid = (SELECT [AESpendingPurpose].[AESpendingPurposeUid] FROM [AESpendingPurpose] WHERE 
		[AESpendingPurpose].[AEUid] = @NAEUid AND [AESpendingPurpose].[SpendingPurposeUid] = @NSpendingPurposeUid)
		IF @NAESpendingPurposeUid IS NULL BEGIN SET @NAESpendingPurposeUid = NEWID();
			EXEC [dbo].[AESpendingPurpose_Insert] default, @NAESpendingPurposeUid, @NAEUid, @NSpendingPurposeUid END
		END
		
	SET @NSpendingPurposeUid = (SELECT [SpendingPurposeUid] FROM [SpendingPurpose] WHERE [SpendingPurpose].Name = 'Корректировка остатков')
	SET @NAESpendingPurposeUid = (SELECT [AESpendingPurpose].[AESpendingPurposeUid] FROM [AESpendingPurpose] WHERE 
		[AESpendingPurpose].[AEUid] = @NAEUid AND [AESpendingPurpose].[SpendingPurposeUid] = @NSpendingPurposeUid)
		IF @NAESpendingPurposeUid IS NULL BEGIN SET @NAESpendingPurposeUid = NEWID();
			EXEC [dbo].[AESpendingPurpose_Insert] default, @NAESpendingPurposeUid, @NAEUid, @NSpendingPurposeUid END

	
	SET @NSpendingPurposeUid = (SELECT [SpendingPurposeUid] FROM [SpendingPurpose] WHERE [SpendingPurpose].Name = 'На партию')
	SET @NAESpendingPurposeUid = (SELECT [AESpendingPurpose].[AESpendingPurposeUid] FROM [AESpendingPurpose] WHERE 
		[AESpendingPurpose].[AEUid] = @NAEUid AND [AESpendingPurpose].[SpendingPurposeUid] = @NSpendingPurposeUid)
		IF @NAESpendingPurposeUid IS NULL BEGIN SET @NAESpendingPurposeUid = NEWID();
			EXEC [dbo].[AESpendingPurpose_Insert] default, @NAESpendingPurposeUid, @NAEUid, @NSpendingPurposeUid END
		
	SET @NSpendingPurposeUid = (SELECT [SpendingPurposeUid] FROM [SpendingPurpose] WHERE [SpendingPurpose].Name = 'Утилизация')
	SET @NAESpendingPurposeUid = (SELECT [AESpendingPurpose].[AESpendingPurposeUid] FROM [AESpendingPurpose] WHERE 
		[AESpendingPurpose].[AEUid] = @NAEUid AND [AESpendingPurpose].[SpendingPurposeUid] = @NSpendingPurposeUid)
		IF @NAESpendingPurposeUid IS NULL BEGIN SET @NAESpendingPurposeUid = NEWID();
			EXEC [dbo].[AESpendingPurpose_Insert] default, @NAESpendingPurposeUid, @NAEUid, @NSpendingPurposeUid END
END

SET @NAEBatchRequestUid = (SELECT TOP 1 [AEBatchRequest].[AEBatchRequestUid] FROM [AEBatchRequest] WHERE [AEBatchRequest].[AEUid] = @NAEUid AND [AEBatchRequest].[Code] = '$(Код заявки)')
SET @NAEBatchUid = (SELECT TOP 1 [AEBatchRequest].[AEBatchUid] FROM [AEBatchRequest] WHERE [AEBatchRequest].[AEBatchRequestUid] = @NAEBatchRequestUid)

IF @NAEBatchRequestUid IS NULL OR (@NAEBatchRequestUid IS NOT NULL AND @NAEBatchUid IS NOT NULL) BEGIN
	SET @NAEBatchRequestUid = NEWID()
	SET @NAEBatchUid = NULL
	SET @NStorageOrgUnitId = (SELECT [OrgUnit].[OrgUnitId] FROM [OrgUnit] WHERE [OrgUnit].[Name] = N'$(Местоположение. Склад)')
	IF (@NStorageOrgUnitId IS NULL) SET @NStorageOrgUnitId = (SELECT [OrgUnit].[OrgUnitId] FROM [OrgUnit] WHERE [OrgUnit].[Name] = 'Без лаборатории')
	SET @NOwnerOrgUnitId = (SELECT [OrgUnit].[OrgUnitId] FROM [OrgUnit] WHERE [OrgUnit].[Name] = N'$(Местоположение. Потребитель)')
	IF (@NOwnerOrgUnitId IS NULL) SET @NOwnerOrgUnitId = (SELECT [OrgUnit].[OrgUnitId] FROM [OrgUnit] WHERE [OrgUnit].[Name] = 'Без лаборатории')
	SET @NCreationDate = GETDATE()
	SET @NCreationDate = GETDATE()
	IF N'$(Дата производства)' &lt;&gt; '' AND N'$(Дата производства)' IS NOT NULL
		BEGIN TRY 
			SET @NCreationDate = CONVERT(datetime, N'$(Дата производства)', 104)
		END TRY
		BEGIN CATCH 
			BEGIN TRY
				SET @NCreationDate = CONVERT(datetime, CONVERT(INT, N'$(Дата производства)') - 2)
			END TRY
			BEGIN CATCH
				SET @NCreationDate = GETDATE()
			END CATCH 
		END CATCH
	EXEC [dbo].[AEBatchRequest_Insert] default, @NAEBatchRequestUid, @NAEBatchUid, N'$(Код заявки)', @NAEUid, NULL, @NCreationDate,
		@NUserId, @NUserName, @NOwnerOrgUnitId, @NStorageOrgUnitId, @NStatusId, @NPriorityId, NULL, NULL, 0 
END

IF @NAEBatchUid IS NULL BEGIN
	SET @NAEBatchUid = NEWID()
	DECLARE @NNum NVARCHAR(150) = N'$(Номер партии)'
	IF (@NNum IS NULL OR @NNum = '') SET @NNum = 'Номер партии - ' + @NGenerate

	DECLARE @NCode NVARCHAR(150) = N'$(Код партии)'
	IF (@NCode IS NULL OR @NCode = '') SET @NCode = 'Код партии - ' + @NGenerate
	
	SET @NCreationDate = GETDATE()
	IF N'$(Дата производства)' &lt;&gt; '' AND N'$(Дата производства)' IS NOT NULL
		BEGIN TRY 
			SET @NCreationDate = CONVERT(datetime, N'$(Дата производства)', 104)
		END TRY
		BEGIN CATCH 
			BEGIN TRY
				SET @NCreationDate = CONVERT(datetime, CONVERT(INT, N'$(Дата производства)') - 2)
			END TRY
			BEGIN CATCH
				SET @NCreationDate = GETDATE()
			END CATCH 
		END CATCH
	
	DECLARE @TypeInterval NVARCHAR(10) = N'$(Срок хранения - тип интервала)'
	DECLARE @IntervalInt int = NULL;
	
	IF N'$(Дата окончания срока хранения)' &lt;&gt; '' AND N'$(Дата окончания срока хранения)' IS NOT NULL
		BEGIN TRY 
			SET @NShelfLifeDate = CONVERT(datetime, N'$(Дата окончания срока хранения)', 104)
		END TRY	
		BEGIN CATCH	
			BEGIN TRY
				SET @NShelfLifeDate = CONVERT(datetime, CONVERT(INT, N'$(Дата окончания срока хранения)') - 2)
			END TRY
			BEGIN CATCH
				SET @NShelfLifeDate = NULL
			END CATCH
		END CATCH
		
	IF N'$(Дата окончания срока хранения)' = '' OR N'$(Дата окончания срока хранения)' IS NULL BEGIN
		IF (@TypeInterval IS NOT NULL) BEGIN
			BEGIN TRY SET @IntervalInt = CAST(N'$(Срок хранения - значение)' AS INT)
			END TRY
			BEGIN CATCH SET @IntervalInt = NULL
			END	CATCH 			
			IF @TypeInterval = 'Год' SET @NShelfLifeDate = DATEADD(year, @IntervalInt, CONVERT(VARCHAR(10), @NCreationDate, 104))
			IF @TypeInterval = 'Месяц' SET @NShelfLifeDate = DATEADD(month, @IntervalInt, CONVERT(VARCHAR(10), @NCreationDate, 104))
			IF @TypeInterval = 'День' SET @NShelfLifeDate = DATEADD(day, @IntervalInt, CONVERT(VARCHAR(10), @NCreationDate, 104))	
			IF @NShelfLifeDate IS NULL SET @NShelfLifeDate = DATEADD(MONTH, 1, CONVERT(VARCHAR(10), @NCreationDate, 104))
			END
	END
	IF @NShelfLifeDate IS NULL SET @NShelfLifeDate = DATEADD(MONTH, 1, CONVERT(VARCHAR(10), @NCreationDate, 104))
	DECLARE @NPeriodId int = (SELECT MAX([Period].[PeriodId] + 1) FROM [Period]) 
	DECLARE @NPeriodTypeUid uniqueidentifier = (SELECT [PeriodType].[PeriodTypeUid] FROM [PeriodType] WHERE [PeriodType].[Order] = 
		(SELECT (CASE WHEN (SELECT DATEDIFF(year, @NCreationDate, @NShelfLifeDate)) &gt; 0 THEN (SELECT 900) ELSE 
			CASE WHEN (SELECT DATEDIFF(month, @NCreationDate, @NShelfLifeDate)) &gt; 0 THEN (SELECT 700) ELSE
				CASE WHEN (SELECT DATEDIFF(day, @NCreationDate, @NShelfLifeDate)) &gt; 0 THEN (SELECT 400) ELSE
					(SELECT 400) END END END)))
	DECLARE @NPeriodLen float = (SELECT (CASE WHEN (SELECT DATEDIFF(year, @NCreationDate, @NShelfLifeDate)) &gt; 0 THEN 
		(SELECT DATEDIFF(year, @NCreationDate, @NShelfLifeDate)) ELSE 
			CASE WHEN (SELECT DATEDIFF(month, @NCreationDate, @NShelfLifeDate)) &gt; 0 THEN
				(SELECT DATEDIFF(month, @NCreationDate, @NShelfLifeDate)) ELSE
					CASE WHEN (SELECT DATEDIFF(day, @NCreationDate, @NShelfLifeDate)) &gt; 0 THEN
						(SELECT DATEDIFF(day, @NCreationDate, @NShelfLifeDate)) ELSE
							(SELECT 0) END END END))
	EXEC [dbo].[Period_Insert] default, @NPeriodId, @NPeriodLen, @NPeriodTypeUid
	
	DECLARE @NR Table (CompanyIndex NVARCHAR(255), id INT) 
	DECLARE @NRID INT = 0
	DECLARE @NManufacturerUid uniqueidentifier = NULL;
	DECLARE @NManufacturerAddressUid uniqueidentifier = NULL;
	DECLARE @NSupplierUid uniqueidentifier = NULL;
	DECLARE @NSupplierAddressUid uniqueidentifier = NULL;
	DECLARE @NManufacturerName NVARCHAR(150)
	DECLARE @NManufacturerAddressName NVARCHAR(255);
	DECLARE @NSupplierName NVARCHAR(150)
	DECLARE @NSupplierAddressName NVARCHAR(255);
	INSERT INTO @NR 
	SELECT CONVERT(NVARCHAR(255), Item), ROW_NUMBER() OVER (ORDER BY @NRID) AS id FROM [dbo].[spc_sys_ParseString](N'$(Производитель, адрес)', ';')
	SET @NManufacturerName = (SELECT CompanyIndex FROM @NR WHERE id = 1);
	SET @NManufacturerAddressName = (SELECT CompanyIndex FROM @NR WHERE id = 2)
	SET @NManufacturerUid = (SELECT [ContractCompany].[ContractCompanyUid] FROM [ContractCompany]
		WHERE [ContractCompany].[Name] = (SELECT CompanyIndex FROM @NR WHERE id = 1))
	SET @NManufacturerAddressUid = (SELECT [ContractAddress].[ContractAddressUid] FROM [ContractAddress]
		INNER JOIN [ContractCompanyAddress] ON [ContractAddress].[ContractAddressUid] = [ContractCompanyAddress].[AddressUid]
			WHERE [ContractAddress].[Address] = (SELECT CompanyIndex FROM @NR WHERE id = 2) AND [ContractCompanyAddress].[CompanyUid] = @NManufacturerUid)	
	/* Если имя компании есть, а найти ее не удалось, то добавляем ее */
	IF @NManufacturerName IS NOT NULL AND @NManufacturerUid IS NULL BEGIN
		SET @NManufacturerUid = NEWID()
		EXEC [dbo].[ContractCompany_Insert] default, @NManufacturerUid, @NManufacturerName, NULL, 0, 1, 32
		END	
	/* Если адрес есть, а ключа нет, то добавляем адрес. */
	IF @NManufacturerAddressName IS NOT NULL AND @NManufacturerAddressUid IS NULL BEGIN	
		SET @NManufacturerAddressUid = NEWID()
		DECLARE @NContractAddressTypeUid uniqueidentifier = (SELECT [ContractAddressType].[ContractAddressTypeUid] 
			FROM [ContractAddressType] WHERE [ContractAddressType].[Name] = 'юридический')
		DECLARE @LocationUid uniqueidentifier = (SELECT [ContractLocation].[ContractLocationUid] 
			FROM [ContractLocation] WHERE [ContractLocation].[Name] = 'Российская Федерация');
		EXEC [dbo].[ContractAddress_Insert] default, @NManufacturerAddressUid, @NContractAddressTypeUid, @LocationUid,
			@NManufacturerAddressName, NULL, 0, 1, NULL
		EXEC [dbo].[ContractCompanyAddress_Insert] default, @NManufacturerUid, @NManufacturerAddressUid, 0, 0
		END
	DELETE FROM @NR
	INSERT INTO @NR 
	SELECT CONVERT(NVARCHAR(255), Item), ROW_NUMBER() OVER (ORDER BY @NRID) AS id FROM [dbo].[spc_sys_ParseString](N'$(Поставщик, адрес)', ';')
	SET @NSupplierName = (SELECT CompanyIndex FROM @NR WHERE id = 1);
	SET @NSupplierAddressName = (SELECT CompanyIndex FROM @NR WHERE id = 2)
	SET @NSupplierUid = (SELECT [ContractCompany].[ContractCompanyUid] FROM [ContractCompany]
		WHERE [ContractCompany].[Name] = (SELECT CompanyIndex FROM @NR WHERE id = 1))
	SET @NSupplierAddressUid = (SELECT [ContractAddress].[ContractAddressUid] FROM [ContractAddress]
		INNER JOIN [ContractCompanyAddress] ON [ContractAddress].[ContractAddressUid] = [ContractCompanyAddress].[AddressUid]
			WHERE [ContractAddress].[Address] = (SELECT CompanyIndex FROM @NR WHERE id = 2) AND [ContractCompanyAddress].[CompanyUid] = @NSupplierUid)	
	/* Если имя компании есть, а найти ее не удалось, то добавляем ее */
	IF @NSupplierName IS NOT NULL AND @NSupplierUid IS NULL BEGIN
		SET @NSupplierUid = NEWID()
		EXEC [dbo].[ContractCompany_Insert] default, @NSupplierUid, @NSupplierName, NULL, 0, 1, 32
		END
	/* Если адрес есть, а ключа нет, то добавляем адрес. */
	IF @NSupplierAddressName IS NOT NULL AND @NSupplierAddressUid IS NULL BEGIN	
		SET @NSupplierAddressUid = NEWID()
		SET @NContractAddressTypeUid = (SELECT [ContractAddressType].[ContractAddressTypeUid] 
			FROM [ContractAddressType] WHERE [ContractAddressType].[Name] = 'юридический')
		SET @LocationUid = (SELECT [ContractLocation].[ContractLocationUid] 
			FROM [ContractLocation] WHERE [ContractLocation].[Name] = 'Российская Федерация');
		EXEC [dbo].[ContractAddress_Insert] default, @NSupplierAddressUid, @NContractAddressTypeUid, @LocationUid, 
			@NSupplierAddressName, NULL, 0, 1, NULL
		EXEC [dbo].[ContractCompanyAddress_Insert] default, @NSupplierUid, @NSupplierAddressUid, 0, 0
		END
	
	DECLARE @NInAccrScope bit = 0
	IF '$(Входит в область аккредитации (0 - нет, 1 - да))' = '1' SET @NInAccrScope = 1
	
	DECLARE @NDocIssueDate datetime = NULL
	DECLARE @NAcceptanceDate datetime = NULL
	IF N'$(Дата паспорта)' IS NOT NULL AND N'$(Дата паспорта)' &lt;&gt; ''
		BEGIN TRY
			SET @NDocIssueDate = CONVERT(datetime, N'$(Дата паспорта)', 104)
		END TRY
		BEGIN CATCH
			BEGIN TRY
				SET @NDocIssueDate = CONVERT(datetime, CONVERT(INT, N'$(Дата паспорта)') - 2)
			END TRY
			BEGIN CATCH
				SET @NDocIssueDate = NULL;
			END CATCH
		END CATCH
		
	IF N'$(Дата акта приемки)' IS NOT NULL AND N'$(Дата акта приемки)' &lt;&gt; ''
		BEGIN TRY
			SET @NAcceptanceDate = CONVERT(datetime, N'$(Дата акта приемки)', 104)
		END TRY
		BEGIN CATCH
			BEGIN TRY
				SET @NAcceptanceDate = CONVERT(datetime, CONVERT(INT, N'$(Дата акта приемки)') - 2)
			END TRY
			BEGIN CATCH
				SET @NAcceptanceDate = GETDATE();
			END CATCH
		END CATCH
	
	DECLARE @NDimsId int = (SELECT MAX([Dims].[DimsId]) + 1 FROM [Dims])
	DECLARE @NVolume FLOAT = NULL
	DECLARE @NWeight FLOAT = NULL
	DECLARE @NItemCount INT = NULL
	IF N'$(Объем - значение)' &lt;&gt; '' BEGIN
		BEGIN TRY
			SET @NVolume = CONVERT(FLOAT, N'$(Объем - значение)', 0)
		END TRY
		BEGIN CATCH
			PRINT 'Ошибка преобразования значения объема в FLOAT!' 
		END CATCH
	END
	IF N'$(Масса - значение)' &lt;&gt; '' BEGIN
		BEGIN TRY
			SET @NWeight = CONVERT(FLOAT, N'$(Масса - значение)', 0)
		END TRY
		BEGIN CATCH
			PRINT 'Ошибка преобразования значения массы в FLOAT!' 
		END CATCH
	END
	IF N'$(Количество мест - значение)' &lt;&gt; '' BEGIN
		BEGIN TRY
			SET @NItemCount = CONVERT(INT, N'$(Количество мест - значение)', 0)
		END TRY
		BEGIN CATCH
			PRINT 'Ошибка преобразования значения количества мест в INT!' 
		END CATCH
	END
	DECLARE @NVolumeEngUnitId int = (SELECT TOP 1 [EngUnit].[EngUnitId] FROM [EngUnit] WHERE [EngUnit].[LAbbreviation] = N'$(Объем - ЕИ)')
	IF @NVolumeEngUnitId IS NULL SET @NVolumeEngUnitId = 48 /* метр кубический */
	DECLARE	@NWeightEngUnitId int = (SELECT TOP 1 [EngUnit].[EngUnitId] FROM [EngUnit] WHERE [EngUnit].[LAbbreviation] = N'$(Масса - ЕИ)')
	IF @NWeightEngUnitId IS NULL SET @NWeightEngUnitId = 52 /* килограмм */
	EXEC [dbo].[Dims_Insert] default, @NDimsId, @NWeight, NULL, @NWeightEngUnitId, @NVolume, @NVolumeEngUnitId, NULL, NULL, NULL, NULL,
		@NItemCount, 0

	EXEC [dbo].[AEBatch_Insert] default, @NAEBatchUid, @NAEUid, @NCode, @NNum, NULL, @NAEBatchStatudID, @NDimsId, @NManufacturerUid, @NManufacturerAddressUid,
		@NSupplierUid, @NSupplierAddressUid, N'$(Номер паспорта)', @NDocIssueDate, N'$(Номер акта приемки)', @NAcceptanceDate, @NCreationDate, @NPeriodId,
		@NPeriodLen, @NPeriodTypeUid, @NStorageOrgUnitId, NULL, @NOwnerOrgUnitId, NULL, @NUserId, 0, N'$(Требования к хранению)', @NCreationDate, @NInAccrScope,
		@NShelfLifeDate
	
	UPDATE [AEBatchRequest]	SET 
		[AEBatchRequest].AEBatchUid = @NAEBatchUid
	WHERE [AEBatchRequest].[AEBatchRequestUid] = @NAEBatchRequestUid
END</CreateSql>
      <EditSql>/* Следующие ключи изменять вручную запрещено!!!
AEUid (Ключ ОУ) 
AEBatchRequestUid (Ключ заявки)
*/
SET LANGUAGE Russian;
DECLARE @NRV timestamp
DECLARE @NAEUid uniqueidentifier = '$(AEUid (Ключ ОУ))'
DECLARE @NAEBatchRequestUid uniqueidentifier = '$(AEBatchRequestUid (Ключ заявки))'
DECLARE @NAEBatchUid uniqueidentifier = NULL
DECLARE @NAESpendingPurposeUid uniqueidentifier = NULL
DECLARE @NSpendingPurposeUid uniqueidentifier = NULL
DECLARE @NV1 int = NULL
DECLARE @NHazardClassId int = NULL
DECLARE @NHumanEffectId int = NULL
DECLARE @NOwnerOrgUnitId int = NULL
DECLARE @NStorageOrgUnitId int = NULL
DECLARE @NGenerate nvarchar(10) = SUBSTRING(CONVERT(NVARCHAR(100), HASHBYTES('MD5', CAST(SYSDATETIME() AS NVARCHAR)), 2), 0, 12)
DECLARE @NDescriptionOU NVARCHAR(512) = NULL

IF (@NAEBatchRequestUid IS NOT NULL) 
	SET @NAEBatchUid = (SELECT [AEBatchRequest].[AEBatchUid] FROM [AEBatchRequest] WHERE [AEBatchRequest].AEBatchRequestUid = @NAEBatchRequestUid AND [AEBatchRequest].[AEUid] = @NAEUid)

DECLARE @NAEName NVARCHAR(150) = N'$(Наименование ОУ)'
IF (@NAEName IS NULL OR @NAEName = '') SET @NAEName = 'Новый объект учета - ' + @NGenerate 

DECLARE @NAECode NVARCHAR(50) = N'$(Условное обозначение\Код ОУ)'
IF (@NAECode IS NULL OR @NAECode = '') SET @NAECode = 'Новый код учета - ' + @NGenerate   

IF N'$(Описание ОУ)' &lt;&gt; '' AND N'$(Описание ОУ)' IS NOT NULL SET @NDescriptionOU = N'$(Описание ОУ)'

/* Правка по ОУ */
UPDATE [AE] SET 
	[AE].[Name] = @NAEName,
	[AE].[Code] = @NAECode, 
	[AE].[Description] = @NDescriptionOU,
	[AE].[ProductUid] = (SELECT [Product].[ProductUid] FROM [Product] WHERE [Product].[Name] = N'$(Продукт ОУ)'),
	[AE].[PckgTypeUid] = (SELECT [PckgType].[PckgTypeUid] FROM [PckgType] INNER JOIN [ObjectProp] ON 
		[PckgType].[PckgTypeUid] = [ObjectProp].[ObjectPropUid] WHERE [ObjectProp].[Name] =  N'$(Количество - тип тары)')
WHERE
	[AE].[AEUid] = @NAEUid
DECLARE @NAEType TABLE (EntityTypeUid uniqueidentifier)
INSERT INTO @NAEType
SELECT [EntityType].[EntityTypeUid] FROM [EntityType]
WHERE [dbo].[EntityType].[Name] in (SELECT CONVERT(NVARCHAR, Item) FROM [dbo].[spc_sys_ParseString](N'$(Тип ОУ)', ';'));
DELETE FROM [AEType] WHERE [AEType].[EntityTypeUid] NOT IN (SELECT EntityTypeUid FROM @NAEType) AND [AEType].[AEUid] = @NAEUid
INSERT INTO [AEType]
SELECT NEWID(), @NAEUid, [@NAEType].[EntityTypeUid] FROM @NAEType
WHERE [@NAEType].[EntityTypeUid] NOT IN (SELECT EntityTypeUid FROM [AEType] WHERE [AEType].[AEUid] = @NAEUid)

IF '$(Класс опасности (0 - нет, 1 - да). Вещества чрезвычайно опасные)' = '1' SET @NV1 = 1 ELSE SET @NV1 = 0
SET @NHazardClassId = (SELECT [AEClassifier].[ItemId] 
	FROM [AEClassifier] INNER JOIN [Classifier] ON [AEClassifier].[ItemId] = [Classifier].[ItemId] 
		AND [Classifier].Name = 'Вещества чрезвычайно опасные')
IF (@NV1 = 0) BEGIN TRY EXEC [dbo].[AEHazardClass_Delete] default, @NAEUid, @NHazardClassId END TRY
	BEGIN CATCH PRINT 'Запись была удалена ранее!' END CATCH
IF (@NV1 = 1) BEGIN TRY EXEC [dbo].[AEHazardClass_Insert] default, @NAEUid, @NHazardClassId END TRY
	BEGIN CATCH PRINT 'Запись была добавлена ранее!' END CATCH

IF '$(Класс опасности (0 - нет, 1 - да). Вещества высокоопасные)' = '1' SET @NV1 = 1 ELSE SET @NV1 = 0
SET @NHazardClassId = (SELECT [AEClassifier].[ItemId] 
	FROM [AEClassifier] INNER JOIN [Classifier] ON [AEClassifier].[ItemId] = [Classifier].[ItemId] 
		AND [Classifier].Name = 'Вещества высокоопасные')
IF (@NV1 = 0) BEGIN TRY EXEC [dbo].[AEHazardClass_Delete] default, @NAEUid, @NHazardClassId END TRY
	BEGIN CATCH PRINT 'Запись была удалена ранее!' END CATCH
IF (@NV1 = 1) BEGIN TRY EXEC [dbo].[AEHazardClass_Insert] default, @NAEUid, @NHazardClassId END TRY
	BEGIN CATCH PRINT 'Запись была добавлена ранее!' END CATCH

IF '$(Класс опасности (0 - нет, 1 - да). Вещества умеренно опасные)' = '1' SET @NV1 = 1 ELSE SET @NV1 = 0
SET @NHazardClassId = (SELECT [AEClassifier].[ItemId] 
	FROM [AEClassifier] INNER JOIN [Classifier] ON [AEClassifier].[ItemId] = [Classifier].[ItemId] 
		AND [Classifier].Name = 'Вещества умеренно опасные')
IF (@NV1 = 0) BEGIN TRY EXEC [dbo].[AEHazardClass_Delete] default, @NAEUid, @NHazardClassId END TRY
	BEGIN CATCH PRINT 'Запись была удалена ранее!' END CATCH
IF (@NV1 = 1) BEGIN TRY EXEC [dbo].[AEHazardClass_Insert] default, @NAEUid, @NHazardClassId END TRY
	BEGIN CATCH PRINT 'Запись была добавлена ранее!' END CATCH

IF '$(Класс опасности (0 - нет, 1 - да). Вещества малоопасные)' = '1' SET @NV1 = 1 ELSE SET @NV1 = 0
SET @NHazardClassId = (SELECT [AEClassifier].[ItemId] 
	FROM [AEClassifier] INNER JOIN [Classifier] ON [AEClassifier].[ItemId] = [Classifier].[ItemId] 
		AND [Classifier].Name = 'Вещества малоопасные')
IF (@NV1 = 0) BEGIN TRY EXEC [dbo].[AEHazardClass_Delete] default, @NAEUid, @NHazardClassId END TRY
	BEGIN CATCH PRINT 'Запись была удалена ранее!' END CATCH
IF (@NV1 = 1) BEGIN TRY EXEC [dbo].[AEHazardClass_Insert] default, @NAEUid, @NHazardClassId END TRY
	BEGIN CATCH PRINT 'Запись была добавлена ранее!' END CATCH

IF '$(Влияние на организм (0 - нет, 1 - да). Обще токсичные)' = '1' SET @NV1 = 1 ELSE SET @NV1 = 0
SET @NHumanEffectId = (SELECT [AEClassifier].[ItemId] 
	FROM [AEClassifier] INNER JOIN [Classifier] ON [AEClassifier].[ItemId] = [Classifier].[ItemId] 
		AND [Classifier].Name = 'Обще токсичные')
IF (@NV1 = 0) BEGIN TRY EXEC [dbo].[AEHumanEffect_Delete] default, @NAEUid, @NHumanEffectId END TRY
	BEGIN CATCH PRINT 'Запись была удалена ранее!' END CATCH
IF (@NV1 = 1) BEGIN TRY EXEC [dbo].[AEHumanEffect_Insert] default, @NAEUid, @NHumanEffectId END TRY
	BEGIN CATCH PRINT 'Запись была добавлена ранее!' END CATCH

IF '$(Влияние на организм (0 - нет, 1 - да). Раздражающие)' = '1' SET @NV1 = 1 ELSE SET @NV1 = 0
SET @NHumanEffectId = (SELECT [AEClassifier].[ItemId] 
	FROM [AEClassifier] INNER JOIN [Classifier] ON [AEClassifier].[ItemId] = [Classifier].[ItemId] 
		AND [Classifier].Name = 'Раздражающие')
IF (@NV1 = 0) BEGIN TRY EXEC [dbo].[AEHumanEffect_Delete] default, @NAEUid, @NHumanEffectId END TRY
	BEGIN CATCH PRINT 'Запись была удалена ранее!' END CATCH
IF (@NV1 = 1) BEGIN TRY EXEC [dbo].[AEHumanEffect_Insert] default, @NAEUid, @NHumanEffectId END TRY
	BEGIN CATCH PRINT 'Запись была добавлена ранее!' END CATCH

IF '$(Влияние на организм (0 - нет, 1 - да). Сенсибилизирующие)' = '1' SET @NV1 = 1 ELSE SET @NV1 = 0
SET @NHumanEffectId = (SELECT [AEClassifier].[ItemId] 
	FROM [AEClassifier] INNER JOIN [Classifier] ON [AEClassifier].[ItemId] = [Classifier].[ItemId] 
		AND [Classifier].Name = 'Сенсибилизирующие')
IF (@NV1 = 0) BEGIN TRY EXEC [dbo].[AEHumanEffect_Delete] default, @NAEUid, @NHumanEffectId END TRY
	BEGIN CATCH PRINT 'Запись была удалена ранее!' END CATCH
IF (@NV1 = 1) BEGIN TRY EXEC [dbo].[AEHumanEffect_Insert] default, @NAEUid, @NHumanEffectId END TRY
	BEGIN CATCH PRINT 'Запись была добавлена ранее!' END CATCH

IF '$(Влияние на организм (0 - нет, 1 - да). Канцерогенные)' = '1' SET @NV1 = 1 ELSE SET @NV1 = 0
SET @NHumanEffectId = (SELECT [AEClassifier].[ItemId] 
	FROM [AEClassifier] INNER JOIN [Classifier] ON [AEClassifier].[ItemId] = [Classifier].[ItemId] 
		AND [Classifier].Name = 'Канцерогенные')
IF (@NV1 = 0) BEGIN TRY EXEC [dbo].[AEHumanEffect_Delete] default, @NAEUid, @NHumanEffectId END TRY
	BEGIN CATCH PRINT 'Запись была удалена ранее!' END CATCH
IF (@NV1 = 1) BEGIN TRY EXEC [dbo].[AEHumanEffect_Insert] default, @NAEUid, @NHumanEffectId END TRY
	BEGIN CATCH PRINT 'Запись была добавлена ранее!' END CATCH

IF '$(Влияние на организм (0 - нет, 1 - да). Мутагенные)' = '1' SET @NV1 = 1 ELSE SET @NV1 = 0
SET @NHumanEffectId = (SELECT [AEClassifier].[ItemId] 
	FROM [AEClassifier] INNER JOIN [Classifier] ON [AEClassifier].[ItemId] = [Classifier].[ItemId] 
		AND [Classifier].Name = 'Мутагенные')
IF (@NV1 = 0) BEGIN TRY EXEC [dbo].[AEHumanEffect_Delete] default, @NAEUid, @NHumanEffectId END TRY
	BEGIN CATCH PRINT 'Запись была удалена ранее!' END CATCH
IF (@NV1 = 1) BEGIN TRY EXEC [dbo].[AEHumanEffect_Insert] default, @NAEUid, @NHumanEffectId END TRY
	BEGIN CATCH PRINT 'Запись была добавлена ранее!' END CATCH

IF '$(Влияние на организм (0 - нет, 1 - да). Влияющие на репродуктивную функцию)' = '1' SET @NV1 = 1 ELSE SET @NV1 = 0
SET @NHumanEffectId = (SELECT [AEClassifier].[ItemId] 
	FROM [AEClassifier] INNER JOIN [Classifier] ON [AEClassifier].[ItemId] = [Classifier].[ItemId] 
		AND [Classifier].Name = 'Влияющие на репродуктивную функцию')
IF (@NV1 = 0) BEGIN TRY EXEC [dbo].[AEHumanEffect_Delete] default, @NAEUid, @NHumanEffectId END TRY
	BEGIN CATCH PRINT 'Запись была удалена ранее!' END CATCH
IF (@NV1 = 1) BEGIN TRY EXEC [dbo].[AEHumanEffect_Insert] default, @NAEUid, @NHumanEffectId END TRY
	BEGIN CATCH PRINT 'Запись была добавлена ранее!' END CATCH

IF '$(Цели списания (0 - нет, 1 - да). На градуировку)' = '1' SET @NV1 = 1 ELSE SET @NV1 = 0
SET @NSpendingPurposeUid = (SELECT [SpendingPurposeUid] FROM [SpendingPurpose] WHERE [SpendingPurpose].Name = 'На градуировку')
IF (@NV1 = 0) BEGIN SET @NAESpendingPurposeUid = (SELECT [AESpendingPurpose].[AESpendingPurposeUid] FROM [AESpendingPurpose] WHERE 
	[AESpendingPurpose].[AEUid] = @NAEUid AND [AESpendingPurpose].[SpendingPurposeUid] = @NSpendingPurposeUid)
	IF @NAESpendingPurposeUid IS NOT NULL EXEC [dbo].[AESpendingPurpose_Delete] default, @NAESpendingPurposeUid, @NAEUid, @NSpendingPurposeUid
	END
IF (@NV1 = 1) BEGIN SET @NAESpendingPurposeUid = (SELECT [AESpendingPurpose].[AESpendingPurposeUid] FROM [AESpendingPurpose] WHERE 
	[AESpendingPurpose].[AEUid] = @NAEUid AND [AESpendingPurpose].[SpendingPurposeUid] = @NSpendingPurposeUid)
	IF @NAESpendingPurposeUid IS NULL BEGIN SET @NAESpendingPurposeUid = NEWID();
		EXEC [dbo].[AESpendingPurpose_Insert] default, @NAESpendingPurposeUid, @NAEUid, @NSpendingPurposeUid END
	END	

IF '$(Цели списания (0 - нет, 1 - да). На испытания)' = '1' SET @NV1 = 1 ELSE SET @NV1 = 0
SET @NSpendingPurposeUid = (SELECT [SpendingPurposeUid] FROM [SpendingPurpose] WHERE [SpendingPurpose].Name = 'На испытания')
IF (@NV1 = 0) BEGIN SET @NAESpendingPurposeUid = (SELECT [AESpendingPurpose].[AESpendingPurposeUid] FROM [AESpendingPurpose] WHERE 
	[AESpendingPurpose].[AEUid] = @NAEUid AND [AESpendingPurpose].[SpendingPurposeUid] = @NSpendingPurposeUid)
	IF @NAESpendingPurposeUid IS NOT NULL EXEC [dbo].[AESpendingPurpose_Delete] default, @NAESpendingPurposeUid, @NAEUid, @NSpendingPurposeUid
	END
IF (@NV1 = 1) BEGIN SET @NAESpendingPurposeUid = (SELECT [AESpendingPurpose].[AESpendingPurposeUid] FROM [AESpendingPurpose] WHERE 
	[AESpendingPurpose].[AEUid] = @NAEUid AND [AESpendingPurpose].[SpendingPurposeUid] = @NSpendingPurposeUid)
	IF @NAESpendingPurposeUid IS NULL BEGIN SET @NAESpendingPurposeUid = NEWID();
		EXEC [dbo].[AESpendingPurpose_Insert] default, @NAESpendingPurposeUid, @NAEUid, @NSpendingPurposeUid END
	END

IF '$(Цели списания (0 - нет, 1 - да). На контрольную процедуру ВЛК)' = '1' SET @NV1 = 1 ELSE SET @NV1 = 0
SET @NSpendingPurposeUid = (SELECT [SpendingPurposeUid] FROM [SpendingPurpose] WHERE [SpendingPurpose].Name = 'На контрольную процедуру')
IF (@NV1 = 0) BEGIN SET @NAESpendingPurposeUid = (SELECT [AESpendingPurpose].[AESpendingPurposeUid] FROM [AESpendingPurpose] WHERE 
	[AESpendingPurpose].[AEUid] = @NAEUid AND [AESpendingPurpose].[SpendingPurposeUid] = @NSpendingPurposeUid)
	IF @NAESpendingPurposeUid IS NOT NULL EXEC [dbo].[AESpendingPurpose_Delete] default, @NAESpendingPurposeUid, @NAEUid, @NSpendingPurposeUid
	END
IF (@NV1 = 1) BEGIN SET @NAESpendingPurposeUid = (SELECT [AESpendingPurpose].[AESpendingPurposeUid] FROM [AESpendingPurpose] WHERE 
	[AESpendingPurpose].[AEUid] = @NAEUid AND [AESpendingPurpose].[SpendingPurposeUid] = @NSpendingPurposeUid)
	IF @NAESpendingPurposeUid IS NULL BEGIN SET @NAESpendingPurposeUid = NEWID();
		EXEC [dbo].[AESpendingPurpose_Insert] default, @NAESpendingPurposeUid, @NAEUid, @NSpendingPurposeUid END
	END

IF '$(Цели списания (0 - нет, 1 - да). На общие нужды)' = '1' SET @NV1 = 1 ELSE SET @NV1 = 0
SET @NSpendingPurposeUid = (SELECT [SpendingPurposeUid] FROM [SpendingPurpose] WHERE [SpendingPurpose].Name = 'На общие нужды')
IF (@NV1 = 0) BEGIN SET @NAESpendingPurposeUid = (SELECT [AESpendingPurpose].[AESpendingPurposeUid] FROM [AESpendingPurpose] WHERE 
	[AESpendingPurpose].[AEUid] = @NAEUid AND [AESpendingPurpose].[SpendingPurposeUid] = @NSpendingPurposeUid)
	IF @NAESpendingPurposeUid IS NOT NULL EXEC [dbo].[AESpendingPurpose_Delete] default, @NAESpendingPurposeUid, @NAEUid, @NSpendingPurposeUid
	END
IF (@NV1 = 1) BEGIN SET @NAESpendingPurposeUid = (SELECT [AESpendingPurpose].[AESpendingPurposeUid] FROM [AESpendingPurpose] WHERE 
	[AESpendingPurpose].[AEUid] = @NAEUid AND [AESpendingPurpose].[SpendingPurposeUid] = @NSpendingPurposeUid)
	IF @NAESpendingPurposeUid IS NULL BEGIN SET @NAESpendingPurposeUid = NEWID();
		EXEC [dbo].[AESpendingPurpose_Insert] default, @NAESpendingPurposeUid, @NAEUid, @NSpendingPurposeUid END
	END

IF '$(Цели списания (0 - нет, 1 - да). На приготовление растворов)' = '1' SET @NV1 = 1 ELSE SET @NV1 = 0
SET @NSpendingPurposeUid = (SELECT [SpendingPurposeUid] FROM [SpendingPurpose] WHERE [SpendingPurpose].Name = 'На приготовление объектов учета')
IF (@NV1 = 0) BEGIN SET @NAESpendingPurposeUid = (SELECT [AESpendingPurpose].[AESpendingPurposeUid] FROM [AESpendingPurpose] WHERE 
	[AESpendingPurpose].[AEUid] = @NAEUid AND [AESpendingPurpose].[SpendingPurposeUid] = @NSpendingPurposeUid)
	IF @NAESpendingPurposeUid IS NOT NULL EXEC [dbo].[AESpendingPurpose_Delete] default, @NAESpendingPurposeUid, @NAEUid, @NSpendingPurposeUid
	END
IF (@NV1 = 1) BEGIN SET @NAESpendingPurposeUid = (SELECT [AESpendingPurpose].[AESpendingPurposeUid] FROM [AESpendingPurpose] WHERE 
	[AESpendingPurpose].[AEUid] = @NAEUid AND [AESpendingPurpose].[SpendingPurposeUid] = @NSpendingPurposeUid)
	IF @NAESpendingPurposeUid IS NULL BEGIN SET @NAESpendingPurposeUid = NEWID();
		EXEC [dbo].[AESpendingPurpose_Insert] default, @NAESpendingPurposeUid, @NAEUid, @NSpendingPurposeUid END
	END

/* Правка заявки на партию ОУ */
SET @NStorageOrgUnitId = (SELECT [OrgUnit].[OrgUnitId] FROM [OrgUnit] WHERE [OrgUnit].[Name] = N'$(Местоположение. Склад)');
IF (@NStorageOrgUnitId IS NULL) SET @NStorageOrgUnitId = (SELECT [OrgUnit].[OrgUnitId] FROM [OrgUnit] WHERE [OrgUnit].[Name] = 'Без лаборатории');
SET @NOwnerOrgUnitId = (SELECT [OrgUnit].[OrgUnitId] FROM [OrgUnit] WHERE [OrgUnit].[Name] = N'$(Местоположение. Потребитель)');
IF (@NOwnerOrgUnitId IS NULL) SET @NOwnerOrgUnitId = (SELECT [OrgUnit].[OrgUnitId] FROM [OrgUnit] WHERE [OrgUnit].[Name] = 'Без лаборатории');
UPDATE [AEBatchRequest] SET 
	[AEBatchRequest].Code = N'$(Код заявки)',
	[AEBatchRequest].[StorageOrgUnitId] = @NStorageOrgUnitId,
	[AEBatchRequest].[OwnerOrgUnitId] = @NOwnerOrgUnitId
WHERE
	[AEBatchRequest].[AEBatchRequestUid] = @NAEBatchRequestUid AND [AEBatchRequest].[AEUid] = @NAEUid

/* Правка партии на ОУ по заявке */
IF @NAEBatchUid IS NOT NULL BEGIN
	DECLARE @NNum NVARCHAR(150) = N'$(Номер партии)'
	IF (@NNum IS NULL OR @NNum = '') SET @NNum = 'Номер партии - ' + @NGenerate
	
	DECLARE @NCode NVARCHAR(150) = N'$(Код партии)'
	IF (@NCode IS NULL OR @NCode = '') SET @NCode = 'Код партии - ' + @NGenerate	
	
	DECLARE @NCreationDate datetime = GETDATE()
	IF N'$(Дата производства)' &lt;&gt; '' AND N'$(Дата производства)' IS NOT NULL
		BEGIN TRY 
			SET @NCreationDate = CONVERT(datetime, N'$(Дата производства)', 104)
		END TRY
		BEGIN CATCH 
			BEGIN TRY
				SET @NCreationDate = CONVERT(datetime, CONVERT(INT, N'$(Дата производства)') - 2)
			END TRY
			BEGIN CATCH
				SET @NCreationDate = GETDATE()
			END CATCH 
		END CATCH
	
	DECLARE @NShelfLifeDate datetime = DATEADD(MONTH, 1, CONVERT(VARCHAR(10), @NCreationDate, 104))
	DECLARE @TypeInterval NVARCHAR(10) = N'$(Срок хранения - тип интервала)'
	DECLARE @IntervalInt int = NULL;
	
	IF N'$(Дата окончания срока хранения)' &lt;&gt; '' AND N'$(Дата окончания срока хранения)' IS NOT NULL
		BEGIN TRY 
			SET @NShelfLifeDate = CONVERT(datetime, N'$(Дата окончания срока хранения)', 104)
		END TRY	
		BEGIN CATCH	
			BEGIN TRY
				SET @NShelfLifeDate = CONVERT(datetime, CONVERT(INT, N'$(Дата окончания срока хранения)') - 2)
			END TRY
			BEGIN CATCH
				SET @NShelfLifeDate = NULL
			END CATCH
		END CATCH
	
	IF N'$(Дата окончания срока хранения)' = '' OR N'$(Дата окончания срока хранения)' IS NULL BEGIN
		IF (@TypeInterval IS NOT NULL) BEGIN
			BEGIN TRY SET @IntervalInt = CAST(N'$(Срок хранения - значение)' AS INT)
			END TRY
			BEGIN CATCH SET @IntervalInt = NULL
			END	CATCH 			
			IF @TypeInterval = 'Год' SET @NShelfLifeDate = DATEADD(year, @IntervalInt, CONVERT(VARCHAR(10), @NCreationDate, 104))
			IF @TypeInterval = 'Месяц' SET @NShelfLifeDate = DATEADD(month, @IntervalInt, CONVERT(VARCHAR(10), @NCreationDate, 104))
			IF @TypeInterval = 'День' SET @NShelfLifeDate = DATEADD(day, @IntervalInt, CONVERT(VARCHAR(10), @NCreationDate, 104))	
			IF @NShelfLifeDate IS NULL SET @NShelfLifeDate = DATEADD(MONTH, 1, CONVERT(VARCHAR(10), @NCreationDate, 104))
			END
	END
	
	DECLARE @NPeriodId int = (SELECT [Period].[PeriodId] FROM [Period] INNER JOIN [AEBatch] ON 
		[AEBatch].[ShelfLifePeriodId] = [Period].[PeriodId] WHERE [AEBatch].[AEBatchUid] = @NAEBatchUid)
	DECLARE @NPeriodTypeUid uniqueidentifier = (SELECT [PeriodType].[PeriodTypeUid] FROM [PeriodType] WHERE [PeriodType].[Order] = 
		(SELECT (CASE WHEN (SELECT DATEDIFF(year, @NCreationDate, @NShelfLifeDate)) &gt; 0 THEN (SELECT 900) ELSE 
			CASE WHEN (SELECT DATEDIFF(month, @NCreationDate, @NShelfLifeDate)) &gt; 0 THEN (SELECT 700) ELSE
				CASE WHEN (SELECT DATEDIFF(day, @NCreationDate, @NShelfLifeDate)) &gt; 0 THEN (SELECT 400) ELSE
					(SELECT 400) END END END)))
	DECLARE @NPeriodLen float = (SELECT (CASE WHEN (SELECT DATEDIFF(year, @NCreationDate, @NShelfLifeDate)) &gt; 0 THEN 
		(SELECT DATEDIFF(year, @NCreationDate, @NShelfLifeDate)) ELSE 
			CASE WHEN (SELECT DATEDIFF(month, @NCreationDate, @NShelfLifeDate)) &gt; 0 THEN
				(SELECT DATEDIFF(month, @NCreationDate, @NShelfLifeDate)) ELSE
					CASE WHEN (SELECT DATEDIFF(day, @NCreationDate, @NShelfLifeDate)) &gt; 0 THEN
						(SELECT DATEDIFF(day, @NCreationDate, @NShelfLifeDate)) ELSE
							(SELECT 0) END END END))
	UPDATE [Period] SET
		[Period].PeriodTypeUid = @NPeriodTypeUid,
		[Period].[Len] = @NPeriodLen
	WHERE [Period].PeriodId = @NPeriodId	

	DECLARE @NR Table (CompanyIndex NVARCHAR(255), id INT) 
	DECLARE @NRID INT = 0
	DECLARE @NManufacturerUid uniqueidentifier = NULL;
	DECLARE @NManufacturerAddressUid uniqueidentifier = NULL;
	DECLARE @NSupplierUid uniqueidentifier = NULL;
	DECLARE @NSupplierAddressUid uniqueidentifier = NULL;
	DECLARE @NManufacturerName NVARCHAR(150)
	DECLARE @NManufacturerAddressName NVARCHAR(255);
	DECLARE @NSupplierName NVARCHAR(150)
	DECLARE @NSupplierAddressName NVARCHAR(255);
	INSERT INTO @NR 
	SELECT CONVERT(NVARCHAR(255), Item), ROW_NUMBER() OVER (ORDER BY @NRID) AS id FROM [dbo].[spc_sys_ParseString](N'$(Производитель, адрес)', ';')
	SET @NManufacturerName = (SELECT CompanyIndex FROM @NR WHERE id = 1);
	SET @NManufacturerAddressName = (SELECT CompanyIndex FROM @NR WHERE id = 2)
	SET @NManufacturerUid = (SELECT [ContractCompany].[ContractCompanyUid] FROM [ContractCompany]
		WHERE [ContractCompany].[Name] = (SELECT CompanyIndex FROM @NR WHERE id = 1))
	SET @NManufacturerAddressUid = (SELECT [ContractAddress].[ContractAddressUid] FROM [ContractAddress]
		INNER JOIN [ContractCompanyAddress] ON [ContractAddress].[ContractAddressUid] = [ContractCompanyAddress].[AddressUid]
			WHERE [ContractAddress].[Address] = (SELECT CompanyIndex FROM @NR WHERE id = 2) AND [ContractCompanyAddress].[CompanyUid] = @NManufacturerUid)	
	/* Если имя компании есть, а найти ее не удалось, то добавляем ее */
	IF @NManufacturerName IS NOT NULL AND @NManufacturerUid IS NULL BEGIN
		SET @NManufacturerUid = NEWID()
		EXEC [dbo].[ContractCompany_Insert] default, @NManufacturerUid, @NManufacturerName, NULL, 0, 1, 32
		END	
	/* Если адрес есть, а ключа нет, то добавляем адрес. */
	IF @NManufacturerAddressName IS NOT NULL AND @NManufacturerAddressUid IS NULL BEGIN	
		SET @NManufacturerAddressUid = NEWID()
		DECLARE @NContractAddressTypeUid uniqueidentifier = (SELECT [ContractAddressType].[ContractAddressTypeUid] 
			FROM [ContractAddressType] WHERE [ContractAddressType].[Name] = 'юридический')
		DECLARE @LocationUid uniqueidentifier = (SELECT [ContractLocation].[ContractLocationUid] 
			FROM [ContractLocation] WHERE [ContractLocation].[Name] = 'Российская Федерация');
		EXEC [dbo].[ContractAddress_Insert] default, @NManufacturerAddressUid, @NContractAddressTypeUid, @LocationUid,
			@NManufacturerAddressName, NULL, 0, 1, NULL
		EXEC [dbo].[ContractCompanyAddress_Insert] default, @NManufacturerUid, @NManufacturerAddressUid, 0, 0
		END
	DELETE FROM @NR
	INSERT INTO @NR 
	SELECT CONVERT(NVARCHAR(255), Item), ROW_NUMBER() OVER (ORDER BY @NRID) AS id FROM [dbo].[spc_sys_ParseString](N'$(Поставщик, адрес)', ';')
	SET @NSupplierName = (SELECT CompanyIndex FROM @NR WHERE id = 1);
	SET @NSupplierAddressName = (SELECT CompanyIndex FROM @NR WHERE id = 2)
	SET @NSupplierUid = (SELECT [ContractCompany].[ContractCompanyUid] FROM [ContractCompany]
		WHERE [ContractCompany].[Name] = (SELECT CompanyIndex FROM @NR WHERE id = 1))
	SET @NSupplierAddressUid = (SELECT [ContractAddress].[ContractAddressUid] FROM [ContractAddress]
		INNER JOIN [ContractCompanyAddress] ON [ContractAddress].[ContractAddressUid] = [ContractCompanyAddress].[AddressUid]
			WHERE [ContractAddress].[Address] = (SELECT CompanyIndex FROM @NR WHERE id = 2) AND [ContractCompanyAddress].[CompanyUid] = @NSupplierUid)	
	/* Если имя компании есть, а найти ее не удалось, то добавляем ее */
	IF @NSupplierName IS NOT NULL AND @NSupplierUid IS NULL BEGIN
		SET @NSupplierUid = NEWID()
		EXEC [dbo].[ContractCompany_Insert] default, @NSupplierUid, @NSupplierName, NULL, 0, 1, 32
		END
	/* Если адрес есть, а ключа нет, то добавляем адрес. */
	IF @NSupplierAddressName IS NOT NULL AND @NSupplierAddressUid IS NULL BEGIN	
		SET @NSupplierAddressUid = NEWID()
		SET @NContractAddressTypeUid = (SELECT [ContractAddressType].[ContractAddressTypeUid] 
			FROM [ContractAddressType] WHERE [ContractAddressType].[Name] = 'юридический')
		SET @LocationUid = (SELECT [ContractLocation].[ContractLocationUid] 
			FROM [ContractLocation] WHERE [ContractLocation].[Name] = 'Российская Федерация');
		EXEC [dbo].[ContractAddress_Insert] default, @NSupplierAddressUid, @NContractAddressTypeUid, @LocationUid, 
			@NSupplierAddressName, NULL, 0, 1, NULL
		EXEC [dbo].[ContractCompanyAddress_Insert] default, @NSupplierUid, @NSupplierAddressUid, 0, 0
		END	
		
	DECLARE @NInAccrScope bit = 0
	IF '$(Входит в область аккредитации (0 - нет, 1 - да))' = '1' SET @NInAccrScope = 1
	
	DECLARE @NDocIssueDate datetime = NULL
	DECLARE @NAcceptanceDate datetime = NULL
	IF N'$(Дата паспорта)' IS NOT NULL AND N'$(Дата паспорта)' &lt;&gt; ''
		BEGIN TRY
			SET @NDocIssueDate = CONVERT(datetime, N'$(Дата паспорта)', 104)
		END TRY
		BEGIN CATCH
			BEGIN TRY
				SET @NDocIssueDate = CONVERT(datetime, CONVERT(INT, N'$(Дата паспорта)') - 2)
			END TRY
			BEGIN CATCH
				SET @NDocIssueDate = NULL;
			END CATCH
		END CATCH
		
	IF N'$(Дата акта приемки)' IS NOT NULL AND N'$(Дата акта приемки)' &lt;&gt; ''
		BEGIN TRY
			SET @NAcceptanceDate = CONVERT(datetime, N'$(Дата акта приемки)', 104)
		END TRY
		BEGIN CATCH
			BEGIN TRY
				SET @NAcceptanceDate = CONVERT(datetime, CONVERT(INT, N'$(Дата акта приемки)') - 2)
			END TRY
			BEGIN CATCH
				SET @NAcceptanceDate = NULL;
			END CATCH
		END CATCH
				
	DECLARE @NDimsId int = (SELECT [AEBatch].[DimsId] FROM [AEBatch] WHERE [AEBatch].[AEBatchUid] = @NAEBatchUid)
	DECLARE @NVolume FLOAT = NULL
	DECLARE @NWeight FLOAT = NULL
	DECLARE @NItemCount INT = NULL
	IF N'$(Объем - значение)' &lt;&gt; '' BEGIN
		BEGIN TRY
			SET @NVolume = CONVERT(FLOAT, N'$(Объем - значение)', 0)
		END TRY
		BEGIN CATCH
			PRINT 'Ошибка преобразования значения объема в FLOAT!' 
		END CATCH
	END
	IF N'$(Масса - значение)' &lt;&gt; '' BEGIN
		BEGIN TRY
			SET @NWeight = CONVERT(FLOAT, N'$(Масса - значение)', 0)
		END TRY
		BEGIN CATCH
			PRINT 'Ошибка преобразования значения массы в FLOAT!' 
		END CATCH
	END
	IF N'$(Количество мест - значение)' &lt;&gt; '' BEGIN
		BEGIN TRY
			SET @NItemCount = CONVERT(INT, N'$(Количество мест - значение)', 0)
		END TRY
		BEGIN CATCH
			PRINT 'Ошибка преобразования значения количества мест в INT!' 
		END CATCH
	END
	UPDATE [Dims]
		SET [Dims].[VolumeEngUnitId] = (SELECT TOP 1 [EngUnit].[EngUnitId] FROM [EngUnit] WHERE [EngUnit].[LAbbreviation] = N'$(Объем - ЕИ)'),
			[Dims].[Volume] = @NVolume,
			[Dims].[WeightEngUnitId] = (SELECT TOP 1 [EngUnit].[EngUnitId] FROM [EngUnit] WHERE [EngUnit].[LAbbreviation] = N'$(Масса - ЕИ)'),
			[Dims].[Weight] = @NWeight,
			[Dims].ItemCount = @NItemCount
	WHERE [Dims].[DimsId] = @NDimsId	
	
	UPDATE [AEBatch]
		SET [AEBatch].[Code] = @NCode,
			[AEBatch].[Num] = @NNum,
			[AEBatch].[CreationDate] = @NCreationDate,
			[AEBatch].[ShelfLifeDate] = @NShelfLifeDate,
			[AEBatch].[ManufacturerUid] = @NManufacturerUid,
			[AEBatch].[ManufacturerAddressUid] = @NManufacturerAddressUid,
			[AEBatch].[SupplierUid] = @NSupplierUid,
			[AEBatch].[SupplierAddressUid] = @NSupplierAddressUid,
			[AEBatch].[DocNum] = N'$(Номер паспорта)',
			[AEBatch].[DocIssueDate] = @NDocIssueDate,
			[AEBatch].[AcceptanceNum] = N'$(Номер акта приемки)',
			[AEBatch].[AcceptanceDate] = @NAcceptanceDate,
			[AEBatch].[IssueDate] = @NCreationDate,
			[AEBatch].[StorageСonditions] = N'$(Требования к хранению)',
			[AEBatch].[InAccrScope] = @NInAccrScope
	WHERE [AEBatch].[AEBatchUid] = @NAEBatchUid
END</EditSql>
      <DeleteSql>SET LANGUAGE Russian;
DECLARE @aeuid as uniqueidentifier = '$(AEUid (Ключ ОУ))'
BEGIN TRANSACTION;
BEGIN TRY

	declare @AEBatchUids as table (AEBatchUid uniqueidentifier)
    insert into @AEBatchUids
    select [AEBatchUid]
    from [AEBatch] where AEUid = @AEUID 
    
    PRINT N'[AEBatchTest]:';
	DELETE FROM [AEBatchTest] WHERE [AEBatchUid]  IN (
		SELECT [AEBatchUid] FROM @AEBatchUids
	);
    
    PRINT N'[AEBatchRequestTest]:';
	DELETE FROM AEBatchRequestTest WHERE [AEBatchRequestUid] IN (
		SELECT [AEBatchRequestUid] FROM [AEBatchRequest] WHERE [AEBatchRequest].[AEBatchUid] IN (
		SELECT [AEBatchUid] FROM @AEBatchUids)
	);
	
    PRINT N'[AEBatchRequest]:';
	DELETE FROM AEBatchRequest WHERE [AEBatchUid]  IN (
		SELECT [AEBatchUid] FROM @AEBatchUids
	);
	
	PRINT N'[AEBatch]:';
	DELETE FROM [AEBatch] WHERE [AEBatchUid]  IN (
		SELECT [AEBatchUid] FROM @AEBatchUids
	);

	PRINT N'[Period]:'
	DECLARE @ShelfLifePeriodId INT;
	SELECT 	@ShelfLifePeriodId = [ShelfLifePeriodId]			
	FROM [dbo].[AEBatch]
	WHERE [AEBatchUid] IN (
		SELECT [AEBatchUid] FROM @AEBatchUids
	);	
	IF (@ShelfLifePeriodId IS NOT NULL)
	BEGIN
		DECLARE @Len int, @PeriodTypeUid uniqueidentifier;
		SELECT @Len = [Len], @PeriodTypeUid = [PeriodTypeUid] FROM [Period] WHERE [PeriodId] = @ShelfLifePeriodId;
		EXEC [dbo].[Period_Delete]
			1,
			@ShelfLifePeriodId,
			@Len,
			@PeriodTypeUid;
	END;

	--PRINT N'[AEBatchLog]:';
	DELETE FROM [AEBatchLog] WHERE [AEBatchUid]  IN (
		SELECT [AEBatchUid] FROM @AEBatchUids
	);	

	--PRINT N'[AEBatchOp]:';
	DELETE FROM [AEBatchOp] WHERE [AEBatchUid]  IN (
		SELECT [AEBatchUid] FROM @AEBatchUids
	);
	
	--PRINT '[AEBatchRequest]:';
	DELETE FROM [AEBatchRequest] WHERE [AEUid]  IN (
		@aeuid
	);	
	
	--PRINT N'[AE]:';
	DELETE FROM [AE] WHERE [AEUid]  IN (
		@aeuid
	);	

	--PRINT N'[Period]:'
	SELECT 	@ShelfLifePeriodId = [ShelfLifePeriodId]			
	FROM [dbo].[AE]
	WHERE [AEUid] IN (
		@aeuid
	);	
	IF (@ShelfLifePeriodId IS NOT NULL)
	BEGIN
		SELECT @Len = [Len], @PeriodTypeUid = [PeriodTypeUid] FROM [Period] WHERE [PeriodId] = @ShelfLifePeriodId;
		EXEC [dbo].[Period_Delete]
			1,
			@ShelfLifePeriodId,
			@Len,
			@PeriodTypeUid;
	END;
	
END TRY
BEGIN CATCH
	PRINT ERROR_MESSAGE();
	IF @@TRANCOUNT &gt; 0
	begin
		ROLLBACK TRANSACTION;
		PRINT N'Откат транзакции';
	end
END CATCH

IF @@TRANCOUNT &gt; 0
	begin
		COMMIT TRANSACTION;
		--PRINT N'Применение транзакции';
	end</DeleteSql>
      <ImageBuffer>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</ImageBuffer>
    </ItemChanger>
    <ItemChanger>
      <Name>LDS.ОУ_Характеристика</Name>
      <GetSQL>/* Не изменять и не удалять!!!
AEBatchTestUid (Ключ хар-ки партии ОУ) 
*/
SET LANGUAGE Russian;
SELECT 
	'x' AS [Select(x)],
	[AEBatchTest].[AEBatchTestUid] AS "AEBatchTestUid (Ключ хар-ки партии ОУ)",
	CASE WHEN [AE].[Name] IS NULL AND [StdDoc].[Name] IS NULL AND [GradeVer].[Name] IS NULL AND [AEBatch].[Num] IS NULL THEN NULL ELSE
		(CASE WHEN [AE].[Name] IS NULL THEN ';' ELSE ([AE].[Name] + ';') END + 
			CASE WHEN [StdDoc].[Name] IS NULL THEN ';' ELSE ([StdDoc].[Name] + ';') END + 
				CASE WHEN [GradeVer].[Name] IS NULL THEN ';' ELSE ([GradeVer].[Name] + ';') END +
					CASE WHEN [AEBatch].[Num] IS NULL THEN '' ELSE [AEBatch].[Num] END) END AS "Партия ОУ",
	[Test].[Name] AS "Показатель",
	CAST([AEBatchTest].[IsAttested] AS INT) "Аттестованное (0 - нет, 1 - да)",
	[EngUnit].[LAbbreviation] AS "Единица измерения",
	[AEBatchTestAnalog].Value AS "Значение",
	[AEBatchTestAnalog].AbsErr AS "Абсол. погрешность значения",
	[AEBatchTestAnalog].RelErr AS "Относит. погрешность значения, %",
	CASE WHEN [DigitalSet].[Name] IS NULL AND [AEBatchTestDigit].[Value] IS NULL THEN NULL ELSE
		(CASE WHEN [DigitalSet].[Name] IS NULL THEN ';' ELSE ([DigitalSet].[Name] + ';') END +
			CASE WHEN [AEBatchTestDigit].[Value] IS NULL THEN '' ELSE [AEBatchTestDigit].[Value] END)
				END AS "Значение дискретного набора"
	FROM [AE]
	LEFT JOIN [SpecVer] ON [AE].[SpecVerId] = [SpecVer].[SpecVerId]
	LEFT JOIN [StdDoc] ON [SpecVer].[SpecUid] = [StdDoc].[StdDocUid]
	LEFT JOIN [AEGrade] ON [AE].[AEUid] = [AEGrade].[AEUid]
	LEFT JOIN [GradeVer] ON [AEGrade].[GradeVerId] = [GradeVer].[GradeVerId]
	LEFT JOIN [AEBatch] ON [AE].[AEUid] = [AEBatch].[AEUid]
	INNER JOIN [AEBatchTest] ON [AEBatch].AEBatchUid = [AEBatchTest].[AEBatchUid]
	INNER JOIN [Test] ON [AEBatchTest].[TestId] = [Test].[Testid]
	LEFT JOIN [AEBatchTestAnalog] ON [AEBatchTest].[AEBatchTestUid] = [AEBatchTestAnalog].[AEBatchTestUid]
	LEFT JOIN [EngUnit] ON [AEBatchTestAnalog].[EngUnitId] = [EngUnit].[EngUnitId]
	LEFT JOIN [AEBatchTestDigit] ON [AEBatchTest].[AEBatchTestUid] = [AEBatchTestDigit].[AEBatchTestUid]
	LEFT JOIN [DigitalSet] ON [AEBatchTestDigit].[DigitalSetId] = [DigitalSet].[DigitalSetId]
WHERE [AEBatch].{0}</GetSQL>
      <GetSQLWhereString>AEBatchUid like '*'</GetSQLWhereString>
      <CreateSql>SET LANGUAGE Russian;
DECLARE @NPartyOU NVARCHAR(600) = N'$(Партия ОУ)'
DECLARE @NAEName NVARCHAR(150) = NULL
DECLARE @NStdDocName NVARCHAR(150) = NULL
DECLARE @NGradeVerName NVARCHAR(150) = NULL
DECLARE @NAEBatchNum NVARCHAR(150) = NULL
DECLARE @NRID INT = 0
DECLARE @NR TABLE (PartyIndex NVARCHAR(255), id INT) 
INSERT INTO @NR 
SELECT CONVERT(NVARCHAR(255), Item), ROW_NUMBER() OVER (ORDER BY @NRID) AS id FROM [dbo].[spc_sys_ParseString](@NPartyOU, ';')
SET @NAEName = (SELECT CASE WHEN PartyIndex = '' THEN NULL ELSE PartyIndex END FROM @NR WHERE id = 1)
SET @NStdDocName = (SELECT CASE WHEN PartyIndex = '' THEN NULL ELSE PartyIndex END FROM @NR WHERE id = 2)
SET @NGradeVerName = (SELECT CASE WHEN PartyIndex = '' THEN NULL ELSE PartyIndex END FROM @NR WHERE id = 3)
SET @NAEBatchNum = (SELECT CASE WHEN PartyIndex = '' THEN NULL ELSE PartyIndex END FROM @NR WHERE id = 4)
DECLARE @NAEBatchUid uniqueidentifier = NULL
DECLARE @NUserName NVARCHAR(100) = N'Администратор'
DECLARE @NUserId INT = (SELECT TOP 1 [User].[UserId] FROM [User] WHERE [User].[Name] = @NUserName)
DECLARE @NAEBatchTestUid uniqueidentifier = NEWID()
DECLARE @NLAbbreviation NVARCHAR(50) = N'$(Единица измерения)'

DECLARE @NValue FLOAT = NULL
BEGIN TRY
	SET @NValue = CONVERT(FLOAT, N'$(Значение)')
END TRY
BEGIN CATCH
	SET @NValue = NULL
END CATCH
	
DECLARE @NAbsErr FLOAT = NULL
BEGIN TRY
	SET @NAbsErr = CONVERT(FLOAT, N'$(Абсол. погрешность значения)')
END TRY
BEGIN CATCH
	SET @NAbsErr = NULL
END CATCH
	
DECLARE @NRelErr FLOAT = NULL
BEGIN TRY
	SET @NRelErr = CONVERT(FLOAT, N'$(Относит. погрешность значения, %)')
END TRY
BEGIN CATCH
	SET @NRelErr = NULL
END CATCH
	
DECLARE @NDigitTable Table (DigitIndex NVARCHAR(255), id INT) 
SET @NRID = 0
INSERT INTO @NDigitTable 
SELECT CONVERT(NVARCHAR(255), Item), ROW_NUMBER() OVER (ORDER BY @NRID) AS id FROM [dbo].[spc_sys_ParseString](N'$(Значение дискретного набора)', ';')
DECLARE @NDigitalSetName NVARCHAR(150) = (SELECT TOP 1 DigitIndex FROM @NDigitTable WHERE id = 1)
DECLARE @NDigitalValue NVARCHAR(50) = (SELECT TOP 1 DigitIndex FROM @NDigitTable WHERE id = 2)
DECLARE @NDigitalSetId INT = NULL

BEGIN TRANSACTION
BEGIN TRY

IF @NAEName IS NULL BEGIN
	RAISERROR(N'Ошибка в данных "Партия ОУ"! Наименование ОУ не может быть NULL или пустым.', 16, 1)
	END

IF @NAEBatchNum IS NULL BEGIN
	RAISERROR(N'Ошибка в данных "Партия ОУ"! Номер партии ОУ не может быть NULL или пустым.', 16, 1)
	END	

SET @NAEBatchUid = (SELECT [AEBatch].[AEBatchUid] FROM [AEBatch]
INNER JOIN [AE] ON [AEBatch].[AEUid] = [AE].[AEUid]
LEFT JOIN [SpecVer] ON [AE].[SpecVerId] = [SpecVer].[SpecVerId]
LEFT JOIN [StdDoc] ON [SpecVer].[SpecUid] = [StdDoc].[StdDocUid]
LEFT JOIN [AEGrade] ON [AE].[AEUid] = [AEGrade].[AEUid]
LEFT JOIN [GradeVer] ON [AEGrade].[GradeVerId] = [GradeVer].[GradeVerId]
WHERE [AE].[Name] = @NAEName AND ([StdDoc].Name = @NStdDocName OR (@NStdDocName IS NULL AND [AE].[SpecVerId] IS NULL)) AND
	([GradeVer].[Name] = @NGradeVerName OR (@NGradeVerName IS NULL AND [AEGrade].[AEGradeUid] IS NULL)) AND [AEBatch].[Num] = @NAEBatchNum)

IF @NAEBatchUid IS NULL BEGIN
	RAISERROR(N'Ошибка в данных "Партия ОУ"! Уникальный ключ партии AEBatchUid не найден по параметрам "Партия ОУ"', 16, 1)
	END ELSE BEGIN
	
	DECLARE @NTestType INT = 0;
	IF @NDigitalSetName IS NOT NULL OR @NDigitalValue IS NOT NULL BEGIN
		SET @NTestType = 1
		SET @NDigitalSetId = (SELECT TOP 1 [DigitalSet].[DigitalSetId] FROM [DigitalSet] WHERE [DigitalSet].[Name] = @NDigitalSetName)
		IF @NDigitalSetId IS NULL BEGIN
			RAISERROR(N'Ошибка в данных "Значение дискретного набора"! В базе данных ЛИМС такой дискретный набор отсутствует.', 16, 1)
		END
	IF @NDigitalValue IS NOT NULL AND (SELECT SUM(1) FROM [DigitalSetValue] WHERE [DigitalSetValue].[Value] = @NDigitalValue AND 
			[DigitalSetValue].[DigitalSetId] = @NDigitalSetId) IS NULL BEGIN 
			RAISERROR(N'Ошибка в данных "Значение дискретного набора"! В базе данных ЛИМС такого значения для дискретного набора не существует.', 16, 1)			
		END
	END 
	
	DECLARE @NTestId INT = NULL
	SET @NTestId = (SELECT TOP 1 [Test].[TestId] FROM [Test] WHERE [Test].[Name] = N'$(Показатель)' AND [Test].[TestType] = @NTestType)
	IF @NTestId IS NULL BEGIN
		RAISERROR(N'Ошибка в данных "Показатель"! В базе данных ЛИМС он отсутствует.', 16, 1)		
	END
	    
	IF @NTestType = 0 AND (@NLAbbreviation IS NOT NULL OR @NLAbbreviation &lt;&gt; '') AND 
		(SELECT SUM(1) FROM [EngUnit] INNER JOIN [Test] ON [EngUnit].[ClassId] = [Test].[EngUnitClassId]
			WHERE [Test].TestId = @NTestId AND [EngUnit].[LAbbreviation] = @NLAbbreviation) IS NULL BEGIN 
				RAISERROR(N'Ошибка в данных "Единица измерения"! В базе данных ЛИМС такой ед. измерения не существует для текущего показателя: @Показатель.', 16, 1)			
			END
	
	DECLARE @NOrder INT = NULL
	SET @NOrder = (SELECT MAX([AEBatchTest].[Order]) + 1 FROM [AEBatchTest] WHERE [AEBatchUid] = @NAEBatchUid)
	IF @NOrder IS NULL SET @NOrder = 1
	
	DECLARE @NIsAttested BIT = 0
	IF N'$(Аттестованное (0 - нет, 1 - да))' = '1' SET @NIsAttested = 1
	
	DECLARE @NPTS datetime = GETDATE()
	IF @NTestId IS NOT NULL
		EXEC [dbo].[AEBatchTest_Insert] default, @NAEBatchTestUid, @NAEBatchUid, @NTestId, NULL, @NOrder, NULL, @NIsAttested, 0, @NUserId, @NUserName, @NPTS, @NPTS, NULL, NULL
	END
	
	/* Добавление записи по аналоговому типу показателя */
	IF @NTestId IS NOT NULL AND @NTestType = 0 BEGIN
		DECLARE @NEngUnitId INT = NULL
		SET @NEngUnitId = (SELECT TOP 1 [EngUnit].[EngUnitId] FROM [EngUnit] WHERE [EngUnit].LAbbreviation = @NLAbbreviation)
		IF @NEngUnitId IS NULL BEGIN
			RAISERROR(N'Ошибка в данных "Единица измерения"! В базе данных ЛИМС такие единицы измерения отсутствует.', 16, 1)
			END
		
		EXEC [dbo].[AEBatchTestAnalog_Insert] default, @NAEBatchTestUid, @NValue, NULL, @NEngUnitId, @NAbsErr, NULL, @NRelErr, NULL, 0, NULL, NULL, @NPTS
		
		UPDATE [AEBatchTest] SET
			[AEBatchTest].[ReportValue] = @NValue
		WHERE [AEBatchTest].AEBatchTestUid = @NAEBatchTestUid
		END
	
	/* Добавление записи по дискретному типу показателя */		
	IF @NTestId IS NOT NULL AND @NTestType = 1 BEGIN
		EXEC [dbo].[AEBatchTestDigit_Insert] default, @NAEBatchTestUid, @NDigitalSetId, @NDigitalValue, 0, @NPTS 
		UPDATE [AEBatchTest] SET
			[AEBatchTest].[ReportValue] = @NDigitalValue
		WHERE [AEBatchTest].AEBatchTestUid = @NAEBatchTestUid	
		
	END
END TRY

BEGIN CATCH
	IF @@TRANCOUNT &gt; 0
		BEGIN
			ROLLBACK TRANSACTION
			PRINT N'Откат транзакции.'
			DECLARE @NERRORMESSAGE NVARCHAR(1000) = ERROR_MESSAGE()
			RAISERROR(@NERRORMESSAGE, 16, 1);            	
		END
END CATCH

IF @@TRANCOUNT &gt; 0
	BEGIN
		COMMIT TRANSACTION
		PRINT N'Применение транзакции.'
	END</CreateSql>
      <EditSql>SET LANGUAGE Russian;
DECLARE @NRID INT = 0
DECLARE @NAEBatchUid uniqueidentifier = NULL
DECLARE @NAEBatchTestUid uniqueidentifier = '$(AEBatchTestUid (Ключ хар-ки партии ОУ))'
DECLARE @NLAbbreviation NVARCHAR(50) = N'$(Единица измерения)'

DECLARE @NValue FLOAT = NULL
BEGIN TRY
	SET @NValue = CONVERT(FLOAT, N'$(Значение)')
END TRY
BEGIN CATCH
	SET @NValue = NULL
END CATCH
	
DECLARE @NAbsErr FLOAT = NULL
BEGIN TRY
	SET @NAbsErr = CONVERT(FLOAT, N'$(Абсол. погрешность значения)')
END TRY
BEGIN CATCH
	SET @NAbsErr = NULL
END CATCH
	
DECLARE @NRelErr FLOAT = NULL
BEGIN TRY
	SET @NRelErr = CONVERT(FLOAT, N'$(Относит. погрешность значения, %)')
END TRY
BEGIN CATCH
	SET @NRelErr = NULL
END CATCH
	
DECLARE @NDigitTable Table (DigitIndex NVARCHAR(255), id INT) 
SET @NRID = 0
INSERT INTO @NDigitTable 
SELECT CONVERT(NVARCHAR(255), Item), ROW_NUMBER() OVER (ORDER BY @NRID) AS id FROM [dbo].[spc_sys_ParseString](N'$(Значение дискретного набора)', ';')
DECLARE @NDigitalSetName NVARCHAR(150) = (SELECT TOP 1 DigitIndex FROM @NDigitTable WHERE id = 1)
DECLARE @NDigitalValue NVARCHAR(50) = (SELECT TOP 1 DigitIndex FROM @NDigitTable WHERE id = 2)
DECLARE @NDigitalSetId INT = NULL

BEGIN TRANSACTION
BEGIN TRY

IF @NAEBatchTestUid IS NULL BEGIN
	RAISERROR(N'Ошибка в данных "Партия ОУ"! Уникальный ключ партии AEBatchUid не может быть NULL или пустым."', 16, 1)
	END ELSE BEGIN
	
	SET @NAEBatchUid = (SELECT [AEBatchTest].[AEBatchUid] FROM [AEBatchTest] WHERE [AEBatchTest].[AEBatchTestUid] = @NAEBatchTestUid)
	
	DECLARE @NTestType INT = 0;
	IF @NDigitalSetName IS NOT NULL OR @NDigitalValue IS NOT NULL BEGIN
		SET @NTestType = 1
		SET @NDigitalSetId = (SELECT TOP 1 [DigitalSet].[DigitalSetId] FROM [DigitalSet] WHERE [DigitalSet].[Name] = @NDigitalSetName)
		IF @NDigitalSetId IS NULL BEGIN
			RAISERROR(N'Ошибка в данных "Значение дискретного набора"! В базе данных ЛИМС такой дискретный набор отсутствует.', 16, 1)
		END
	IF @NDigitalValue IS NOT NULL AND (SELECT SUM(1) FROM [DigitalSetValue] WHERE [DigitalSetValue].[Value] = @NDigitalValue AND 
			[DigitalSetValue].[DigitalSetId] = @NDigitalSetId) IS NULL BEGIN 
			RAISERROR(N'Ошибка в данных "Значение дискретного набора"! В базе данных ЛИМС такого значения для дискретного набора не существует.', 16, 1)			
		END
	END 
	
	DECLARE @NTestId INT = NULL
	SET @NTestId = (SELECT TOP 1 [Test].[TestId] FROM [Test] WHERE [Test].[Name] = N'$(Показатель)' AND [Test].[TestType] = @NTestType)
	IF @NTestId IS NULL BEGIN
		RAISERROR(N'Ошибка в данных "Показатель"! В базе данных ЛИМС он отсутствует.', 16, 1)		
	END
	    
	IF @NTestType = 0 AND (@NLAbbreviation IS NOT NULL OR @NLAbbreviation &lt;&gt; '') AND 
		(SELECT SUM(1) FROM [EngUnit] INNER JOIN [Test] ON [EngUnit].[ClassId] = [Test].[EngUnitClassId]
			WHERE [Test].TestId = @NTestId AND [EngUnit].[LAbbreviation] = @NLAbbreviation) IS NULL BEGIN 
				RAISERROR(N'Ошибка в данных "Единица измерения"! В базе данных ЛИМС такой ед. измерения не существует для текущего показателя.', 16, 1)			
			END

	DECLARE @NIsAttested BIT = 0
	IF N'$(Аттестованное (0 - нет, 1 - да))' = '1' SET @NIsAttested = 1
	
	DECLARE @NPTS datetime = GETDATE()
		
	/* Удаление записей по показателям */	
	IF @NTestId IS NOT NULL BEGIN 
		IF (SELECT SUM(1) FROM [AEBatchTestAnalog] WHERE [AEBatchTestAnalog].[AEBatchTestUid] = @NAEBatchTestUid) &gt; 0
			DELETE FROM [AEBatchTestAnalog] WHERE [AEBatchTestAnalog].[AEBatchTestUid] = @NAEBatchTestUid
		IF (SELECT SUM(1) FROM [AEBatchTestDigit] WHERE [AEBatchTestDigit].[AEBatchTestUid] = @NAEBatchTestUid) &gt; 0
			DELETE FROM [AEBatchTestDigit] WHERE [AEBatchTestDigit].[AEBatchTestUid] = @NAEBatchTestUid
		END
	
	/* Добавление записи по аналоговому типу показателя */
	IF @NTestId IS NOT NULL AND @NTestType = 0 BEGIN
		DECLARE @NEngUnitId INT = NULL
		SET @NEngUnitId = (SELECT TOP 1 [EngUnit].[EngUnitId] FROM [EngUnit] WHERE [EngUnit].LAbbreviation = @NLAbbreviation)
		IF @NEngUnitId IS NULL BEGIN
			RAISERROR(N'Ошибка в данных "Единица измерения"! В базе данных ЛИМС такие единицы измерения отсутствует.', 16, 1)
			END
		EXEC [dbo].[AEBatchTestAnalog_Insert] default, @NAEBatchTestUid, @NValue, NULL, @NEngUnitId, @NAbsErr, NULL, @NRelErr, NULL, 0, NULL, NULL, @NPTS
		UPDATE [AEBatchTest] SET
			[AEBatchTest].[ReportValue] = @NValue,
			[AEBatchTest].[ChangeDate] = @NPTS,
			[AEBatchTest].[IsAttested] = @NIsAttested,
			[AEBatchTest].[TestId] = @NTestId			
		WHERE [AEBatchTest].AEBatchTestUid = @NAEBatchTestUid
		END
	
	/* Добавление записи по дискретному типу показателя */		
	IF @NTestId IS NOT NULL AND @NTestType = 1 BEGIN
		EXEC [dbo].[AEBatchTestDigit_Insert] default, @NAEBatchTestUid, @NDigitalSetId, @NDigitalValue, 0, @NPTS 
		UPDATE [AEBatchTest] SET
			[AEBatchTest].[ReportValue] = @NDigitalValue,
			[AEBatchTest].[ChangeDate] = @NPTS,
			[AEBatchTest].[IsAttested] = @NIsAttested,
			[AEBatchTest].[TestId] = @NTestId
		WHERE [AEBatchTest].AEBatchTestUid = @NAEBatchTestUid	
		END
	END
END TRY

BEGIN CATCH
	IF @@TRANCOUNT &gt; 0
		BEGIN
			ROLLBACK TRANSACTION
			PRINT N'Откат транзакции.'
			DECLARE @NERRORMESSAGE NVARCHAR(1000) = ERROR_MESSAGE()
			RAISERROR(@NERRORMESSAGE, 16, 1);            	
		END
END CATCH

IF @@TRANCOUNT &gt; 0
	BEGIN
		COMMIT TRANSACTION
		PRINT N'Применение транзакции.'
	END</EditSql>
      <DeleteSql>SET LANGUAGE Russian;
DECLARE @NAEBatchTestUid AS uniqueidentifier = '$(AEBatchTestUid (Ключ хар-ки партии ОУ))'
BEGIN TRANSACTION
BEGIN TRY
	IF (SELECT SUM(1) FROM [AEBatchTest] WHERE [AEBatchTest].[AEBatchTestUid] = @NAEBatchTestUid) &gt; 0 BEGIN
		PRINT N'[AEBatchTestAnalog]:'
		DELETE FROM [AEBatchTestAnalog] WHERE [AEBatchTestAnalog].[AEBatchTestUid] = @NAEBatchTestUid
	
		PRINT N'[AEBatchTestDigit]:'
		DELETE FROM [AEBatchTestDigit] WHERE [AEBatchTestDigit].[AEBatchTestUid] = @NAEBatchTestUid

		PRINT N'[AEBatchTest]:'
		DELETE FROM [AEBatchTest] WHERE [AEBatchTest].[AEBatchTestUid] = @NAEBatchTestUid
		END ELSE PRINT N'Запись с ключом хар-ки партии ОУ "' + CAST(@NAEBatchTestUid AS NVARCHAR(100)) + '" не найдена!'
END TRY

BEGIN CATCH
	IF @@TRANCOUNT &gt; 0
		BEGIN
			ROLLBACK TRANSACTION
			PRINT N'Откат транзакции.'
			DECLARE @NERRORMESSAGE NVARCHAR(1000) = ERROR_MESSAGE()
			RAISERROR(@NERRORMESSAGE, 16, 1);            	
		END
END CATCH

IF @@TRANCOUNT &gt; 0
	BEGIN
		COMMIT TRANSACTION
		--PRINT N'Применение транзакции'
	END</DeleteSql>
      <ImageBuffer>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</ImageBuffer>
    </ItemChanger>
    <ItemChanger>
      <Name>LDS.ОУ_Характеристика_Показатели</Name>
      <GetSQL>SET LANGUAGE Russian;
DECLARE @N int = 0
SELECT 
	ROW_NUMBER() OVER (ORDER BY @N) AS "№ п/п", 
	[Test].[Name] AS "Показатель", 
	CASE WHEN [Test].[TestType] = 0 THEN 'Аналоговый'
		ELSE CASE WHEN [Test].[TestType] = 1 THEN 'Дискретный' END END AS "Тип показателя",
	STUFF((
        SELECT ';' + CONVERT(NVARCHAR(300), [EngUnit].[LAbbreviation])
        FROM [EngUnit] 
        WHERE [Test].[EngUnitClassId] = [EngUnit].[ClassId]
        FOR XML PATH ('')
    ), 1, 1, '') AS "Единицы измерения"
	FROM [Test] 
	WHERE [Test].[TestType] IN (0,1)</GetSQL>
      <GetSQLWhereString>Name like '*'</GetSQLWhereString>
      <ImageBuffer>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</ImageBuffer>
    </ItemChanger>
    <ItemChanger>
      <Name>LDS.ОУ_Применимость</Name>
      <GetSQL>SET LANGUAGE Russian;
SELECT 
	'x' AS [Select(x)],
	[AEStdDoc].[AEStdDocUid] AS "AEStdDocUid (Ключ применимости ОУ)",
	CASE WHEN [AE].[Name] IS NULL AND [StdDoc].[Name] IS NULL AND [GradeVer].[Name] IS NULL AND [AEBatch].[Num] IS NULL THEN NULL ELSE
		(CASE WHEN [AE].[Name] IS NULL THEN ';' ELSE ([AE].[Name] + ';') END + 
			CASE WHEN [StdDoc].[Name] IS NULL THEN ';' ELSE ([StdDoc].[Name] + ';') END + 
				CASE WHEN [GradeVer].[Name] IS NULL THEN ';' ELSE ([GradeVer].[Name] + ';') END +
					CASE WHEN [AEBatch].[Num] IS NULL THEN '' ELSE [AEBatch].[Num] END) END AS "Партия ОУ",
	[tmp].[Name] AS "Методика"
	FROM [AEStdDoc] 
	INNER JOIN [AE] ON [AEStdDoc].[AEUid] = [AE].[AEUid]
	LEFT JOIN [SpecVer] ON [AE].[SpecVerId] = [SpecVer].[SpecVerId]
	LEFT JOIN [StdDoc] ON [SpecVer].[SpecUid] = [StdDoc].[StdDocUid]
	LEFT JOIN [AEGrade] ON [AE].[AEUid] = [AEGrade].[AEUid]
	LEFT JOIN [GradeVer] ON [AEGrade].[GradeVerId] = [GradeVer].[GradeVerId]
	LEFT JOIN [AEBatch] ON [AE].[AEUid] = [AEBatch].[AEUid]
	INNER JOIN [StdDocVer] ON [AEStdDoc].[StdDocVerId] = [StdDocVer].[StdDocVerId]
	INNER JOIN [StdDoc] [tmp] ON [StdDocVer].[StdDocUid] = [tmp].[StdDocUid]</GetSQL>
      <GetSQLWhereString>Name like '*'</GetSQLWhereString>
      <CreateSql>DECLARE @NPartyOU NVARCHAR(600) = N'$(Партия ОУ)'
DECLARE @NAEName NVARCHAR(150) = NULL
DECLARE @NStdDocName NVARCHAR(150) = NULL
DECLARE @NGradeVerName NVARCHAR(150) = NULL
DECLARE @NAEBatchNum NVARCHAR(150) = NULL
DECLARE @NAEBatchUid uniqueidentifier = NULL
DECLARE @NAEUid uniqueidentifier = NULL
DECLARE @NRID INT = 0
DECLARE @NR TABLE (PartyIndex NVARCHAR(255), id INT) 
INSERT INTO @NR 
SELECT CONVERT(NVARCHAR(255), Item), ROW_NUMBER() OVER (ORDER BY @NRID) AS id FROM [dbo].[spc_sys_ParseString](@NPartyOU, ';')
SET @NAEName = (SELECT CASE WHEN PartyIndex = '' THEN NULL ELSE PartyIndex END FROM @NR WHERE id = 1)
SET @NStdDocName = (SELECT CASE WHEN PartyIndex = '' THEN NULL ELSE PartyIndex END FROM @NR WHERE id = 2)
SET @NGradeVerName = (SELECT CASE WHEN PartyIndex = '' THEN NULL ELSE PartyIndex END FROM @NR WHERE id = 3)
SET @NAEBatchNum = (SELECT CASE WHEN PartyIndex = '' THEN NULL ELSE PartyIndex END FROM @NR WHERE id = 4)
DECLARE @NStdDocVerId INT = NULL
DECLARE @NAEStdDocUid uniqueidentifier = NEWID()

BEGIN TRANSACTION
BEGIN TRY

IF @NAEName IS NULL BEGIN
	RAISERROR(N'Ошибка в данных "Партия ОУ"! Наименование ОУ не может быть NULL или пустым.', 16, 1)
	END

IF @NAEBatchNum IS NULL BEGIN
	RAISERROR(N'Ошибка в данных "Партия ОУ"! Номер партии ОУ не может быть NULL или пустым.', 16, 1)
	END	

SET @NAEBatchUid = (SELECT [AEBatch].[AEBatchUid] FROM [AEBatch]
INNER JOIN [AE] ON [AEBatch].[AEUid] = [AE].[AEUid]
LEFT JOIN [SpecVer] ON [AE].[SpecVerId] = [SpecVer].[SpecVerId]
LEFT JOIN [StdDoc] ON [SpecVer].[SpecUid] = [StdDoc].[StdDocUid]
LEFT JOIN [AEGrade] ON [AE].[AEUid] = [AEGrade].[AEUid]
LEFT JOIN [GradeVer] ON [AEGrade].[GradeVerId] = [GradeVer].[GradeVerId]
WHERE [AE].[Name] = @NAEName AND ([StdDoc].Name = @NStdDocName OR (@NStdDocName IS NULL AND [AE].[SpecVerId] IS NULL)) AND
	([GradeVer].[Name] = @NGradeVerName OR (@NGradeVerName IS NULL AND [AEGrade].[AEGradeUid] IS NULL)) AND [AEBatch].[Num] = @NAEBatchNum)

IF @NAEBatchUid IS NULL
	RAISERROR(N'Ошибка в данных "Партия ОУ"! Уникальный ключ партии AEBatchUid не найден по параметрам "Партия ОУ"', 16, 1)
	ELSE SET @NAEUid = (SELECT TOP 1 [AEBatch].[AEUid] FROM [AEBatch] WHERE [AEBatch].[AEBatchUid] = @NAEBatchUid)
	-- Основная часть запроса
	IF @NAEUid IS NULL
		RAISERROR(N'Ошибка в данных! Невозможно получить ключ ОУ по идентификатору "Партия ОУ"', 16, 1)
		ELSE BEGIN
			SET @NStdDocVerId = (SELECT TOP 1 [StdDocVer].[StdDocVerId] FROM [StdDoc]
				INNER JOIN [StdDocVer] ON [StdDoc].[StdDocUid] = [StdDocVer].[StdDocUid]
					 WHERE [StdDoc].[Name] = N'$(Методика)')
			IF @NStdDocVerId IS NULL
				RAISERROR(N'Ошибка в данных "Методика"! Данная методика отсутствует в базе данных ЛИМСа', 16, 1)
			IF (SELECT SUM(1) FROM [AEStdDoc] WHERE [AEStdDoc].[AEUid] = @NAEUid AND [AEStdDoc].[StdDocVerId] = @NStdDocVerId) &gt; 0
				RAISERROR(N'Ошибка! Данная методика уже добавлена к текущему показателю ОУ', 16, 1)
			EXEC [dbo].[AEStdDoc_Insert] default, @NAEStdDocUid, @NAEUid, @NStdDocVerId, 0 
		END
END TRY
BEGIN CATCH
	IF @@TRANCOUNT &gt; 0
		BEGIN
			ROLLBACK TRANSACTION
			PRINT N'Откат транзакции.'
			DECLARE @NERRORMESSAGE NVARCHAR(1000) = ERROR_MESSAGE()
			RAISERROR(@NERRORMESSAGE, 16, 1);            	
		END
END CATCH

IF @@TRANCOUNT &gt; 0
	BEGIN
		COMMIT TRANSACTION
		PRINT N'Применение транзакции.'
	END</CreateSql>
      <EditSql>SET LANGUAGE Russian;
DECLARE @NPartyOU NVARCHAR(600) = N'$(Партия ОУ)'
DECLARE @NAEName NVARCHAR(150) = NULL
DECLARE @NStdDocName NVARCHAR(150) = NULL
DECLARE @NGradeVerName NVARCHAR(150) = NULL
DECLARE @NAEBatchNum NVARCHAR(150) = NULL
DECLARE @NAEBatchUid uniqueidentifier = NULL
DECLARE @NAEUid uniqueidentifier = NULL
DECLARE @NRID INT = 0
DECLARE @NR TABLE (PartyIndex NVARCHAR(255), id INT) 
INSERT INTO @NR 
SELECT CONVERT(NVARCHAR(255), Item), ROW_NUMBER() OVER (ORDER BY @NRID) AS id FROM [dbo].[spc_sys_ParseString](@NPartyOU, ';')
SET @NAEName = (SELECT CASE WHEN PartyIndex = '' THEN NULL ELSE PartyIndex END FROM @NR WHERE id = 1)
SET @NStdDocName = (SELECT CASE WHEN PartyIndex = '' THEN NULL ELSE PartyIndex END FROM @NR WHERE id = 2)
SET @NGradeVerName = (SELECT CASE WHEN PartyIndex = '' THEN NULL ELSE PartyIndex END FROM @NR WHERE id = 3)
SET @NAEBatchNum = (SELECT CASE WHEN PartyIndex = '' THEN NULL ELSE PartyIndex END FROM @NR WHERE id = 4)
DECLARE @NStdDocVerId INT = NULL
DECLARE @NAEStdDocUid uniqueidentifier = N'$(AEStdDocUid (Ключ применимости ОУ))'

BEGIN TRANSACTION
BEGIN TRY

IF @NAEName IS NULL BEGIN
	RAISERROR(N'Ошибка в данных "Партия ОУ"! Наименование ОУ не может быть NULL или пустым.', 16, 1)
	END

IF @NAEBatchNum IS NULL BEGIN
	RAISERROR(N'Ошибка в данных "Партия ОУ"! Номер партии ОУ не может быть NULL или пустым.', 16, 1)
	END

IF @NAEStdDocUid IS NULL BEGIN
	RAISERROR(N'Ошибка! Ключ применимости ОУ не может быть NULL или пустым.', 16, 1)
	END	
	
SET @NAEBatchUid = (SELECT [AEBatch].[AEBatchUid] FROM [AEBatch]
INNER JOIN [AE] ON [AEBatch].[AEUid] = [AE].[AEUid]
LEFT JOIN [SpecVer] ON [AE].[SpecVerId] = [SpecVer].[SpecVerId]
LEFT JOIN [StdDoc] ON [SpecVer].[SpecUid] = [StdDoc].[StdDocUid]
LEFT JOIN [AEGrade] ON [AE].[AEUid] = [AEGrade].[AEUid]
LEFT JOIN [GradeVer] ON [AEGrade].[GradeVerId] = [GradeVer].[GradeVerId]
WHERE [AE].[Name] = @NAEName AND ([StdDoc].Name = @NStdDocName OR (@NStdDocName IS NULL AND [AE].[SpecVerId] IS NULL)) AND
	([GradeVer].[Name] = @NGradeVerName OR (@NGradeVerName IS NULL AND [AEGrade].[AEGradeUid] IS NULL)) AND [AEBatch].[Num] = @NAEBatchNum)

IF @NAEBatchUid IS NULL
	RAISERROR(N'Ошибка в данных "Партия ОУ"! Уникальный ключ партии AEBatchUid не найден по параметрам "Партия ОУ"', 16, 1)
	ELSE SET @NAEUid = (SELECT TOP 1 [AEBatch].[AEUid] FROM [AEBatch] WHERE [AEBatch].[AEBatchUid] = @NAEBatchUid)
	-- Основная часть запроса
	IF @NAEUid IS NULL
		RAISERROR(N'Ошибка в данных! Невозможно получить ключ ОУ по идентификатору "Партия ОУ"', 16, 1)
		ELSE BEGIN
			SET @NStdDocVerId = (SELECT TOP 1 [StdDocVer].[StdDocVerId] FROM [StdDoc]
				INNER JOIN [StdDocVer] ON [StdDoc].[StdDocUid] = [StdDocVer].[StdDocUid]
					 WHERE [StdDoc].[Name] = N'@Методика')
			IF @NStdDocVerId IS NULL
				RAISERROR(N'Ошибка в данных "Методика"! Данная методика отсутствует в базе данных ЛИМСа', 16, 1)
			IF (SELECT SUM(1) FROM [AEStdDoc] WHERE [AEStdDoc].[AEUid] = @NAEUid AND [AEStdDoc].[StdDocVerId] = @NStdDocVerId) &gt; 0
				RAISERROR(N'Ошибка! Данная методика уже добавлена к текущему показателю ОУ', 16, 1)
			UPDATE [AEStdDoc] SET 
				[AEStdDoc].[AEUid] = @NAEUid,
				[AEStdDoc].[StdDocVerId] = @NStdDocVerId
			WHERE [AEStdDoc].[AEStdDocUid] = @NAEStdDocUid
		END
END TRY
BEGIN CATCH
	IF @@TRANCOUNT &gt; 0
		BEGIN
			ROLLBACK TRANSACTION
			PRINT N'Откат транзакции.'
			DECLARE @NERRORMESSAGE NVARCHAR(1000) = ERROR_MESSAGE()
			RAISERROR(@NERRORMESSAGE, 16, 1);            	
		END
END CATCH

IF @@TRANCOUNT &gt; 0
	BEGIN
		COMMIT TRANSACTION
		PRINT N'Применение транзакции.'
	END</EditSql>
      <DeleteSql>DECLARE @NAEStdDocUid AS uniqueidentifier = '$(AEStdDocUid (Ключ применимости ОУ))'

BEGIN TRANSACTION
BEGIN TRY
	IF (SELECT SUM(1) FROM [AEStdDoc] WHERE [AEStdDoc].[AEStdDocUid] = @NAEStdDocUid) &lt; 1 
		RAISERROR(N'Ошибка в данных "AEStdDocUid (Ключ применимости ОУ)"! В базе данных ЛИМС применимости с таким ключом не существует.', 16, 1)			
	-- 1
	PRINT N'[AEStdDoc]:'
	DELETE FROM [AEStdDoc] WHERE [AEStdDoc].[AEStdDocUid] = @NAEStdDocUid
END TRY

BEGIN CATCH
	IF @@TRANCOUNT &gt; 0
		BEGIN
			ROLLBACK TRANSACTION
			PRINT N'Откат транзакции.'
			DECLARE @NERRORMESSAGE NVARCHAR(1000) = ERROR_MESSAGE()
			RAISERROR(@NERRORMESSAGE, 16, 1);            	
		END
END CATCH

IF @@TRANCOUNT &gt; 0
	BEGIN
		COMMIT TRANSACTION
		PRINT N'Применение транзакции'
	END</DeleteSql>
      <ImageBuffer>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</ImageBuffer>
    </ItemChanger>
    <ItemChanger>
      <Name>LDS.ОУ_Применимость_Методики</Name>
      <GetSQL>SELECT ROW_NUMBER() OVER (ORDER BY [StdDoc].[Name]) AS "№ п/п", [StdDoc].[Name] AS "Методика" FROM [StdDocVer]
INNER JOIN [StdDoc] ON [StdDocVer].[StdDocUid] = [StdDoc].[StdDocUid]</GetSQL>
      <GetSQLWhereString>Name like '*'</GetSQLWhereString>
      <ImageBuffer>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</ImageBuffer>
    </ItemChanger>
    <ItemChanger>
      <Name>LDS.Персонал</Name>
      <GetSQL>SET LANGUAGE Russian;
DECLARE @FIOPersonal Table (UserUID uniqueidentifier, F NVARCHAR(255), I NVARCHAR(255), O NVARCHAR(255), NameShort NVARCHAR(150)) 
DECLARE @TableSkills Table (UserId int, BirthAddress NVARCHAR(1024), WorkInfo NVARCHAR(1024), ActionFun NVARCHAR(1024))
DECLARE @NR Table (CompanyIndex NVARCHAR(255), id INT)
DECLARE @NRID INT = 0
DECLARE @NUserUID uniqueidentifier
DECLARE @NFullName NVARCHAR(255)
DECLARE @NNameShort NVARCHAR(150)
DECLARE @NSkills NVARCHAR(MAX)
DECLARE @NUserId INT = NULL
DECLARE @CURSOR CURSOR

SET @CURSOR = CURSOR LOCAL FAST_FORWARD READ_ONLY FOR
SELECT [User].[Name], [User].[FullName], [User].[UserUID] FROM [User]
OPEN @CURSOR
FETCH NEXT FROM @CURSOR INTO @NNameShort, @NFullName, @NUserUID
WHILE @@FETCH_STATUS = 0
	BEGIN
		INSERT INTO @NR 
		SELECT CONVERT(NVARCHAR(255), Item), ROW_NUMBER() OVER (ORDER BY @NRID) AS id FROM [dbo].[spc_sys_ParseString](@NFullName, ' ')
		INSERT INTO @FIOPersonal
		SELECT @NUserUID, (SELECT CompanyIndex FROM @NR WHERE id = 1), (SELECT CompanyIndex FROM @NR WHERE id = 2), 
		(STUFF((SELECT ' ' + CONVERT(NVARCHAR, [@NR].[CompanyIndex]) FROM @NR WHERE [@NR].[id] &gt; 2 
			FOR XML PATH ('')), 1, 1, '')), @NNameShort
		DELETE @NR
		SET @NRID = 0
		FETCH NEXT FROM @CURSOR INTO @NNameShort, @NFullName, @NUserUID
	END
CLOSE @CURSOR

SET @CURSOR = CURSOR LOCAL FAST_FORWARD READ_ONLY FOR
SELECT [UserProp].[UserId], [UserProp].[Skills] FROM [UserProp]
OPEN @CURSOR
FETCH NEXT FROM @CURSOR INTO @NUserId, @NSkills
WHILE @@FETCH_STATUS = 0
	BEGIN
		INSERT INTO @NR 
		SELECT CONVERT(NVARCHAR(255), Item), ROW_NUMBER() OVER (ORDER BY @NRID) AS id FROM [dbo].[spc_sys_ParseString](@NSkills, ';')
		INSERT INTO @TableSkills
		SELECT @NUserId, (SELECT CompanyIndex FROM @NR WHERE id = 1), (SELECT CompanyIndex FROM @NR WHERE id = 2), 
		(SELECT CompanyIndex FROM @NR WHERE id = 3)
		DELETE @NR
		SET @NRID = 0
		FETCH NEXT FROM @CURSOR INTO @NUserId, @NSkills
	END
CLOSE @CURSOR

SELECT
	'x' AS [Select(x)], 
	[User].[UserUID] AS "UserUID (Ключ персонала)",
	[User].[Name] AS "Имя пользователя",
	[@FIOPersonal].[F] AS "Фамилия",
	[@FIOPersonal].[I] AS "Имя",
	[@FIOPersonal].[O] AS "Отчество",
	CASE WHEN [UserProp].[Sex] = 1 THEN 'М' ELSE
		CASE WHEN [UserProp].[Sex] = 2 THEN 'Ж' ELSE NULL END END AS "Пол",
	(SELECT CONVERT(VARCHAR(10),[UserProp].[Birthday], 104)) AS "Дата рождения",
	[@TableSkills].[BirthAddress] AS "Место рождения",
	[UserProp].[InsuranceNumber] AS "№ страхового свидетельства ГПС (СНИЛС)",
	[UserProp].[Number] AS "Табельный номер",
	[UserProp].[Emale] AS "Email",
	[UserProp].[Phone] AS "Телефон",
	[UserProp].[Fax] AS "Факс",
	[@TableSkills].[WorkInfo] AS "Работа по основному месту работы / по совместительству",
	[@TableSkills].[ActionFun] AS "Выполняемые функции",
	CAST ([UserProp].[Accredited] AS INT) AS "Сотрудник аккредитованной лаборатории",
	[UserProp].[Comment] AS "Примечание",
	(SELECT CONVERT(VARCHAR(10),[UserProp].[HiringDay], 104)) AS "Дата трудоустройства",
	[Status].[Name] AS "Статус трудоустройства",
	CAST ([UserProp].[CommonSkillsYears] AS INT) AS "Общий стаж до последнего трудоустройства, лет",
	CAST ([UserProp].[SkillsYears] AS INT) AS "Практический опыт до последнего трудоустройства, лет",
	(SELECT [TMPED].[EducationName] FROM (SELECT [UserEd].[Name], [EducationTypes].[EducationName] ,ROW_NUMBER() OVER (ORDER BY [UserEd].[Date]) AS Id FROM [UserEd] INNER JOIN [EducationTypes] ON [UserEd].[EducationTypeId] = [EducationTypes].[Id] WHERE [UserEd].[UserId] = [User].[UserId]) AS TMPED WHERE TMPED.Id = 1) AS "Уровень образования_1",	
	(SELECT [TMPED].[Name] FROM (SELECT [UserEd].[Name], ROW_NUMBER() OVER (ORDER BY [UserEd].[Date]) AS Id FROM [UserEd] WHERE [UserEd].[UserId] = [User].[UserId]) AS TMPED WHERE TMPED.Id = 1) AS "Учебное заведение_1",
	(SELECT  CONVERT(VARCHAR(10), [TMPED].[Date], 104) FROM (SELECT [UserEd].[Date], ROW_NUMBER() OVER (ORDER BY [UserEd].[Date]) AS Id FROM [UserEd] WHERE [UserEd].[UserId] = [User].[UserId]) AS TMPED WHERE TMPED.Id = 1) AS "Дата окончания_1",
	(SELECT [TMPED].[Qualification] FROM (SELECT [UserEd].[Qualification], ROW_NUMBER() OVER (ORDER BY [UserEd].[Date]) AS Id FROM [UserEd] WHERE [UserEd].[UserId] = [User].[UserId]) AS TMPED WHERE TMPED.Id = 1) AS "Квалификация_1",
	(SELECT [TMPED].[DocNumber] FROM (SELECT [UserEd].[DocNumber], ROW_NUMBER() OVER (ORDER BY [UserEd].[Date]) AS Id FROM [UserEd] WHERE [UserEd].[UserId] = [User].[UserId]) AS TMPED WHERE TMPED.Id = 1) AS "№ документа об образовании_1",
	(SELECT [TMPED].[EducationName] FROM (SELECT [UserEd].[Name], [EducationTypes].[EducationName] ,ROW_NUMBER() OVER (ORDER BY [UserEd].[Date]) AS Id FROM [UserEd] INNER JOIN [EducationTypes] ON [UserEd].[EducationTypeId] = [EducationTypes].[Id] WHERE [UserEd].[UserId] = [User].[UserId]) AS TMPED WHERE TMPED.Id = 2) AS "Уровень образования_2",	
	(SELECT [TMPED].[Name] FROM (SELECT [UserEd].[Name], ROW_NUMBER() OVER (ORDER BY [UserEd].[Date]) AS Id FROM [UserEd] WHERE [UserEd].[UserId] = [User].[UserId]) AS TMPED WHERE TMPED.Id = 2) AS "Учебное заведение_2",
	(SELECT  CONVERT(VARCHAR(10), [TMPED].[Date], 104) FROM (SELECT [UserEd].[Date], ROW_NUMBER() OVER (ORDER BY [UserEd].[Date]) AS Id FROM [UserEd] WHERE [UserEd].[UserId] = [User].[UserId]) AS TMPED WHERE TMPED.Id = 2) AS "Дата окончания_2",
	(SELECT [TMPED].[Qualification] FROM (SELECT [UserEd].[Qualification], ROW_NUMBER() OVER (ORDER BY [UserEd].[Date]) AS Id FROM [UserEd] WHERE [UserEd].[UserId] = [User].[UserId]) AS TMPED WHERE TMPED.Id = 2) AS "Квалификация_2",
	(SELECT [TMPED].[DocNumber] FROM (SELECT [UserEd].[DocNumber], ROW_NUMBER() OVER (ORDER BY [UserEd].[Date]) AS Id FROM [UserEd] WHERE [UserEd].[UserId] = [User].[UserId]) AS TMPED WHERE TMPED.Id = 2) AS "№ документа об образовании_2",
	(SELECT [TMPED].[EducationName] FROM (SELECT [UserEd].[Name], [EducationTypes].[EducationName] ,ROW_NUMBER() OVER (ORDER BY [UserEd].[Date]) AS Id FROM [UserEd] INNER JOIN [EducationTypes] ON [UserEd].[EducationTypeId] = [EducationTypes].[Id] WHERE [UserEd].[UserId] = [User].[UserId]) AS TMPED WHERE TMPED.Id = 3) AS "Уровень образования_3",	
	(SELECT [TMPED].[Name] FROM (SELECT [UserEd].[Name], ROW_NUMBER() OVER (ORDER BY [UserEd].[Date]) AS Id FROM [UserEd] WHERE [UserEd].[UserId] = [User].[UserId]) AS TMPED WHERE TMPED.Id = 3) AS "Учебное заведение_3",
	(SELECT  CONVERT(VARCHAR(10), [TMPED].[Date], 104) FROM (SELECT [UserEd].[Date], ROW_NUMBER() OVER (ORDER BY [UserEd].[Date]) AS Id FROM [UserEd] WHERE [UserEd].[UserId] = [User].[UserId]) AS TMPED WHERE TMPED.Id = 3) AS "Дата окончания_3",
	(SELECT [TMPED].[Qualification] FROM (SELECT [UserEd].[Qualification], ROW_NUMBER() OVER (ORDER BY [UserEd].[Date]) AS Id FROM [UserEd] WHERE [UserEd].[UserId] = [User].[UserId]) AS TMPED WHERE TMPED.Id = 3) AS "Квалификация_3",
	(SELECT [TMPED].[DocNumber] FROM (SELECT [UserEd].[DocNumber], ROW_NUMBER() OVER (ORDER BY [UserEd].[Date]) AS Id FROM [UserEd] WHERE [UserEd].[UserId] = [User].[UserId]) AS TMPED WHERE TMPED.Id = 3) AS "№ документа об образовании_3",
	(SELECT [TMPED].[EducationName] FROM (SELECT [UserEd].[Name], [EducationTypes].[EducationName] ,ROW_NUMBER() OVER (ORDER BY [UserEd].[Date]) AS Id FROM [UserEd] INNER JOIN [EducationTypes] ON [UserEd].[EducationTypeId] = [EducationTypes].[Id] WHERE [UserEd].[UserId] = [User].[UserId]) AS TMPED WHERE TMPED.Id = 4) AS "Уровень образования_4",	
	(SELECT [TMPED].[Name] FROM (SELECT [UserEd].[Name], ROW_NUMBER() OVER (ORDER BY [UserEd].[Date]) AS Id FROM [UserEd] WHERE [UserEd].[UserId] = [User].[UserId]) AS TMPED WHERE TMPED.Id = 4) AS "Учебное заведение_4",
	(SELECT  CONVERT(VARCHAR(10), [TMPED].[Date], 104) FROM (SELECT [UserEd].[Date], ROW_NUMBER() OVER (ORDER BY [UserEd].[Date]) AS Id FROM [UserEd] WHERE [UserEd].[UserId] = [User].[UserId]) AS TMPED WHERE TMPED.Id = 4) AS "Дата окончания_4",
	(SELECT [TMPED].[Qualification] FROM (SELECT [UserEd].[Qualification], ROW_NUMBER() OVER (ORDER BY [UserEd].[Date]) AS Id FROM [UserEd] WHERE [UserEd].[UserId] = [User].[UserId]) AS TMPED WHERE TMPED.Id = 4) AS "Квалификация_4",
	(SELECT [TMPED].[DocNumber] FROM (SELECT [UserEd].[DocNumber], ROW_NUMBER() OVER (ORDER BY [UserEd].[Date]) AS Id FROM [UserEd] WHERE [UserEd].[UserId] = [User].[UserId]) AS TMPED WHERE TMPED.Id = 4) AS "№ документа об образовании_4",
	(SELECT [TMPED].[Name] FROM (SELECT [UserPosition].[Name], ROW_NUMBER() OVER (ORDER BY [UserPositionHistory].[ChangeDate] DESC) AS Id FROM [UserPositionHistory] INNER JOIN [UserPosition] ON [UserPositionHistory].[UserPositionId] = [UserPosition].[UserPositionId] WHERE [UserPositionHistory].[UserId] = [User].[UserId]) AS TMPED WHERE TMPED.Id = 1) AS "Должностная позиция_1",
	(SELECT CONVERT(VARCHAR(10), [TMPED].[ChangeDate], 104) FROM (SELECT [UserPositionHistory].[ChangeDate], ROW_NUMBER() OVER (ORDER BY [UserPositionHistory].[ChangeDate] DESC) AS Id FROM [UserPositionHistory] INNER JOIN [UserPosition] ON [UserPositionHistory].[UserPositionId] = [UserPosition].[UserPositionId] WHERE [UserPositionHistory].[UserId] = [User].[UserId]) AS TMPED WHERE TMPED.Id = 1) AS "Дата назначения_1",	
	(SELECT [TMPED].[Name] FROM (SELECT [UserPosition].[Name], ROW_NUMBER() OVER (ORDER BY [UserPositionHistory].[ChangeDate] DESC) AS Id FROM [UserPositionHistory] INNER JOIN [UserPosition] ON [UserPositionHistory].[UserPositionId] = [UserPosition].[UserPositionId] WHERE [UserPositionHistory].[UserId] = [User].[UserId]) AS TMPED WHERE TMPED.Id = 2) AS "Должностная позиция_2",
	(SELECT CONVERT(VARCHAR(10), [TMPED].[ChangeDate], 104) FROM (SELECT [UserPositionHistory].[ChangeDate], ROW_NUMBER() OVER (ORDER BY [UserPositionHistory].[ChangeDate] DESC) AS Id FROM [UserPositionHistory] INNER JOIN [UserPosition] ON [UserPositionHistory].[UserPositionId] = [UserPosition].[UserPositionId] WHERE [UserPositionHistory].[UserId] = [User].[UserId]) AS TMPED WHERE TMPED.Id = 2) AS "Дата назначения_2",	
	(SELECT [TMPED].[Name] FROM (SELECT [UserPosition].[Name], ROW_NUMBER() OVER (ORDER BY [UserPositionHistory].[ChangeDate] DESC) AS Id FROM [UserPositionHistory] INNER JOIN [UserPosition] ON [UserPositionHistory].[UserPositionId] = [UserPosition].[UserPositionId] WHERE [UserPositionHistory].[UserId] = [User].[UserId]) AS TMPED WHERE TMPED.Id = 3) AS "Должностная позиция_3",
	(SELECT CONVERT(VARCHAR(10), [TMPED].[ChangeDate], 104) FROM (SELECT [UserPositionHistory].[ChangeDate], ROW_NUMBER() OVER (ORDER BY [UserPositionHistory].[ChangeDate] DESC) AS Id FROM [UserPositionHistory] INNER JOIN [UserPosition] ON [UserPositionHistory].[UserPositionId] = [UserPosition].[UserPositionId] WHERE [UserPositionHistory].[UserId] = [User].[UserId]) AS TMPED WHERE TMPED.Id = 3) AS "Дата назначения_3",	
	(SELECT [TMPED].[Name] FROM (SELECT [UserPosition].[Name], ROW_NUMBER() OVER (ORDER BY [UserPositionHistory].[ChangeDate] DESC) AS Id FROM [UserPositionHistory] INNER JOIN [UserPosition] ON [UserPositionHistory].[UserPositionId] = [UserPosition].[UserPositionId] WHERE [UserPositionHistory].[UserId] = [User].[UserId]) AS TMPED WHERE TMPED.Id = 4) AS "Должностная позиция_4",
	(SELECT CONVERT(VARCHAR(10), [TMPED].[ChangeDate], 104) FROM (SELECT [UserPositionHistory].[ChangeDate], ROW_NUMBER() OVER (ORDER BY [UserPositionHistory].[ChangeDate] DESC) AS Id FROM [UserPositionHistory] INNER JOIN [UserPosition] ON [UserPositionHistory].[UserPositionId] = [UserPosition].[UserPositionId] WHERE [UserPositionHistory].[UserId] = [User].[UserId]) AS TMPED WHERE TMPED.Id = 4) AS "Дата назначения_4",	
	(SELECT [TMPED].[Name] FROM (SELECT [UserPosition].[Name], ROW_NUMBER() OVER (ORDER BY [UserPositionHistory].[ChangeDate] DESC) AS Id FROM [UserPositionHistory] INNER JOIN [UserPosition] ON [UserPositionHistory].[UserPositionId] = [UserPosition].[UserPositionId] WHERE [UserPositionHistory].[UserId] = [User].[UserId]) AS TMPED WHERE TMPED.Id = 5) AS "Должностная позиция_5",
	(SELECT CONVERT(VARCHAR(10), [TMPED].[ChangeDate], 104) FROM (SELECT [UserPositionHistory].[ChangeDate], ROW_NUMBER() OVER (ORDER BY [UserPositionHistory].[ChangeDate] DESC) AS Id FROM [UserPositionHistory] INNER JOIN [UserPosition] ON [UserPositionHistory].[UserPositionId] = [UserPosition].[UserPositionId] WHERE [UserPositionHistory].[UserId] = [User].[UserId]) AS TMPED WHERE TMPED.Id = 5) AS "Дата назначения_5"	
	FROM [User]
	INNER JOIN @FIOPersonal ON [User].[UserUID] = [@FIOPersonal].[UserUID]
	LEFT JOIN [UserProp] ON [User].[UserId] = [UserProp].[UserId]
	LEFT JOIN @TableSkills ON [UserProp].[UserId] = [@TableSkills].[UserId]
	LEFT JOIN [Status] ON [UserProp].[StatusId] = [Status].[StatusId]
WHERE [User].{0}</GetSQL>
      <GetSQLWhereString>FullName like '*'</GetSQLWhereString>
      <CreateSql>SET LANGUAGE Russian;
DECLARE @NGenerate NVARCHAR(10) = SUBSTRING(CONVERT(NVARCHAR(100), HASHBYTES('MD5', CAST(SYSDATETIME() AS NVARCHAR)), 2), 0, 12)
DECLARE @NUserUID uniqueidentifier = NEWID()
DECLARE @NUserId INT = NULL
DECLARE @NFullName NVARCHAR(150)
DECLARE @NName NVARCHAR(150) = N'$(Имя пользователя)'
DECLARE @F NVARCHAR(255) = N'$(Фамилия)'
DECLARE @I NVARCHAR(255) = N'$(Имя)'
DECLARE @O NVARCHAR(255) = N'$(Отчество)'
IF (@F IS NULL OR @F = '') AND (@I IS NULL OR @I = '') AND (@O IS NULL OR @O = '')
	SET @NFullName = 'Новый пользователь - ' + @NGenerate
		ELSE SET @NFullName = @F + ' ' + @I + ' ' + @O
DECLARE @NRID INT = 0
DECLARE @NR TABLE (PartyIndex NVARCHAR(255), id INT) 
INSERT INTO @NR 
SELECT CONVERT(NVARCHAR(255), Item), ROW_NUMBER() OVER (ORDER BY @NRID) AS id FROM [dbo].[spc_sys_ParseString](@NFullName, ' ')		

IF (@NName IS NULL OR @NName = '')
	IF CHARINDEX('Новый пользователь', @NFullName) &gt; 0 SET @NName = @NFullName
		ELSE BEGIN
			IF (SELECT [@NR].[PartyIndex] FROM @NR WHERE [@NR].[id] = 1) IS NOT NULL
				SET @NName = (SELECT [@NR].[PartyIndex] FROM @NR WHERE [@NR].[id] = 1)
			IF (SELECT [@NR].[PartyIndex] FROM @NR WHERE [@NR].[id] = 2) IS NOT NULL
				SET @NName = @NName + ' ' + UPPER((SELECT LEFT([@NR].[PartyIndex], 1) FROM @NR WHERE [@NR].[id] = 2)) + '.'
			IF (SELECT [@NR].[PartyIndex] FROM @NR WHERE [@NR].[id] = 3) IS NOT NULL
				SET @NName = @NName + ' ' + UPPER((SELECT LEFT([@NR].[PartyIndex], 1) FROM @NR WHERE [@NR].[id] = 3)) + '.'
		END

DECLARE @NSkills NVARCHAR(MAX) = N'$(Место рождения)' + ';' + 
	N'$(Работа по основному месту работы / по совместительству)' + ';' + 
		N'$(Выполняемые функции)'

DECLARE @NEmale NVARCHAR(150) = NULL
IF N'$(Email)' IS NOT NULL AND N'$(Email)' &lt;&gt; '' AND PATINDEX('%@%.%', N'$(Email)') &gt; 0 SET @NEmale = N'$(Email)'

DECLARE @NInsuranceNumber NVARCHAR(150) = NULL
IF N'$(№ страхового свидетельства ГПС (СНИЛС))' IS NOT NULL AND N'$(№ страхового свидетельства ГПС (СНИЛС))' &lt;&gt; ''
	SET @NInsuranceNumber = N'$(№ страхового свидетельства ГПС (СНИЛС))'

DECLARE @NNumber NVARCHAR(150) = NULL
IF N'$(Табельный номер)' IS NOT NULL AND N'$(Табельный номер)' &lt;&gt; ''
	SET @NNumber = N'$(Табельный номер)'
	
DECLARE @NPhone NVARCHAR(50) = NULL
IF N'$(Телефон)' IS NOT NULL AND N'$(Телефон)' &lt;&gt; ''
	SET @NPhone = N'$(Телефон)'
	
DECLARE @NFax NVARCHAR(50) = NULL
IF N'$(Факс)' IS NOT NULL AND N'$(Факс)' &lt;&gt; ''
	SET @NFax = N'$(Факс)'
	
DECLARE @NAccredited BIT = NULL
IF N'$(Сотрудник аккредитованной лаборатории)' = '1' SET @NAccredited = 1

DECLARE @NComment NVARCHAR(MAX) = NULL
IF N'$(Примечание)' IS NOT NULL AND N'$(Примечание)' &lt;&gt; ''
	SET @NComment = N'$(Примечание)'
	
BEGIN TRANSACTION
BEGIN TRY
	-- Проверка наличия повторения записи в таблице User
	IF (SELECT SUM(1) FROM [User] WHERE [User].[Name] = @NName) &gt; 0
		RAISERROR(N'Имя пользователья должно быть уникальным!', 16, 1)

	-- Основной этап транзакции по вносу записей
	INSERT INTO [User] ([User].[Name], [User].[FullName], [User].[Hash], [User].[Salt], [User].[Description],
		[User].[Enable], [User].[UserUID])
			VALUES (@NName, @NFullName, NULL, NULL, NULL, 1, @NUserUID);
	SET @NUserId = (SELECT [User].[UserId] FROM [User] WHERE [User].[UserUID] = @NUserUID)
	IF @NUserId IS NULL RAISERROR(N'Ошибка внесения записи в таблицу "User" базе данных!', 16, 1)
	
	-- Проверка корректности введеных величин по полям с преобразованием
	DECLARE @NSex INT = NULL
	IF N'$(Пол)' = 'М' OR N'$(Пол)' = 'M' SET @NSex = 1
	IF N'$(Пол)' = 'Ж' SET @NSex = 2
	IF N'$(Пол)' IS NOT NULL AND N'$(Пол)' &lt;&gt; '' AND @NSex IS NULL 
		RAISERROR(N'Пол пользователя задан некорректно!', 16, 1)
	
	DECLARE @NBirthday datetime = NULL
	IF N'$(Дата рождения)' IS NOT NULL AND N'$(Дата рождения)' &lt;&gt; ''
	BEGIN TRY 
		SET @NBirthday = CONVERT(datetime, N'$(Дата рождения)', 104)
	END TRY	
	BEGIN CATCH
		RAISERROR(N'Дата рождения задана некорректно!', 16, 1)
	END CATCH	
	
	DECLARE @NHiringDay datetime = NULL
	IF N'$(Дата трудоустройства)' IS NOT NULL AND N'$(Дата трудоустройства)' &lt;&gt; ''
	BEGIN TRY 
		SET @NHiringDay = CONVERT(datetime, N'$(Дата трудоустройства)', 104)
	END TRY	
	BEGIN CATCH
		RAISERROR(N'Дата трудоустройства задана некорректно!', 16, 1)
	END CATCH
	
	DECLARE @NStatusId INT = NULL
	IF N'$(Статус трудоустройства)' IS NOT NULL AND N'$(Статус трудоустройства)' &lt;&gt; '' BEGIN
		SET @NStatusId = (SELECT TOP 1 [Status].[StatusId] FROM [Status] WHERE [Status].[Name] = N'$(Статус трудоустройства)' AND [Status].[StatusTypeId] = 11)
		IF @NStatusId IS NULL RAISERROR(N'Статус трудоустройства задан некорректно!', 16, 1)
		END	
	
	DECLARE @NCommonSkilsYears REAL = NULL
	IF N'$(Общий стаж до последнего трудоустройства, лет)' IS NOT NULL AND N'$(Общий стаж до последнего трудоустройства, лет)' &lt;&gt; ''
		BEGIN TRY 
			SET @NCommonSkilsYears = CONVERT(REAL, N'$(Общий стаж до последнего трудоустройства, лет)')
		END TRY	
		BEGIN CATCH
			RAISERROR(N'Величина общего стажа до последнего трудоустройства задана некорректно!', 16, 1)
		END CATCH
	
	DECLARE @NSkilsYears REAL = NULL
	IF N'$(Практический опыт до последнего трудоустройства, лет)' IS NOT NULL AND N'$(Практический опыт до последнего трудоустройства, лет)' &lt;&gt; ''
		BEGIN TRY 
			SET @NSkilsYears = CONVERT(REAL, N'$(Практический опыт до последнего трудоустройства, лет)')
		END TRY	
		BEGIN CATCH
			RAISERROR(N'Величина практического опыта до последнего трудоустройства задана некорректно!', 16, 1)
		END CATCH

	EXEC [dbo].[UserProp_Insert] default, @NUserId, @NBirthday, @NHiringDay, @NStatusId, NULL, @NSkills, @NEmale, @NPhone,
		@NAccredited, NULL, @NSkilsYears, @NCommonSkilsYears, @NFax, NULL, @NNumber, NULL, @NInsuranceNumber, @NComment, @NSex,
			NULL, NULL, 0 
			
	-- Вставка данных по образованию
	DECLARE @NEdEducationTypeId INT = NULL
	DECLARE @NEdName NVARCHAR(250) = NULL
	DECLARE @NEdDate datetime = NULL 
	DECLARE @NEdQualification NVARCHAR(250) = NULL
	DECLARE @NDocNumber NVARCHAR(250) = NULL
	DECLARE @NUserEdId INT = NULL

	-- Проверка типа по образованию 1-ой позиции
	IF N'$(Уровень образования_1)' IS NOT NULL AND N'$(Уровень образования_1)' &lt;&gt; '' BEGIN
		SET @NEdEducationTypeId = (SELECT TOP 1 [EducationTypes].[Id] FROM [EducationTypes] WHERE [EducationTypes].[EducationName] = N'$(Уровень образования_1)')
		IF @NEdEducationTypeId IS NULL RAISERROR(N'Уровень образования 1 задан некорректно!', 16, 1)
		END
		
	IF N'$(Учебное заведение_1)' IS NOT NULL AND N'$(Учебное заведение_1)' &lt;&gt; ''
		SET @NEdName = N'$(Учебное заведение_1)'
	
	IF N'$(Дата окончания_1)' IS NOT NULL AND N'$(Дата окончания_1)' &lt;&gt; ''
	BEGIN TRY 
		SET @NEdDate = CONVERT(datetime, N'$(Дата окончания_1)', 104)
	END TRY	
	BEGIN CATCH
		RAISERROR(N'Дата окончания учебного заведения 1 задана некорректно!', 16, 1)
	END CATCH
	
	IF N'$(Квалификация_1)' IS NOT NULL AND N'$(Квалификация_1)' &lt;&gt; ''
		SET @NEdQualification = N'$(Квалификация_1)'

	IF N'$(№ документа об образовании_1)' IS NOT NULL AND N'$(№ документа об образовании_1)' &lt;&gt; ''
		SET @NDocNumber = N'$(№ документа об образовании_1)'
	
	SET @NUserEdId = (SELECT MAX([UserEd].[UserEdId]) + 1 FROM [UserEd]) 
	IF @NUserEdId IS NULL SET @NUserEdId = 1
	
	-- Вставка записи по образованию 1
	IF @NEdName IS NOT NULL AND @NEdDate IS NOT NULL AND @NEdQualification IS NOT NULL AND @NEdEducationTypeId IS NOT NULL BEGIN
		EXEC [dbo].[UserEd_Insert] default, @NUserEdId, @NUserId, @NEdName, @NEdDate, @NEdQualification, @NEdEducationTypeId, @NDocNumber,
			NULL, 0
	END	ELSE PRINT N'Пропуск внесения записи по позиции образования 1'
	SET @NEdEducationTypeId = NULL
	SET @NEdName = NULL
	SET @NEdDate = NULL
	SET @NEdQualification = NULL
	SET @NDocNumber = NULL
	SET @NUserEdId = NULL
	
	-- Проверка типа по образованию 2-ой позиции
	IF N'$(Уровень образования_2)' IS NOT NULL AND N'$(Уровень образования_2)' &lt;&gt; '' BEGIN
		SET @NEdEducationTypeId = (SELECT TOP 1 [EducationTypes].[Id] FROM [EducationTypes] WHERE [EducationTypes].[EducationName] = N'$(Уровень образования_2)')
		IF @NEdEducationTypeId IS NULL RAISERROR(N'Уровень образования 2 задан некорректно!', 16, 1)
		END
		
	IF N'$(Учебное заведение_2)' IS NOT NULL AND N'$(Учебное заведение_2)' &lt;&gt; ''
		SET @NEdName = N'$(Учебное заведение_2)'
	
	IF N'$(Дата окончания_2)' IS NOT NULL AND N'$(Дата окончания_2)' &lt;&gt; ''
	BEGIN TRY 
		SET @NEdDate = CONVERT(datetime, N'$(Дата окончания_2)', 104)
	END TRY	
	BEGIN CATCH
		RAISERROR(N'Дата окончания учебного заведения 2 задана некорректно!', 16, 1)
	END CATCH
	
	IF N'$(Квалификация_2)' IS NOT NULL AND N'$(Квалификация_2)' &lt;&gt; ''
		SET @NEdQualification = N'$(Квалификация_2)'

	IF N'$(№ документа об образовании_2)' IS NOT NULL AND N'$(№ документа об образовании_2)' &lt;&gt; ''
		SET @NDocNumber = N'$(№ документа об образовании_2)'
	
	SET @NUserEdId = (SELECT MAX([UserEd].[UserEdId]) + 1 FROM [UserEd]) 
	IF @NUserEdId IS NULL SET @NUserEdId = 1
	
	-- Вставка записи по образованию 2
	IF @NEdName IS NOT NULL AND @NEdDate IS NOT NULL AND @NEdQualification IS NOT NULL AND @NEdEducationTypeId IS NOT NULL BEGIN
		EXEC [dbo].[UserEd_Insert] default, @NUserEdId, @NUserId, @NEdName, @NEdDate, @NEdQualification, @NEdEducationTypeId, @NDocNumber,
			NULL, 0
	END	ELSE PRINT N'Пропуск внесения записи по позиции образования 2'
	SET @NEdEducationTypeId = NULL
	SET @NEdName = NULL
	SET @NEdDate = NULL
	SET @NEdQualification = NULL
	SET @NDocNumber = NULL
	SET @NUserEdId = NULL
	
	-- Проверка типа по образованию 3-ой позиции
	IF N'$(Уровень образования_3)' IS NOT NULL AND N'$(Уровень образования_3)' &lt;&gt; '' BEGIN
		SET @NEdEducationTypeId = (SELECT TOP 1 [EducationTypes].[Id] FROM [EducationTypes] WHERE [EducationTypes].[EducationName] = N'$(Уровень образования_3)')
		IF @NEdEducationTypeId IS NULL RAISERROR(N'Уровень образования 3 задан некорректно!', 16, 1)
		END
		
	IF N'$(Учебное заведение_3)' IS NOT NULL AND N'$(Учебное заведение_3)' &lt;&gt; ''
		SET @NEdName = N'$(Учебное заведение_3)'
	
	IF N'$(Дата окончания_3)' IS NOT NULL AND N'$(Дата окончания_3)' &lt;&gt; ''
	BEGIN TRY 
		SET @NEdDate = CONVERT(datetime, N'$(Дата окончания_3)', 104)
	END TRY	
	BEGIN CATCH
		RAISERROR(N'Дата окончания учебного заведения 3 задана некорректно!', 16, 1)
	END CATCH
	
	IF N'$(Квалификация_3)' IS NOT NULL AND N'$(Квалификация_3)' &lt;&gt; ''
		SET @NEdQualification = N'$(Квалификация_3)'

	IF N'$(№ документа об образовании_3)' IS NOT NULL AND N'$(№ документа об образовании_3)' &lt;&gt; ''
		SET @NDocNumber = N'$(№ документа об образовании_3)'
	
	SET @NUserEdId = (SELECT MAX([UserEd].[UserEdId]) + 1 FROM [UserEd]) 
	IF @NUserEdId IS NULL SET @NUserEdId = 1
	
	-- Вставка записи по образованию 3
	IF @NEdName IS NOT NULL AND @NEdDate IS NOT NULL AND @NEdQualification IS NOT NULL AND @NEdEducationTypeId IS NOT NULL BEGIN
		EXEC [dbo].[UserEd_Insert] default, @NUserEdId, @NUserId, @NEdName, @NEdDate, @NEdQualification, @NEdEducationTypeId, @NDocNumber,
			NULL, 0
	END	ELSE PRINT N'Пропуск внесения записи по позиции образования 3'
	SET @NEdEducationTypeId = NULL
	SET @NEdName = NULL
	SET @NEdDate = NULL
	SET @NEdQualification = NULL
	SET @NDocNumber = NULL
	SET @NUserEdId = NULL
	
	-- Проверка типа по образованию 4-ой позиции
	IF N'$(Уровень образования_4)' IS NOT NULL AND N'$(Уровень образования_4)' &lt;&gt; '' BEGIN
		SET @NEdEducationTypeId = (SELECT TOP 1 [EducationTypes].[Id] FROM [EducationTypes] WHERE [EducationTypes].[EducationName] = N'$(Уровень образования_4)')
		IF @NEdEducationTypeId IS NULL RAISERROR(N'Уровень образования 4 задан некорректно!', 16, 1)
		END
		
	IF N'$(Учебное заведение_4)' IS NOT NULL AND N'$(Учебное заведение_4)' &lt;&gt; ''
		SET @NEdName = N'$(Учебное заведение_4)'
	
	IF N'$(Дата окончания_4)' IS NOT NULL AND N'$(Дата окончания_4)' &lt;&gt; ''
	BEGIN TRY 
		SET @NEdDate = CONVERT(datetime, N'$(Дата окончания_4)', 104)
	END TRY	
	BEGIN CATCH
		RAISERROR(N'Дата окончания учебного заведения 4 задана некорректно!', 16, 1)
	END CATCH
	
	IF N'$(Квалификация_4)' IS NOT NULL AND N'$(Квалификация_4)' &lt;&gt; ''
		SET @NEdQualification = N'$(Квалификация_4)'

	IF N'$(№ документа об образовании_4)' IS NOT NULL AND N'$(№ документа об образовании_4)' &lt;&gt; ''
		SET @NDocNumber = N'$(№ документа об образовании_4)'
	
	SET @NUserEdId = (SELECT MAX([UserEd].[UserEdId]) + 1 FROM [UserEd]) 
	IF @NUserEdId IS NULL SET @NUserEdId = 1
	
	-- Вставка записи по образованию 4
	IF @NEdName IS NOT NULL AND @NEdDate IS NOT NULL AND @NEdQualification IS NOT NULL AND @NEdEducationTypeId IS NOT NULL BEGIN
		EXEC [dbo].[UserEd_Insert] default, @NUserEdId, @NUserId, @NEdName, @NEdDate, @NEdQualification, @NEdEducationTypeId, @NDocNumber,
			NULL, 0
	END	ELSE PRINT N'Пропуск внесения записи по позиции образования 4'
	SET @NEdEducationTypeId = NULL
	SET @NEdName = NULL
	SET @NEdDate = NULL
	SET @NEdQualification = NULL
	SET @NDocNumber = NULL
	SET @NUserEdId = NULL

	-- Вставка данных по должностной позиции
	DECLARE @NUPHUserPositionHistoryId INT = NULL
	DECLARE @NUPHChangeDate datetime = NULL
	DECLARE @NUPHUserPositionId INT = NULL
	
	-- Проверка типа по должностной позиции 1
	IF N'$(Должностная позиция_1)' IS NOT NULL AND N'$(Должностная позиция_1)' &lt;&gt; '' BEGIN
		SET @NUPHUserPositionId = (SELECT TOP 1 [UserPosition].[UserPositionId] FROM [UserPosition] WHERE [UserPosition].[Name] = N'$(Должностная позиция_1)')
		IF @NUPHUserPositionId IS NULL RAISERROR(N'Наименование должностной позиции 1 задано некорректно!', 16, 1)
		END
	
	IF N'$(Дата назначения_1)' IS NOT NULL AND N'$(Дата назначения_1)' &lt;&gt; ''
	BEGIN TRY 
		SET @NUPHChangeDate = CONVERT(datetime, N'$(Дата назначения_1)', 104)
	END TRY	
	BEGIN CATCH
		RAISERROR(N'Дата назначения по должностной позиции 1 задана некорректно!', 16, 1)
	END CATCH	
	
	SET @NUPHUserPositionHistoryId = (SELECT MAX([UserPositionHistory].[UserPositionHistoryId]) + 1 FROM [UserPositionHistory]) 
	IF @NUPHUserPositionHistoryId IS NULL SET @NUPHUserPositionHistoryId = 1
	
	-- Вставка записи по должностной позиции 1
	IF @NUPHChangeDate IS NOT NULL AND @NUPHUserPositionId IS NOT NULL BEGIN
		EXEC [dbo].[UserPositionHistory_Insert] default, @NUPHUserPositionHistoryId, @NUserId, @NUPHChangeDate, @NUPHUserPositionId
		UPDATE [UserProp] SET
			[UserProp].[UserPositionId] = @NUPHUserPositionId
		WHERE [UserProp].[UserId] = @NUserId
		END
	ELSE PRINT N'Пропуск внесения записи по должностной позиции 1'
	SET @NUPHChangeDate  = NULL
	SET @NUPHUserPositionId = NULL
	
	-- Проверка типа по должностной позиции 2
	IF N'$(Должностная позиция_2)' IS NOT NULL AND N'$(Должностная позиция_2)' &lt;&gt; '' BEGIN
		SET @NUPHUserPositionId = (SELECT TOP 1 [UserPosition].[UserPositionId] FROM [UserPosition] WHERE [UserPosition].[Name] = N'$(Должностная позиция_2)')
		IF @NUPHUserPositionId IS NULL RAISERROR(N'Наименование должностной позиции 2 задано некорректно!', 16, 1)
		END
	
	IF N'$(Дата назначения_2)' IS NOT NULL AND N'$(Дата назначения_2)' &lt;&gt; ''
	BEGIN TRY 
		SET @NUPHChangeDate = CONVERT(datetime, N'$(Дата назначения_2)', 104)
	END TRY	
	BEGIN CATCH
		RAISERROR(N'Дата назначения по должностной позиции 2 задана некорректно!', 16, 1)
	END CATCH	
	
	SET @NUPHUserPositionHistoryId = (SELECT MAX([UserPositionHistory].[UserPositionHistoryId]) + 1 FROM [UserPositionHistory]) 
	IF @NUPHUserPositionHistoryId IS NULL SET @NUPHUserPositionHistoryId = 1
	
	-- Вставка записи по должностной позиции 1
	IF @NUPHChangeDate IS NOT NULL AND @NUPHUserPositionId IS NOT NULL
		EXEC [dbo].[UserPositionHistory_Insert] default, @NUPHUserPositionHistoryId, @NUserId, @NUPHChangeDate, @NUPHUserPositionId
	ELSE PRINT N'Пропуск внесения записи по должностной позиции 2'
	SET @NUPHChangeDate  = NULL
	SET @NUPHUserPositionId = NULL
	
	-- Проверка типа по должностной позиции 3
	IF N'$(Должностная позиция_3)' IS NOT NULL AND N'$(Должностная позиция_3)' &lt;&gt; '' BEGIN
		SET @NUPHUserPositionId = (SELECT TOP 1 [UserPosition].[UserPositionId] FROM [UserPosition] WHERE [UserPosition].[Name] = N'$(Должностная позиция_3)')
		IF @NUPHUserPositionId IS NULL RAISERROR(N'Наименование должностной позиции 3 задано некорректно!', 16, 1)
		END
	
	IF N'$(Дата назначения_3)' IS NOT NULL AND N'$(Дата назначения_3)' &lt;&gt; ''
	BEGIN TRY 
		SET @NUPHChangeDate = CONVERT(datetime, N'$(Дата назначения_3)', 104)
	END TRY	
	BEGIN CATCH
		RAISERROR(N'Дата назначения по должностной позиции 3 задана некорректно!', 16, 1)
	END CATCH	
	
	SET @NUPHUserPositionHistoryId = (SELECT MAX([UserPositionHistory].[UserPositionHistoryId]) + 1 FROM [UserPositionHistory]) 
	IF @NUPHUserPositionHistoryId IS NULL SET @NUPHUserPositionHistoryId = 1
	
	-- Вставка записи по должностной позиции 3
	IF @NUPHChangeDate IS NOT NULL AND @NUPHUserPositionId IS NOT NULL
		EXEC [dbo].[UserPositionHistory_Insert] default, @NUPHUserPositionHistoryId, @NUserId, @NUPHChangeDate, @NUPHUserPositionId
	ELSE PRINT N'Пропуск внесения записи по должностной позиции 3'
	SET @NUPHChangeDate  = NULL
	SET @NUPHUserPositionId = NULL
	
	-- Проверка типа по должностной позиции 4
	IF N'$(Должностная позиция_4)' IS NOT NULL AND N'$(Должностная позиция_4)' &lt;&gt; '' BEGIN
		SET @NUPHUserPositionId = (SELECT TOP 1 [UserPosition].[UserPositionId] FROM [UserPosition] WHERE [UserPosition].[Name] = N'$(Должностная позиция_4)')
		IF @NUPHUserPositionId IS NULL RAISERROR(N'Наименование должностной позиции 4 задано некорректно!', 16, 1)
		END
	
	IF N'$(Дата назначения_4)' IS NOT NULL AND N'$(Дата назначения_4)' &lt;&gt; ''
	BEGIN TRY 
		SET @NUPHChangeDate = CONVERT(datetime, N'$(Дата назначения_4)', 104)
	END TRY	
	BEGIN CATCH
		RAISERROR(N'Дата назначения по должностной позиции 4 задана некорректно!', 16, 1)
	END CATCH	
	
	SET @NUPHUserPositionHistoryId = (SELECT MAX([UserPositionHistory].[UserPositionHistoryId]) + 1 FROM [UserPositionHistory]) 
	IF @NUPHUserPositionHistoryId IS NULL SET @NUPHUserPositionHistoryId = 1
	
	-- Вставка записи по должностной позиции 1
	IF @NUPHChangeDate IS NOT NULL AND @NUPHUserPositionId IS NOT NULL
		EXEC [dbo].[UserPositionHistory_Insert] default, @NUPHUserPositionHistoryId, @NUserId, @NUPHChangeDate, @NUPHUserPositionId
	ELSE PRINT N'Пропуск внесения записи по должностной позиции 4'
	SET @NUPHChangeDate  = NULL
	SET @NUPHUserPositionId = NULL
	
	-- Проверка типа по должностной позиции 5
	IF N'$(Должностная позиция_5)' IS NOT NULL AND N'$(Должностная позиция_5)' &lt;&gt; '' BEGIN
		SET @NUPHUserPositionId = (SELECT TOP 1 [UserPosition].[UserPositionId] FROM [UserPosition] WHERE [UserPosition].[Name] = N'$(Должностная позиция_5)')
		IF @NUPHUserPositionId IS NULL RAISERROR(N'Наименование должностной позиции 5 задано некорректно!', 16, 1)
		END
	
	IF N'$(Дата назначения_5)' IS NOT NULL AND N'$(Дата назначения_5)' &lt;&gt; ''
	BEGIN TRY 
		SET @NUPHChangeDate = CONVERT(datetime, N'$(Дата назначения_5)', 104)
	END TRY	
	BEGIN CATCH
		RAISERROR(N'Дата назначения по должностной позиции 5 задана некорректно!', 16, 1)
	END CATCH	
	
	SET @NUPHUserPositionHistoryId = (SELECT MAX([UserPositionHistory].[UserPositionHistoryId]) + 1 FROM [UserPositionHistory]) 
	IF @NUPHUserPositionHistoryId IS NULL SET @NUPHUserPositionHistoryId = 1
	
	-- Вставка записи по должностной позиции 5
	IF @NUPHChangeDate IS NOT NULL AND @NUPHUserPositionId IS NOT NULL
		EXEC [dbo].[UserPositionHistory_Insert] default, @NUPHUserPositionHistoryId, @NUserId, @NUPHChangeDate, @NUPHUserPositionId
	ELSE PRINT N'Пропуск внесения записи по должностной позиции 5'
	SET @NUPHChangeDate  = NULL
	SET @NUPHUserPositionId = NULL
END TRY

BEGIN CATCH
	IF @@TRANCOUNT &gt; 0
		BEGIN
			ROLLBACK TRANSACTION
			PRINT N'Откат транзакции.'
			DECLARE @NERRORMESSAGE NVARCHAR(1000) = ERROR_MESSAGE()
			RAISERROR(@NERRORMESSAGE, 16, 1);            	
		END
END CATCH

IF @@TRANCOUNT &gt; 0
	BEGIN
		COMMIT TRANSACTION
		PRINT N'Применение транзакции.'
	END</CreateSql>
      <EditSql>SET LANGUAGE Russian;
DECLARE @NGenerate NVARCHAR(10) = SUBSTRING(CONVERT(NVARCHAR(100), HASHBYTES('MD5', CAST(SYSDATETIME() AS NVARCHAR)), 2), 0, 12)
DECLARE @NUserUID uniqueidentifier = N'$(UserUID (Ключ персонала))'
DECLARE @NUserId INT = NULL
DECLARE @NFullName NVARCHAR(150)
DECLARE @NName NVARCHAR(150) = N'$(Имя пользователя)'
DECLARE @F NVARCHAR(255) = N'$(Фамилия)'
DECLARE @I NVARCHAR(255) = N'$(Имя)'
DECLARE @O NVARCHAR(255) = N'$(Отчество)'
IF (@F IS NULL OR @F = '') AND (@I IS NULL OR @I = '') AND (@O IS NULL OR @O = '')
	SET @NFullName = 'Новый пользователь - ' + @NGenerate
		ELSE SET @NFullName = @F + ' ' + @I + ' ' + @O
DECLARE @NRID INT = 0
DECLARE @NR TABLE (PartyIndex NVARCHAR(255), id INT) 
INSERT INTO @NR 
SELECT CONVERT(NVARCHAR(255), Item), ROW_NUMBER() OVER (ORDER BY @NRID) AS id FROM [dbo].[spc_sys_ParseString](@NFullName, ' ')		

IF (@NName IS NULL OR @NName = '')
	IF CHARINDEX('Новый пользователь', @NFullName) &gt; 0 SET @NName = @NFullName
		ELSE BEGIN
			IF (SELECT [@NR].[PartyIndex] FROM @NR WHERE [@NR].[id] = 1) IS NOT NULL
				SET @NName = (SELECT [@NR].[PartyIndex] FROM @NR WHERE [@NR].[id] = 1)
			IF (SELECT [@NR].[PartyIndex] FROM @NR WHERE [@NR].[id] = 2) IS NOT NULL
				SET @NName = @NName + ' ' + UPPER((SELECT LEFT([@NR].[PartyIndex], 1) FROM @NR WHERE [@NR].[id] = 2)) + '.'
			IF (SELECT [@NR].[PartyIndex] FROM @NR WHERE [@NR].[id] = 3) IS NOT NULL
				SET @NName = @NName + ' ' + UPPER((SELECT LEFT([@NR].[PartyIndex], 1) FROM @NR WHERE [@NR].[id] = 3)) + '.'
		END

DECLARE @NSkills NVARCHAR(MAX) = N'$(Место рождения)' + ';' + 
	N'$(Работа по основному месту работы / по совместительству)' + ';' + 
		N'$(Выполняемые функции)'

DECLARE @NEmale NVARCHAR(150) = NULL
IF N'$(Email)' IS NOT NULL AND N'$(Email)' &lt;&gt; '' AND PATINDEX('%@%.%', N'$(Email)') &gt; 0 SET @NEmale = N'$(Email)'

DECLARE @NInsuranceNumber NVARCHAR(150) = NULL
IF N'$(№ страхового свидетельства ГПС (СНИЛС))' IS NOT NULL AND N'$(№ страхового свидетельства ГПС (СНИЛС))' &lt;&gt; ''
	SET @NInsuranceNumber = N'$(№ страхового свидетельства ГПС (СНИЛС))'

DECLARE @NNumber NVARCHAR(150) = NULL
IF N'$(Табельный номер)' IS NOT NULL AND N'$(Табельный номер)' &lt;&gt; ''
	SET @NNumber = N'$(Табельный номер)'
	
DECLARE @NPhone NVARCHAR(50) = NULL
IF N'$(Телефон)' IS NOT NULL AND N'$(Телефон)' &lt;&gt; ''
	SET @NPhone = N'$(Телефон)'
	
DECLARE @NFax NVARCHAR(50) = NULL
IF N'$(Факс)' IS NOT NULL AND N'$(Факс)' &lt;&gt; ''
	SET @NFax = N'$(Факс)'
	
DECLARE @NAccredited BIT = NULL
IF N'$(Сотрудник аккредитованной лаборатории)' = '1' SET @NAccredited = 1

DECLARE @NComment NVARCHAR(MAX) = NULL
IF N'$(Примечание)' IS NOT NULL AND N'$(Примечание)' &lt;&gt; ''
	SET @NComment = N'$(Примечание)'
	
BEGIN TRANSACTION
BEGIN TRY
	SET @NUserId = (SELECT [User].[UserId] FROM [User] WHERE [User].[UserUID] = @NUserUID)
	IF @NUserId IS NULL RAISERROR(N'Ошибка получения записи в таблице "User" по ключу UserUID', 16, 1)

	-- Основной этап транзакции по изменению записей
	UPDATE [User] SET
		[User].[Name] = @NName, 
		[User].[FullName] = @NFullName
	WHERE [User].[UserUID] = @NUserUID
	
	-- Проверка наличия повторения записи в таблице User
	IF (SELECT SUM(1) FROM [User] WHERE [User].[Name] = @NName) &gt; 1
		RAISERROR(N'Имя пользователья должно быть уникальным!', 16, 1)
		
	-- Проверка корректности введеных величин по полям с преобразованием
	DECLARE @NSex INT = NULL
	IF N'$(Пол)' = 'М' OR N'$(Пол)' = 'M' SET @NSex = 1
	IF N'$(Пол)' = 'Ж' SET @NSex = 2
	IF N'$(Пол)' IS NOT NULL AND N'$(Пол)' &lt;&gt; '' AND @NSex IS NULL 
		RAISERROR(N'Пол пользователя задан некорректно!', 16, 1)
	
	DECLARE @NBirthday datetime = NULL
	IF N'$(Дата рождения)' IS NOT NULL AND N'$(Дата рождения)' &lt;&gt; ''
	BEGIN TRY 
		SET @NBirthday = CONVERT(datetime, N'$(Дата рождения)', 104)
	END TRY	
	BEGIN CATCH
		RAISERROR(N'Дата рождения задана некорректно!', 16, 1)
	END CATCH	
	
	DECLARE @NHiringDay datetime = NULL
	IF N'$(Дата трудоустройства)' IS NOT NULL AND N'$(Дата трудоустройства)' &lt;&gt; ''
	BEGIN TRY 
		SET @NHiringDay = CONVERT(datetime, N'$(Дата трудоустройства)', 104)
	END TRY	
	BEGIN CATCH
		RAISERROR(N'Дата трудоустройства задана некорректно!', 16, 1)
	END CATCH
	
	DECLARE @NStatusId INT = NULL
	IF N'$(Статус трудоустройства)' IS NOT NULL AND N'$(Статус трудоустройства)' &lt;&gt; '' BEGIN
		SET @NStatusId = (SELECT TOP 1 [Status].[StatusId] FROM [Status] WHERE [Status].[Name] = N'$(Статус трудоустройства)' AND [Status].[StatusTypeId] = 11)
		IF @NStatusId IS NULL RAISERROR(N'Статус трудоустройства задан некорректно!', 16, 1)
		END	
	
	DECLARE @NCommonSkilsYears REAL = NULL
	IF N'$(Общий стаж до последнего трудоустройства, лет)' IS NOT NULL AND N'$(Общий стаж до последнего трудоустройства, лет)' &lt;&gt; ''
		BEGIN TRY 
			SET @NCommonSkilsYears = CONVERT(REAL, N'$(Общий стаж до последнего трудоустройства, лет)')
		END TRY	
		BEGIN CATCH
			RAISERROR(N'Величина общего стажа до последнего трудоустройства задана некорректно!', 16, 1)
		END CATCH
	
	DECLARE @NSkilsYears REAL = NULL
	IF N'$(Практический опыт до последнего трудоустройства, лет)' IS NOT NULL AND N'$(Практический опыт до последнего трудоустройства, лет)' &lt;&gt; ''
		BEGIN TRY 
			SET @NSkilsYears = CONVERT(REAL, N'$(Практический опыт до последнего трудоустройства, лет)')
		END TRY	
		BEGIN CATCH
			RAISERROR(N'Величина практического опыта до последнего трудоустройства задана некорректно!', 16, 1)
		END CATCH

	UPDATE [UserProp] SET
		[UserProp].[Birthday] = @NBirthday,
		[UserProp].[HiringDay] = @NHiringDay,
		[UserProp].[StatusId] = @NStatusId,
		[UserProp].[Skills] = @NSkills,
		[UserProp].[Emale] = @NEmale,
		[UserProp].[Phone] = @NPhone,
		[UserProp].[Accredited] = @NAccredited,
		[UserProp].[SkillsYears] = @NSkilsYears,
		[UserProp].[CommonSkillsYears] = @NCommonSkilsYears,
		[UserProp].[Fax] = @NFax,
		[UserProp].[Number] = @NNumber,
		[UserProp].[InsuranceNumber] = @NInsuranceNumber,
		[UserProp].[Comment] = @NComment,
		[UserProp].[Sex] = @NSex
	WHERE [UserProp].[UserId] = @NUserId

	-- Удаление всех записей по образованию по пользователю
	DELETE [UserEd] WHERE [UserEd].[UserId] = @NUserId
	
	-- Вставка данных по образованию
	DECLARE @NEdEducationTypeId INT = NULL
	DECLARE @NEdName NVARCHAR(250) = NULL
	DECLARE @NEdDate datetime = NULL 
	DECLARE @NEdQualification NVARCHAR(250) = NULL
	DECLARE @NDocNumber NVARCHAR(250) = NULL
	DECLARE @NUserEdId INT = NULL

	-- Проверка типа по образованию 1-ой позиции
	IF N'$(Уровень образования_1)' IS NOT NULL AND N'$(Уровень образования_1)' &lt;&gt; '' BEGIN
		SET @NEdEducationTypeId = (SELECT TOP 1 [EducationTypes].[Id] FROM [EducationTypes] WHERE [EducationTypes].[EducationName] = N'$(Уровень образования_1)')
		IF @NEdEducationTypeId IS NULL RAISERROR(N'Уровень образования 1 задан некорректно!', 16, 1)
		END
		
	IF N'$(Учебное заведение_1)' IS NOT NULL AND N'$(Учебное заведение_1)' &lt;&gt; ''
		SET @NEdName = N'$(Учебное заведение_1)'
	
	IF N'$(Дата окончания_1)' IS NOT NULL AND N'$(Дата окончания_1)' &lt;&gt; ''
	BEGIN TRY 
		SET @NEdDate = CONVERT(datetime, N'$(Дата окончания_1)', 104)
	END TRY	
	BEGIN CATCH
		RAISERROR(N'Дата окончания учебного заведения 1 задана некорректно!', 16, 1)
	END CATCH
	
	IF N'$(Квалификация_1)' IS NOT NULL AND N'$(Квалификация_1)' &lt;&gt; ''
		SET @NEdQualification = N'$(Квалификация_1)'

	IF N'$(№ документа об образовании_1)' IS NOT NULL AND N'$(№ документа об образовании_1)' &lt;&gt; ''
		SET @NDocNumber = N'$(№ документа об образовании_1)'
	
	SET @NUserEdId = (SELECT MAX([UserEd].[UserEdId]) + 1 FROM [UserEd]) 
	IF @NUserEdId IS NULL SET @NUserEdId = 1
	
	-- Вставка записи по образованию 1
	IF @NEdName IS NOT NULL AND @NEdDate IS NOT NULL AND @NEdQualification IS NOT NULL AND @NEdEducationTypeId IS NOT NULL BEGIN

		EXEC [dbo].[UserEd_Insert] default, @NUserEdId, @NUserId, @NEdName, @NEdDate, @NEdQualification, @NEdEducationTypeId, @NDocNumber,
			NULL, 0
	END	ELSE PRINT N'Пропуск внесения записи по позиции образования 1'
	SET @NEdEducationTypeId = NULL
	SET @NEdName = NULL
	SET @NEdDate = NULL
	SET @NEdQualification = NULL
	SET @NDocNumber = NULL
	SET @NUserEdId = NULL
	
	-- Проверка типа по образованию 2-ой позиции
	IF N'$(Уровень образования_2)' IS NOT NULL AND N'$(Уровень образования_2)' &lt;&gt; '' BEGIN
		SET @NEdEducationTypeId = (SELECT TOP 1 [EducationTypes].[Id] FROM [EducationTypes] WHERE [EducationTypes].[EducationName] = N'$(Уровень образования_2)')
		IF @NEdEducationTypeId IS NULL RAISERROR(N'Уровень образования 2 задан некорректно!', 16, 1)
		END
		
	IF N'$(Учебное заведение_2)' IS NOT NULL AND N'$(Учебное заведение_2)' &lt;&gt; ''
		SET @NEdName = N'$(Учебное заведение_2)'
	
	IF N'$(Дата окончания_2)' IS NOT NULL AND N'$(Дата окончания_2)' &lt;&gt; ''
	BEGIN TRY 
		SET @NEdDate = CONVERT(datetime, N'$(Дата окончания_2)', 104)
	END TRY	
	BEGIN CATCH
		RAISERROR(N'Дата окончания учебного заведения 2 задана некорректно!', 16, 1)
	END CATCH
	
	IF N'$(Квалификация_2)' IS NOT NULL AND N'$(Квалификация_2)' &lt;&gt; ''
		SET @NEdQualification = N'$(Квалификация_2)'

	IF N'$(№ документа об образовании_2)' IS NOT NULL AND N'$(№ документа об образовании_2)' &lt;&gt; ''
		SET @NDocNumber = N'$(№ документа об образовании_2)'
	
	SET @NUserEdId = (SELECT MAX([UserEd].[UserEdId]) + 1 FROM [UserEd]) 
	IF @NUserEdId IS NULL SET @NUserEdId = 1
	
	-- Вставка записи по образованию 2
	IF @NEdName IS NOT NULL AND @NEdDate IS NOT NULL AND @NEdQualification IS NOT NULL AND @NEdEducationTypeId IS NOT NULL BEGIN
		EXEC [dbo].[UserEd_Insert] default, @NUserEdId, @NUserId, @NEdName, @NEdDate, @NEdQualification, @NEdEducationTypeId, @NDocNumber,
			NULL, 0
	END	ELSE PRINT N'Пропуск внесения записи по позиции образования 2'
	SET @NEdEducationTypeId = NULL
	SET @NEdName = NULL
	SET @NEdDate = NULL
	SET @NEdQualification = NULL
	SET @NDocNumber = NULL
	SET @NUserEdId = NULL
	
	-- Проверка типа по образованию 3-ой позиции
	IF N'$(Уровень образования_3)' IS NOT NULL AND N'$(Уровень образования_3)' &lt;&gt; '' BEGIN
		SET @NEdEducationTypeId = (SELECT TOP 1 [EducationTypes].[Id] FROM [EducationTypes] WHERE [EducationTypes].[EducationName] = N'$(Уровень образования_3)')
		IF @NEdEducationTypeId IS NULL RAISERROR(N'Уровень образования 3 задан некорректно!', 16, 1)
		END
		
	IF N'$(Учебное заведение_3)' IS NOT NULL AND N'$(Учебное заведение_3)' &lt;&gt; ''
		SET @NEdName = N'$(Учебное заведение_3)'
	
	IF N'$(Дата окончания_3)' IS NOT NULL AND N'$(Дата окончания_3)' &lt;&gt; ''
	BEGIN TRY 
		SET @NEdDate = CONVERT(datetime, N'$(Дата окончания_3)', 104)
	END TRY	
	BEGIN CATCH
		RAISERROR(N'Дата окончания учебного заведения 3 задана некорректно!', 16, 1)
	END CATCH
	
	IF N'$(Квалификация_3)' IS NOT NULL AND N'$(Квалификация_3)' &lt;&gt; ''
		SET @NEdQualification = N'$(Квалификация_3)'

	IF N'$(№ документа об образовании_3)' IS NOT NULL AND N'$(№ документа об образовании_3)' &lt;&gt; ''
		SET @NDocNumber = N'$(№ документа об образовании_3)'
	
	SET @NUserEdId = (SELECT MAX([UserEd].[UserEdId]) + 1 FROM [UserEd]) 
	IF @NUserEdId IS NULL SET @NUserEdId = 1
	
	-- Вставка записи по образованию 3
	IF @NEdName IS NOT NULL AND @NEdDate IS NOT NULL AND @NEdQualification IS NOT NULL AND @NEdEducationTypeId IS NOT NULL BEGIN
		EXEC [dbo].[UserEd_Insert] default, @NUserEdId, @NUserId, @NEdName, @NEdDate, @NEdQualification, @NEdEducationTypeId, @NDocNumber,
			NULL, 0
	END	ELSE PRINT N'Пропуск внесения записи по позиции образования 3'
	SET @NEdEducationTypeId = NULL
	SET @NEdName = NULL
	SET @NEdDate = NULL
	SET @NEdQualification = NULL
	SET @NDocNumber = NULL
	SET @NUserEdId = NULL
	
	-- Проверка типа по образованию 4-ой позиции
	IF N'$(Уровень образования_4)' IS NOT NULL AND N'$(Уровень образования_4)' &lt;&gt; '' BEGIN
		SET @NEdEducationTypeId = (SELECT TOP 1 [EducationTypes].[Id] FROM [EducationTypes] WHERE [EducationTypes].[EducationName] = N'$(Уровень образования_4)')
		IF @NEdEducationTypeId IS NULL RAISERROR(N'Уровень образования 4 задан некорректно!', 16, 1)
		END
		
	IF N'$(Учебное заведение_4)' IS NOT NULL AND N'$(Учебное заведение_4)' &lt;&gt; ''
		SET @NEdName = N'$(Учебное заведение_4)'
	
	IF N'$(Дата окончания_4)' IS NOT NULL AND N'$(Дата окончания_4)' &lt;&gt; ''
	BEGIN TRY 
		SET @NEdDate = CONVERT(datetime, N'$(Дата окончания_4)', 104)
	END TRY	
	BEGIN CATCH
		RAISERROR(N'Дата окончания учебного заведения 4 задана некорректно!', 16, 1)
	END CATCH
	
	IF N'$(Квалификация_4)' IS NOT NULL AND N'$(Квалификация_4)' &lt;&gt; ''
		SET @NEdQualification = N'$(Квалификация_4)'

	IF N'$(№ документа об образовании_4)' IS NOT NULL AND N'$(№ документа об образовании_4)' &lt;&gt; ''
		SET @NDocNumber = N'$(№ документа об образовании_4)'
	
	SET @NUserEdId = (SELECT MAX([UserEd].[UserEdId]) + 1 FROM [UserEd]) 
	IF @NUserEdId IS NULL SET @NUserEdId = 1
	
	-- Вставка записи по образованию 4
	IF @NEdName IS NOT NULL AND @NEdDate IS NOT NULL AND @NEdQualification IS NOT NULL AND @NEdEducationTypeId IS NOT NULL BEGIN
		EXEC [dbo].[UserEd_Insert] default, @NUserEdId, @NUserId, @NEdName, @NEdDate, @NEdQualification, @NEdEducationTypeId, @NDocNumber,
			NULL, 0
	END	ELSE PRINT N'Пропуск внесения записи по позиции образования 4'
	SET @NEdEducationTypeId = NULL
	SET @NEdName = NULL
	SET @NEdDate = NULL
	SET @NEdQualification = NULL
	SET @NDocNumber = NULL
	SET @NUserEdId = NULL

	-- Удаление всех записей по должностной позиции для пользователя
	DELETE [UserPositionHistory] WHERE [UserPositionHistory].[UserId] = @NUserId

	-- Вставка данных по должностной позиции
	DECLARE @NUPHUserPositionHistoryId INT = NULL
	DECLARE @NUPHChangeDate datetime = NULL
	DECLARE @NUPHUserPositionId INT = NULL
	
	-- Проверка типа по должностной позиции 1
	IF N'$(Должностная позиция_1)' IS NOT NULL AND N'$(Должностная позиция_1)' &lt;&gt; '' BEGIN
		SET @NUPHUserPositionId = (SELECT TOP 1 [UserPosition].[UserPositionId] FROM [UserPosition] WHERE [UserPosition].[Name] = N'$(Должностная позиция_1)')
		IF @NUPHUserPositionId IS NULL RAISERROR(N'Наименование должностной позиции 1 задано некорректно!', 16, 1)
		END
	
	IF N'$(Дата назначения_1)' IS NOT NULL AND N'$(Дата назначения_1)' &lt;&gt; ''
	BEGIN TRY 
		SET @NUPHChangeDate = CONVERT(datetime, N'$(Дата назначения_1)', 104)
	END TRY	
	BEGIN CATCH
		RAISERROR(N'Дата назначения по должностной позиции 1 задана некорректно!', 16, 1)
	END CATCH	
	
	SET @NUPHUserPositionHistoryId = (SELECT MAX([UserPositionHistory].[UserPositionHistoryId]) + 1 FROM [UserPositionHistory]) 
	IF @NUPHUserPositionHistoryId IS NULL SET @NUPHUserPositionHistoryId = 1
	
	-- Вставка записи по должностной позиции 1
	IF @NUPHChangeDate IS NOT NULL AND @NUPHUserPositionId IS NOT NULL BEGIN
		EXEC [dbo].[UserPositionHistory_Insert] default, @NUPHUserPositionHistoryId, @NUserId, @NUPHChangeDate, @NUPHUserPositionId
		UPDATE [UserProp] SET
			[UserProp].[UserPositionId] = @NUPHUserPositionId
		WHERE [UserProp].[UserId] = @NUserId
		END
	ELSE PRINT N'Пропуск внесения записи по должностной позиции 1'
	SET @NUPHChangeDate  = NULL
	SET @NUPHUserPositionId = NULL
	
	-- Проверка типа по должностной позиции 2
	IF N'$(Должностная позиция_2)' IS NOT NULL AND N'$(Должностная позиция_2)' &lt;&gt; '' BEGIN
		SET @NUPHUserPositionId = (SELECT TOP 1 [UserPosition].[UserPositionId] FROM [UserPosition] WHERE [UserPosition].[Name] = N'$(Должностная позиция_2)')
		IF @NUPHUserPositionId IS NULL RAISERROR(N'Наименование должностной позиции 2 задано некорректно!', 16, 1)
		END
	
	IF N'$(Дата назначения_2)' IS NOT NULL AND N'$(Дата назначения_2)' &lt;&gt; ''
	BEGIN TRY 
		SET @NUPHChangeDate = CONVERT(datetime, N'$(Дата назначения_2)', 104)
	END TRY	
	BEGIN CATCH
		RAISERROR(N'Дата назначения по должностной позиции 2 задана некорректно!', 16, 1)
	END CATCH	
	
	SET @NUPHUserPositionHistoryId = (SELECT MAX([UserPositionHistory].[UserPositionHistoryId]) + 1 FROM [UserPositionHistory]) 
	IF @NUPHUserPositionHistoryId IS NULL SET @NUPHUserPositionHistoryId = 1
	
	-- Вставка записи по должностной позиции 1
	IF @NUPHChangeDate IS NOT NULL AND @NUPHUserPositionId IS NOT NULL
		EXEC [dbo].[UserPositionHistory_Insert] default, @NUPHUserPositionHistoryId, @NUserId, @NUPHChangeDate, @NUPHUserPositionId
	ELSE PRINT N'Пропуск внесения записи по должностной позиции 2'
	SET @NUPHChangeDate  = NULL
	SET @NUPHUserPositionId = NULL
	
	-- Проверка типа по должностной позиции 3
	IF N'$(Должностная позиция_3)' IS NOT NULL AND N'$(Должностная позиция_3)' &lt;&gt; '' BEGIN
		SET @NUPHUserPositionId = (SELECT TOP 1 [UserPosition].[UserPositionId] FROM [UserPosition] WHERE [UserPosition].[Name] = N'$(Должностная позиция_3)')
		IF @NUPHUserPositionId IS NULL RAISERROR(N'Наименование должностной позиции 3 задано некорректно!', 16, 1)
		END
	
	IF N'$(Дата назначения_3)' IS NOT NULL AND N'$(Дата назначения_3)' &lt;&gt; ''
	BEGIN TRY 
		SET @NUPHChangeDate = CONVERT(datetime, N'$(Дата назначения_3)', 104)
	END TRY	
	BEGIN CATCH
		RAISERROR(N'Дата назначения по должностной позиции 3 задана некорректно!', 16, 1)
	END CATCH	
	
	SET @NUPHUserPositionHistoryId = (SELECT MAX([UserPositionHistory].[UserPositionHistoryId]) + 1 FROM [UserPositionHistory]) 
	IF @NUPHUserPositionHistoryId IS NULL SET @NUPHUserPositionHistoryId = 1
	
	-- Вставка записи по должностной позиции 3
	IF @NUPHChangeDate IS NOT NULL AND @NUPHUserPositionId IS NOT NULL
		EXEC [dbo].[UserPositionHistory_Insert] default, @NUPHUserPositionHistoryId, @NUserId, @NUPHChangeDate, @NUPHUserPositionId
	ELSE PRINT N'Пропуск внесения записи по должностной позиции 3'
	SET @NUPHChangeDate  = NULL
	SET @NUPHUserPositionId = NULL
	
	-- Проверка типа по должностной позиции 4
	IF N'$(Должностная позиция_4)' IS NOT NULL AND N'$(Должностная позиция_4)' &lt;&gt; '' BEGIN
		SET @NUPHUserPositionId = (SELECT TOP 1 [UserPosition].[UserPositionId] FROM [UserPosition] WHERE [UserPosition].[Name] = N'$(Должностная позиция_40')
		IF @NUPHUserPositionId IS NULL RAISERROR(N'Наименование должностной позиции 4 задано некорректно!', 16, 1)
		END
	
	IF N'$(Дата назначения_4)' IS NOT NULL AND N'$(Дата назначения_4)' &lt;&gt; ''
	BEGIN TRY 
		SET @NUPHChangeDate = CONVERT(datetime, N'$(Дата назначения_4)', 104)
	END TRY	
	BEGIN CATCH
		RAISERROR(N'Дата назначения по должностной позиции 4 задана некорректно!', 16, 1)
	END CATCH	
	
	SET @NUPHUserPositionHistoryId = (SELECT MAX([UserPositionHistory].[UserPositionHistoryId]) + 1 FROM [UserPositionHistory]) 
	IF @NUPHUserPositionHistoryId IS NULL SET @NUPHUserPositionHistoryId = 1
	
	-- Вставка записи по должностной позиции 1
	IF @NUPHChangeDate IS NOT NULL AND @NUPHUserPositionId IS NOT NULL
		EXEC [dbo].[UserPositionHistory_Insert] default, @NUPHUserPositionHistoryId, @NUserId, @NUPHChangeDate, @NUPHUserPositionId
	ELSE PRINT N'Пропуск внесения записи по должностной позиции 4'
	SET @NUPHChangeDate  = NULL
	SET @NUPHUserPositionId = NULL
	
	-- Проверка типа по должностной позиции 5
	IF N'$(Должностная позиция_5)' IS NOT NULL AND N'$(Должностная позиция_5)' &lt;&gt; '' BEGIN
		SET @NUPHUserPositionId = (SELECT TOP 1 [UserPosition].[UserPositionId] FROM [UserPosition] WHERE [UserPosition].[Name] = N'$(Должностная позиция_5)')
		IF @NUPHUserPositionId IS NULL RAISERROR(N'Наименование должностной позиции 5 задано некорректно!', 16, 1)
		END
	
	IF N'$(Дата назначения_5)' IS NOT NULL AND N'$(Дата назначения_5)' &lt;&gt; ''
	BEGIN TRY 
		SET @NUPHChangeDate = CONVERT(datetime, N'$(Дата назначения_5)', 104)
	END TRY	
	BEGIN CATCH
		RAISERROR(N'Дата назначения по должностной позиции 5 задана некорректно!', 16, 1)
	END CATCH	
	
	SET @NUPHUserPositionHistoryId = (SELECT MAX([UserPositionHistory].[UserPositionHistoryId]) + 1 FROM [UserPositionHistory]) 
	IF @NUPHUserPositionHistoryId IS NULL SET @NUPHUserPositionHistoryId = 1
	
	-- Вставка записи по должностной позиции 5
	IF @NUPHChangeDate IS NOT NULL AND @NUPHUserPositionId IS NOT NULL
		EXEC [dbo].[UserPositionHistory_Insert] default, @NUPHUserPositionHistoryId, @NUserId, @NUPHChangeDate, @NUPHUserPositionId
	ELSE PRINT N'Пропуск внесения записи по должностной позиции 5'
	SET @NUPHChangeDate  = NULL
	SET @NUPHUserPositionId = NULL
END TRY

BEGIN CATCH
	IF @@TRANCOUNT &gt; 0
		BEGIN
			ROLLBACK TRANSACTION
			PRINT N'Откат транзакции.'
			DECLARE @NERRORMESSAGE NVARCHAR(1000) = ERROR_MESSAGE()
			RAISERROR(@NERRORMESSAGE, 16, 1);            	
		END
END CATCH

IF @@TRANCOUNT &gt; 0
	BEGIN
		COMMIT TRANSACTION
		PRINT N'Применение транзакции.'
	END</EditSql>
      <DeleteSql>SET LANGUAGE Russian;
DECLARE @NUserUID AS uniqueidentifier = '$(UserUID (Ключ персонала))'
DECLARE @NUserId INT = NULL
BEGIN TRANSACTION
BEGIN TRY
	IF (SELECT SUM(1) FROM [User] WHERE [User].[UserUID] = @NUserUID) &gt; 0 
		SET @NUserId = (SELECT [User].[UserId] FROM [User] WHERE [User].[UserUID] = @NUserUID)
			ELSE RAISERROR(N'Ошибка в данных "UserUID (Ключ персонала)"! В базе данных ЛИМС пользователя с таким ключом не существует.', 16, 1)			
		IF @NUserId IS NOT NULL BEGIN
			-- 1
			PRINT N'[UserRole]:'
			DELETE FROM [UserRole] WHERE [UserRole].[UserId] = @NUserId
			
			-- 2
			PRINT N'[UserPositionHistory]:'
			DELETE FROM [UserPositionHistory] WHERE [UserPositionHistory].[UserId] = @NUserId
			
			-- 3
			PRINT N'[UserMapping]:'
			DELETE FROM [UserMapping] WHERE [UserMapping].[UserId] = @NUserId			

			-- 4
			PRINT N'[UserGroup]:'
			DELETE FROM [UserGroup] WHERE [UserGroup].[UserId] = @NUserId			
			
			-- 5
			PRINT N'[UserEd]:'
			DELETE FROM [UserEd] WHERE [UserEd].[UserId] = @NUserId
			
			-- 6
			PRINT N'[UserProp]:'
			DELETE FROM [UserProp] WHERE [UserProp].[UserId] = @NUserId
			
			-- 7
			PRINT N'[SubdivisionUser]:'
			DELETE FROM [SubdivisionUser] WHERE [SubdivisionUser].[UserId] = @NUserId
			
			-- 8
			PRINT N'[User]:'
			DELETE FROM [User] WHERE [User].[UserId] = @NUserId AND [User].[UserUID] = @NUserUID
		END
END TRY

BEGIN CATCH
	IF @@TRANCOUNT &gt; 0
		BEGIN
			ROLLBACK TRANSACTION
			PRINT N'Откат транзакции.'
			DECLARE @NERRORMESSAGE NVARCHAR(1000) = ERROR_MESSAGE()
			RAISERROR(@NERRORMESSAGE, 16, 1);            	
		END
END CATCH

IF @@TRANCOUNT &gt; 0
	BEGIN
		COMMIT TRANSACTION
		PRINT N'Применение транзакции'
	END</DeleteSql>
      <ImageBuffer>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</ImageBuffer>
    </ItemChanger>
<<<<<<< HEAD
    <ItemChanger>
      <Name>LDS.Группы пользователей</Name>
      <GetSQL>select 
    'x' as [Select(x)], 
    g.GroupId,
    g.Name,
    g.Description
from 
	[dbo].[Group] g 
where {0}</GetSQL>
      <GetSQLWhereString>[Name] LIKE '*'</GetSQLWhereString>
      <CreateSql>declare @p3 int = (SELECT MAX(GroupId) + 1 FROM [dbo].[Group])
exec sp_executesql 
    N'exec sp_InsertGroup @groupId output, @name, @description',
    N'@groupId int output,@name nvarchar(150),@description nvarchar(255)',
    @groupId=@p3 output, @name=N'@Name', @description=N'@Description'</CreateSql>
      <EditSql>UPDATE [dbo].[Group] 
SET  
    [Name] = N'$(Name)', 
    [Description] = N'$(Description)'
WHERE 
    [GroupId] = $(GroupId)</EditSql>
      <DeleteSql>DECLARE @GroupId int = $(GroupId)  
DELETE FROM [dbo].[UserGroup] WHERE ([GroupId] = @GroupId) 
DELETE FROM [dbo].[SampleLogGroup] WHERE ([GroupId] = @GroupId) 
DELETE FROM [dbo].[GroupSecurity] WHERE ([GroupId] = @GroupId) 
DELETE FROM [dbo].[FeatureNodeRights] WHERE ([GroupId] = @GroupId)
DELETE FROM [Group] WHERE ([GroupId] = @GroupId)</DeleteSql>
      <ImageBuffer>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</ImageBuffer>
    </ItemChanger>
    <ItemChanger>
      <Name>LDS. STDDOC</Name>
      <GetSQL>SELECT 
    'x' AS [Select(x)],
    --sd.[StdDocUid], 
    sd.[Code], 
    sd.[Name],
    sdv.Code AS [VerCode],
    sdv.Name AS [VerName],
    --sd.[StdDocType], 
    --sd.[DeveloperUid], 
    --sd.[GovRegulation], 
    --sd.[OrderNum], 
    --sd.[InAccrScope],
    sdv.StdDocVerId AS [StdDocVerId],
    
    stuff(
    (
        SELECT '|' + s.[Code]
        FROM [dbo].[SubdivisionTech] st 
            INNER JOIN [Subdivision] s  ON st.[SubdivisionId] = s.[SubdivisionId] 
        WHERE st.[TechUid] = sd.[StdDocUid] 
        FOR XML PATH ('')
    ), 1, 1, '') Subdivisions 
FROM 
	[dbo].[StdDoc] sd
	LEFT JOIN [StdDocVer] sdv ON sdv.[StdDocUid] = sd.[StdDocUid]
WHERE   
	sd.[StdDocType] = 0 AND
	{0}
</GetSQL>
      <GetSQLWhereString>sd.[Name] LIKE '*Инст*' --AND StdDocType = 0</GetSQLWhereString>
      <EditSql>UPDATE [dbo].[StdDoc] 
SET 
    [Code] = N'$(Code)', 
    [Name] = N'$(Name)', 
    [StdDocType] = $(StdDocType), 
    [DeveloperUid] = '$(DeveloperUid)', 
    [GovRegulation] = $(GovRegulation), 
    [OrderNum] = N'$(OrderNum)', 
    [InAccrScope] = $(InAccrScope)
WHERE
    [StdDocUid] = '$(StdDocUid)'
    </EditSql>
      <ImageBuffer>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</ImageBuffer>
    </ItemChanger>
    <ItemChanger>
      <Name>LDS. Prm</Name>
      <GetSQL>SELECT 
    'x' as [Select(x)],
    p.[Name], 
    p.[PrmTypeId], 
    p.[PrmValueTypeId], 
    p.[ReadOnly], 
    p.[Flags], 
    p.[PrmUid],
    pvs.Value as StrValue
    --,    pvi.Value as ImgValue
FROM Prm p
LEFT JOIN dbo.PrmValueStr pvs on pvs.PrmUid = p.PrmUid
--LEFT JOIN dbo.PrmValueImg pvi on pvi.PrmUid = p.PrmUid
WHERE 
    p.PrmTypeId = 1 AND p.[PrmValueTypeId] = 1 AND 
    {0}
</GetSQL>
      <GetSQLWhereString>p.[Name] like '*'</GetSQLWhereString>
      <EditSql>UPDATE [dbo].[Prm] 
SET 
    [Name]=N'$(Name)', 
	[PrmTypeId]=$(PrmTypeId), 
	[PrmValueTypeId]=$(PrmValueTypeId), 
	[ReadOnly]=$(ReadOnly), 
	[Flags]=$(Flags) 
	
WHERE 
    [PrmUid]= '$(PrmUid)'

UPDATE [dbo].[PrmValueStr] 
SET 
	[Value]= N'$(StrValue)'
WHERE 
	[PrmUid]= '$(PrmUid)'
</EditSql>
      <ImageBuffer>iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAcpSURBVFhHxZZrTJNnFMedS5bNLfuwLLtkX/ZpS3ZL9mXZNc5lF+dtMy6bUZk61A1BdDoUxAoqKnIbotwtICIIOArMcZFysQUKQocUpEBLARm03EUUaKH975y37bTQElyW7CR/IOW8z/93znnePs8iAP+rrD8WHou9k2t3bEm8rt8qrsfOi83wSGuGW3wdvomS6zfG1GznHGvqAuMhAZYE5mtRfgvIbwMymoGkGxZE15kRUWPGtrQ2XmyJNXWB8RAAj3z8Y9C7h/I7kaUyCQCXCEDcYMbZ2mmckptwotKM5fvjVnCu9ZEFhAuAxbuSa7bPbvUmavXaKDm+jVNio1gFd6p4Z3YX9uYZEFDUj82JSvxA+VsS67E5oR5uJBpN37ZklevRuABYIsrToOyBVottrQ5XmLH1/E1sEjdiW3o7PLO7CaAfolw1CjSU306ducmjAWIoP6TSCPdUtevRzAZ4ff2hp07mKLN9JR1OWx0sM+LYNRNS6LNkVpP1t59EY81ngH/yTZQ/JeQHXlYqlwbkuZGFYydsAIs/PZK39pxMq6rsMkFKlS8Pl2FdbJ3TVm9KqINbnAIbYxVYT/ouWoGvImVYf67RIf/nXD18C4chkt5DcRcg6zQhtLAF30VejSDPR9nYDvDEhhg5Clr1UBom8BtV4Vc4gs0pascFCUAkUeNKmwU5rcAFlQVx9Wb8Wj2NwLJJbE5qovxGuF+k/Kwu7Jbo4V88hlNVFlxqsaBtZBwdI6PYGCNj06fY2A7wzOrwcmynmXpltSL7Rg/Uw+Mo0AFxDUC8TYmNgG+OBpnUagkBpDFA3QzCac4BBMCiJiCBcmP/BM7WA1lqNh5Ds96ApBoDQsoG8WVoKZs+y8Z2gOe+iignag12pLdRxWrsIpCE6k7U60ch7ZwWFmWY+6NpokrbbaPRU8eGcVh6FzFKIOo67YMWM9qGx9Ck10Os6ENQsR4nSwyIlA1jVVgZmz7Hxg4AXtk67Mxsx08Z7QTSKoDsSG9BfKUOiu5BeivMCJIO4fsHR0Ot3vNPq83IJOPWwVE09d43Dpb2U+UDCCsfxJmq264B9ki6CKKDpIVnlpZgNPgxQ0OjacVWepVCS7Ro6BtCjd6EVHrVuCP3W00VD90m4z7B+PhVA06VDgjG4RWDiLg2hF+p+mjFHQIQRjAXYG9eD0F0w/u3TpIOuy6zOgimwzoeguENdqxQi1KNHrW9E0i/aYF6aEQwTqo14ETJgGAcStWyqd2YdbpyFHG1d10D+PzeRzv9Fn6W3BJA9uR0Y3cO7WYSQ+0iKE8ak0emlr6ENNib0wbN0CRiK/VkzG0epGodTSPlI4Ix60z1GOKv38NKZwBrIspoIw3AJ78X+1h5fwnam9tD77MjlDcBeV3uwrYMLVoMUwgm4zAydmYaRTNnsXl0zTgSlZNYaX0LZgGEl9FGGoZvQT/2X9HDh0UdYf3iBGo3AXnQBlTpjQhhcxemZ2nmLDaPofaLG4yuAQ6XjMKvaAh+BQMEQvqjHwcEGeZA7cvrhWdOD5S9RoTLyNiFqd04llofVzeBlMYZ5wCrw0txpHwcoqujQif8CeQgq3CQRkOaBbWfoHbn9qL21hQiK8dwxoWp3ZiVoJxCapMFK0KlTgBoYwRdm0BA6Rh14jZE1A2GOXR1BIeKR+ZA+ZL25RtQ1W1EVPU4zrowja+fFIxZ5xpMSGuBc4A11IGTldM4VnEPgeV3EVh6R4AJkBKQ9PYcKP+iEfgUDKGCDpjo2nuIcWGa+KdRMBbfmEYKVZ9Bp6uzETy7zEec5k07+zgdnyfkdIRWTOIogRwpY43TYUN6AEpEUH5FoyjVGcncuSkriWaerDLjAn1xpdIxfbiwB0t/EaexJxvbAfhkepW07HNRutwzswOhNRbqCF2z5HT+V0wInTlazrJCMZB/yR0Ua010IjqacrX2irnlXLVffhe+EGXI2cPm5XAa8tnMH7xEevvFNz/asDakSLcvvw8hCguCq6YJxAoTdG1S0FGCCiCQK5oZMr9vyhWfb7YIFV+iY/24dADrwop1L9CavLbNg70c7gP24A+fJr1Meuf1NR4H152WT/nTJgyhqxjvEYbgMbGOVEzRDWgGYlubzz9QcZTiLr45I596bbXHQV7LtiavbTW2xywADr7RPkZ6hvQK6cMPvKIy3OjCKYBUM4iJAIzUhSnktluoYrqckDFXzMbuKQ14z/N0Bj9rW4PX4jXn3padANiDkx8nPU96g7TsE99U+ZakRuF1Da6aQZCMLiZaa8VJqhn8dEGFpQfO2+fMz/CzvIbra/o8APbglj1Jsu6Ptz7asPyoROdOZfM+uEiVe19S47NAiY7/xzm2XH7Gsd3OYgEA9nDYH29+7XVwdZh0ZlWodOYN+ps/s/1v7pzni4cA4Ji9P963af45zxcPCWAP+/5gU9b8c54v/iXAfxSLFv0N7tIrfpE/3PoAAAAASUVORK5CYII=</ImageBuffer>
    </ItemChanger>
    <ItemChanger>
      <Name>LDS. Оборудование</Name>
      <GetSQL>                                           SELECT 'x' as [Select(x)], *
FROM 
	Eqp
WHERE
	{0}
</GetSQL>
      <GetSQLWhereString>[Name] = '*'</GetSQLWhereString>
      <EditSql />
      <ImageBuffer>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</ImageBuffer>
    </ItemChanger>
    <ItemChanger>
      <Name>LDS. Показатели</Name>
      <GetSQL>SELECT 'x' as [Select(x)], *
FROM [Test]
WHERE {0}
</GetSQL>
      <GetSQLWhereString>[Name] like '*Углеводород*'</GetSQLWhereString>
      <EditSql>UPDATE [TEST]
SET 
	[Description] = '$(Description)' 
WHERE
	[TestId] = '$(TestId)'

</EditSql>
      <ImageBuffer>iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAkJSURBVFhHrVcHVJRXGp3VJLtZG0oRlQVFLICKIojgGsVIsyDSFHVXjxs1ukpcC1JkAAs21kovUXBocSWGJkJAlDYjTUQMnaEjAbHgIAa5+d4/QA4REzfHe849r3/3e+373897DwxTcIndMs71Vtpo11SMPJzWx1SMIo7hp4K1sT6sr3TIh8Fwedf4E0zEJuIurhanQCxJxhskowe3KL0JIAFVnd8jrCgF1uF3Mdo1DfKuCSfYWKmJPwgZy/0y4/g3m4yCM1HXlYqnCEbBa0ukd85DbMcUxHdMx4kyK+zIPgqv0u3I7bRFW68A5U/vwTgkDeP4KU0ylgdl+sz9X/iTgn2Qmgw/EacymtD0+jFi2w8hu2sZyruuIrf1BW7WAtcrgbBSwK8Y+Nf3gFuJMs6JeYhv1SVnk3H0dg1kaGsU7IPVmE2p6ffAGPM9Y8fyExCQ14zkJiC44Ss09/qhpScCmc3ArXrghvgNBBU9nPjZ+xK4i7qwI+0ltmb+BxfJiQtVPDySuOCSSMw5IWNuP7bP/O/iE1l+fLNXVi0SGt7AXtiN4idAybNWFD8XIa3pFb6j2UdW9iLoESCouYa0Z3PxTaM5dqW3wSgG0IkUY49oMU5X8JD/fC9OZzyALD+5mdmWSrwbw+WdrnkZBQkhbAM2Z7xESQdQSPmCjnKUvj6MQgkf31STA+JS+JR04lrTTkQ02uB/rYqIahmGw4VbYRoXA5sUF3g85GFbtipSGu9jeaAQ8k7fejENqdTQGDHaNQGZLa+wLl2C8OqfkE+zz39WhIfdJP5qJ4SSdUh9thEpz7XpIKoh6vE0HCtxwf78E/Br4GF5XAKmhj3DhJAOjPTtxIY7mthXQCvRFs9dVaYhlXobw+T2fr1zdVg+XauhkS/x6cu9G9U91/pyg/Gg0xnmYRmQ2xu6i2lJJQfjL7LO1zM9sxu5AXvt92D1qpVYYWYGM1Mz+Hr7c/UMJsamMDYy7StR2cgEpiZmXD7ANxDmK1dhhSnVGRvDjOp9L0rHnhNdwzinuEymJZUcDJlxbok4W9TJdbYwN4elpSWXDwwko1T29w/gyhYWFli7di2XZ1izZs1AmeX7xzF4+/hgmeHnXP5q5RaM5aezbRgyNsjLuiXAo6ib62y5drAIE2VksLKywvr16xESEsKVra2tuToGzoG+/K8R3TSNrmQWc0BeKjkYCnLuididI+E6Mwf6BRlYvn9mTHDTpk2wtbWFQCCA3YYNAw4EBATAwtIK1lbW2L7OGLGhF1FeUYaVcXxcaRwDGTcRc0BBKjkYCgrkgFWqdAusaPa/5YCdnR0nzpzYuOkfsLJZx7UxeAdewa1D2ihw1YDIcTryHKah+L/r4FCijpFH8n7DAY8k2GYkcEZ+bwuYEwzBwSGwWb+RHNqImtDNkNQVcPUixxnAyzzgeS7QmYcSFw3wzryAyZEglPLVH5Dex1LZX6CgSA7oX3/IGbAwXz3oEK6hQxjgLz3NzBG21/2wtLRGspMuaq7YQURCmX67kXFQA0iaB0SN4tI8p1nY574PZUe1UCf4J4T8+SwyDnJCXtExOndqIMVXQpCvD12nlVi1wgwrzUwR5PdLDDAzMeGuYj+id2mg9upGmuk99NbGojnJDV0VN4Dby4GYiVzaTeX2ZHegPo5bmaqILyD00BOT7oATMnJbPA9P9MqG8MfePtODYZNMYXEI9DaUoNB9PhA/G7j/FfCY3ghFB2jm6kCiKqUzqbxfWk/tvQlayPVcijN2M7aR7kBkZMFh+oQjiVAPq4FGeAM0IxowO7IRWtGN0I5uwnyiVlQzDOPi4VqmCq8mHk5W86D57W24nXLDj4JFJKhCnELOqEF8ThcVJw1Qd0Gb3izkSOJkrr1FsAThO2ffID32mR4ISiw8jh//b5/QKV53MDeqAdpRddCJqodudD30+qhL9fMimqEheAqlsB7knNZE0SF1iA6qo/uHMCCZDl/yHBQ4k8j1SfC+NxwnQpaj6iStUIomcQa6SgXIdJyDHFdtiDwWPiHdgW1gyzFLyT22bYZfIbQi6jA3opYExUSWSvNa4bXQFDRgQthTlDtPBX6iR4HkAeh4A+lzIL5kgIiYSfCs5+EovQt4Z7Oxh8+X1PuSE+m0TayfhMb0PILQTWdQZGSfSvmP5ZQMlY8lYZp/EWZepe1gDKvmqB5ajZmhVVC7IsbYy20oc5kGPNpMXypb4K4BkKGDilMG8MsbhmM1tD2XL+JTj8Je06XzHCvP0lZkkhOsH+v/aCty+Aveigvs0aA0QmuZjfLxJEzxzofq5WpMvVyJqV9XQDWkAlOIysGVGBXcghpXciCfjIr0gGx9oh5qIw4gNHoSRlyKJ/H7vbxPPl0u2KJ8tv6GC5CzQNpPRCzQh9Bdf8jA9GeiykeyE42V3b9rVzl9B5P8SzExuAITA4kBZVDwL8dI/1pcOLkblXwN5DnPR3fq34F7ZLgjC2Veptjt7CAxN9Kxj9mm4ll6nq7t0yyuvSt1MTKdDZDjtggJDroZpPXWt4E9IJkTSkR9xS/PRanQaiidyYDi+TzIepdgtE8p/updAZ53HXjnn+DAEUe0R9Mq5JMTlXTlXtxDfeQ2VPpbQBy5g4uGXH3eYrREL0LY9jnxZHsZUZM4ijgk2HYw72YRl8itdz7zN8fw+5M9b2EyOaTsmQx5zztYcdQPZcdpG1opjD9YRnd+KVBHQUdCot0U2CT0yBE7SOupvbc1CbnHP4P3Fg32EzOG+BHxnWAHk92O8cTpxAXEpcTP+2hS4Di9si76S4r7PugtMEZD5FJ0ZdEboJhYZMilrNwSY8i147kvqqJ3I8tNr47GD/k4GQosTrDO7MqwVWEHh1GFuDDDRaet6vJnyD2mjytfzLkpdFtIS04frx/MgRo7uvcLuHrWzvrdddFtp3FsZd/5RnxfsCCiSNS/46rX7LBK1Ynyhjl8cqCdwnEDXTdKhVRm9ayd9aO8AXEC8a2v4h8BM8KMsRmx8KqWcEAnk61CjutCCjYLwcr9bX39Pph4P5gxtpxsm9jBYqd7CZGdE5ayMqtn7azfBxX/NdipZler/6ywlJXfcdp5vJ8BBxNxVM95msMAAAAASUVORK5CYII=</ImageBuffer>
    </ItemChanger>
    <ItemChanger>
      <Name>LDS. Методики</Name>
      <GetSQL>SELECT 
    'x' AS [Select(x)]
    , sd.[Code] AS [TechCode]
    --, sd.[Name]
    --, sdv.Code AS [VerCode]
    --, sdv.Name AS [VerName]
    --, sdv.StdDocVerId AS [StdDocVerId]
    , t.Code AS [TestCode]
    , t.Name AS [TestName]
    , ttv.Name AS [ReportName]
    , tta.Digits
    , tt.ResultSource
    , tt.InAccrScope
    , tt.AccrRange
    , t.TestType
    --, ttv.[Order]
    , eu.Abbreviation


    --, *
FROM 
	[dbo].[StdDoc] sd
	LEFT JOIN [StdDocVer] sdv ON sdv.[StdDocUid] = sd.[StdDocUid]
	INNER JOIN TechTest tt ON tt.TechUid = sd.StdDocUid 
	INNER JOIN Test t ON t.TestId = tt.TestId
	LEFT JOIN TechTestVer ttv ON ttv.TechTestUid = tt.TechTestUid
	LEFT JOIN TechTestAnalog tta ON tta.TechTestVerId = ttv.TechTestVerId
	LEFT JOIN EngUnit eu ON tta.EngUnitId = eu.EngUnitId
WHERE   
	sd.[StdDocType] = 0 AND {0}
ORDER BY ttv.[Order]</GetSQL>
      <GetSQLWhereString>sd.[Code] LIKE '%2177%'</GetSQLWhereString>
      <CreateSql>DECLARE 

exec dbo.StdDoc_Insert  @StdDocUid='FDAF9AE4-F145-497B-BAC7-83AB10A53BB4',@Code=N'TEST',@Name=N'TEST',@StdDocType=0,@DeveloperUid=NULL,@GovRegulation=0,@OrderNum=NULL,@InAccrScope=0</CreateSql>
      <ImageBuffer>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</ImageBuffer>
    </ItemChanger>
  </Items>
  <SelectedObjectIndex>22</SelectedObjectIndex>
  <EditorType>1</EditorType>
  <CurrentVersion>1.4.3.4</CurrentVersion>
</ItemChangerList>
=======
  </Items>
  <SelectedObjectIndex>0</SelectedObjectIndex>
  <EditorType>4</EditorType>
</ItemChangerList>
>>>>>>> f9e2b8ba9e83f893be806983a34e31492008d1fa
